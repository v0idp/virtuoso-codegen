// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.NoteBoardNoteNeighbours
#include "VROSC/NoteBoardNoteNeighbours.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: NoteBoardNote
  class NoteBoardNote;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::NoteBoardNoteNeighbours::Axis);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::NoteBoardNoteNeighbours::Axis*, "VROSC", "NoteBoardNoteNeighbours/Axis");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.NoteBoardNoteNeighbours/VROSC.Axis
  // [TokenAttribute] Offset: FFFFFFFF
  class NoteBoardNoteNeighbours::Axis : public ::Il2CppObject {
    public:
    public:
    // private VROSC.NoteBoardNote[] <Neighbours>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::VROSC::NoteBoardNote*> Neighbours;
    // Field size check
    static_assert(sizeof(::ArrayW<::VROSC::NoteBoardNote*>) == 0x8);
    // private VROSC.NoteBoardNote[] <InvertedNeighbours>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::VROSC::NoteBoardNote*> InvertedNeighbours;
    // Field size check
    static_assert(sizeof(::ArrayW<::VROSC::NoteBoardNote*>) == 0x8);
    public:
    // Get instance field reference: private VROSC.NoteBoardNote[] <Neighbours>k__BackingField
    [[deprecated]] ::ArrayW<::VROSC::NoteBoardNote*>& dyn_$Neighbours$k__BackingField();
    // Get instance field reference: private VROSC.NoteBoardNote[] <InvertedNeighbours>k__BackingField
    [[deprecated]] ::ArrayW<::VROSC::NoteBoardNote*>& dyn_$InvertedNeighbours$k__BackingField();
    // public VROSC.NoteBoardNote[] get_Neighbours()
    // Offset: 0x1966008
    ::ArrayW<::VROSC::NoteBoardNote*> get_Neighbours();
    // private System.Void set_Neighbours(VROSC.NoteBoardNote[] value)
    // Offset: 0x1966000
    void set_Neighbours(::ArrayW<::VROSC::NoteBoardNote*> value);
    // public VROSC.NoteBoardNote[] get_InvertedNeighbours()
    // Offset: 0x1966018
    ::ArrayW<::VROSC::NoteBoardNote*> get_InvertedNeighbours();
    // private System.Void set_InvertedNeighbours(VROSC.NoteBoardNote[] value)
    // Offset: 0x1966010
    void set_InvertedNeighbours(::ArrayW<::VROSC::NoteBoardNote*> value);
    // public System.Void .ctor(VROSC.NoteBoardNote up, VROSC.NoteBoardNote down)
    // Offset: 0x1966020
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NoteBoardNoteNeighbours::Axis* New_ctor(::VROSC::NoteBoardNote* up, ::VROSC::NoteBoardNote* down) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardNoteNeighbours::Axis::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NoteBoardNoteNeighbours::Axis*, creationType>(up, down)));
    }
    // public System.Void AddInvertedNeighBours(VROSC.NoteBoardNoteNeighbours/VROSC.Axis firstAxis, VROSC.NoteBoardNoteNeighbours/VROSC.Axis secondAxis)
    // Offset: 0x1966214
    void AddInvertedNeighBours(::VROSC::NoteBoardNoteNeighbours::Axis* firstAxis, ::VROSC::NoteBoardNoteNeighbours::Axis* secondAxis);
  }; // VROSC.NoteBoardNoteNeighbours/VROSC.Axis
  #pragma pack(pop)
  static check_size<sizeof(NoteBoardNoteNeighbours::Axis), 24 + sizeof(::ArrayW<::VROSC::NoteBoardNote*>)> __VROSC_NoteBoardNoteNeighbours_AxisSizeCheck;
  static_assert(sizeof(NoteBoardNoteNeighbours::Axis) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::NoteBoardNoteNeighbours::Axis::get_Neighbours
// Il2CppName: get_Neighbours
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::VROSC::NoteBoardNote*> (VROSC::NoteBoardNoteNeighbours::Axis::*)()>(&VROSC::NoteBoardNoteNeighbours::Axis::get_Neighbours)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::NoteBoardNoteNeighbours::Axis*), "get_Neighbours", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::NoteBoardNoteNeighbours::Axis::set_Neighbours
// Il2CppName: set_Neighbours
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::NoteBoardNoteNeighbours::Axis::*)(::ArrayW<::VROSC::NoteBoardNote*>)>(&VROSC::NoteBoardNoteNeighbours::Axis::set_Neighbours)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("VROSC", "NoteBoardNote"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::NoteBoardNoteNeighbours::Axis*), "set_Neighbours", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::NoteBoardNoteNeighbours::Axis::get_InvertedNeighbours
// Il2CppName: get_InvertedNeighbours
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::VROSC::NoteBoardNote*> (VROSC::NoteBoardNoteNeighbours::Axis::*)()>(&VROSC::NoteBoardNoteNeighbours::Axis::get_InvertedNeighbours)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::NoteBoardNoteNeighbours::Axis*), "get_InvertedNeighbours", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::NoteBoardNoteNeighbours::Axis::set_InvertedNeighbours
// Il2CppName: set_InvertedNeighbours
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::NoteBoardNoteNeighbours::Axis::*)(::ArrayW<::VROSC::NoteBoardNote*>)>(&VROSC::NoteBoardNoteNeighbours::Axis::set_InvertedNeighbours)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("VROSC", "NoteBoardNote"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::NoteBoardNoteNeighbours::Axis*), "set_InvertedNeighbours", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::NoteBoardNoteNeighbours::Axis::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::NoteBoardNoteNeighbours::Axis::AddInvertedNeighBours
// Il2CppName: AddInvertedNeighBours
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::NoteBoardNoteNeighbours::Axis::*)(::VROSC::NoteBoardNoteNeighbours::Axis*, ::VROSC::NoteBoardNoteNeighbours::Axis*)>(&VROSC::NoteBoardNoteNeighbours::Axis::AddInvertedNeighBours)> {
  static const MethodInfo* get() {
    static auto* firstAxis = &::il2cpp_utils::GetClassFromName("VROSC", "NoteBoardNoteNeighbours/Axis")->byval_arg;
    static auto* secondAxis = &::il2cpp_utils::GetClassFromName("VROSC", "NoteBoardNoteNeighbours/Axis")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::NoteBoardNoteNeighbours::Axis*), "AddInvertedNeighBours", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{firstAxis, secondAxis});
  }
};
