// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.AuthenticationManager
#include "VROSC/AuthenticationManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::AuthenticationManager::FirebaseUserData);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::AuthenticationManager::FirebaseUserData*, "VROSC", "AuthenticationManager/FirebaseUserData");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x22
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.AuthenticationManager/VROSC.FirebaseUserData
  // [TokenAttribute] Offset: FFFFFFFF
  class AuthenticationManager::FirebaseUserData : public ::Il2CppObject {
    public:
    public:
    // public System.String UserId
    // Size: 0x8
    // Offset: 0x10
    ::StringW UserId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String Email
    // Size: 0x8
    // Offset: 0x18
    ::StringW Email;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean IsLoggedIn
    // Size: 0x1
    // Offset: 0x20
    bool IsLoggedIn;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean IsVerified
    // Size: 0x1
    // Offset: 0x21
    bool IsVerified;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public System.String UserId
    [[deprecated]] ::StringW& dyn_UserId();
    // Get instance field reference: public System.String Email
    [[deprecated]] ::StringW& dyn_Email();
    // Get instance field reference: public System.Boolean IsLoggedIn
    [[deprecated]] bool& dyn_IsLoggedIn();
    // Get instance field reference: public System.Boolean IsVerified
    [[deprecated]] bool& dyn_IsVerified();
    // public System.Boolean get_HasData()
    // Offset: 0x957AB4
    bool get_HasData();
    // public System.Void .ctor()
    // Offset: 0x957AD8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AuthenticationManager::FirebaseUserData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::FirebaseUserData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AuthenticationManager::FirebaseUserData*, creationType>()));
    }
  }; // VROSC.AuthenticationManager/VROSC.FirebaseUserData
  #pragma pack(pop)
  static check_size<sizeof(AuthenticationManager::FirebaseUserData), 33 + sizeof(bool)> __VROSC_AuthenticationManager_FirebaseUserDataSizeCheck;
  static_assert(sizeof(AuthenticationManager::FirebaseUserData) == 0x22);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::AuthenticationManager::FirebaseUserData::get_HasData
// Il2CppName: get_HasData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::AuthenticationManager::FirebaseUserData::*)()>(&VROSC::AuthenticationManager::FirebaseUserData::get_HasData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager::FirebaseUserData*), "get_HasData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::FirebaseUserData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
