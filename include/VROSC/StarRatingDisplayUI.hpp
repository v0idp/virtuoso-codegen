// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshPro
  class TextMeshPro;
}
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: AdjustableMesh
  class AdjustableMesh;
  // Forward declaring type: MinMaxFloat
  class MinMaxFloat;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: StarRatingDisplayUI
  class StarRatingDisplayUI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::StarRatingDisplayUI);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::StarRatingDisplayUI*, "VROSC", "StarRatingDisplayUI");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x34
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.StarRatingDisplayUI
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExecuteInEditMode] Offset: FFFFFFFF
  class StarRatingDisplayUI : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private TMPro.TextMeshPro _exactResultText
    // Size: 0x8
    // Offset: 0x18
    ::TMPro::TextMeshPro* exactResultText;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshPro*) == 0x8);
    // private VROSC.AdjustableMesh _starMesh
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::AdjustableMesh* starMesh;
    // Field size check
    static_assert(sizeof(::VROSC::AdjustableMesh*) == 0x8);
    // private VROSC.MinMaxFloat _uvRange
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::MinMaxFloat* uvRange;
    // Field size check
    static_assert(sizeof(::VROSC::MinMaxFloat*) == 0x8);
    // [RangeAttribute] Offset: 0x789510
    // [HeaderAttribute] Offset: 0x789510
    // private System.Single _previewValue
    // Size: 0x4
    // Offset: 0x30
    float previewValue;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private TMPro.TextMeshPro _exactResultText
    [[deprecated]] ::TMPro::TextMeshPro*& dyn__exactResultText();
    // Get instance field reference: private VROSC.AdjustableMesh _starMesh
    [[deprecated]] ::VROSC::AdjustableMesh*& dyn__starMesh();
    // Get instance field reference: private VROSC.MinMaxFloat _uvRange
    [[deprecated]] ::VROSC::MinMaxFloat*& dyn__uvRange();
    // Get instance field reference: private System.Single _previewValue
    [[deprecated]] float& dyn__previewValue();
    // public System.Void SetValue(System.Single value)
    // Offset: 0x192F644
    void SetValue(float value);
    // private System.Void UpdateSlider(System.Single value)
    // Offset: 0x192F71C
    void UpdateSlider(float value);
    // public System.Void .ctor()
    // Offset: 0x192F7FC
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StarRatingDisplayUI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::StarRatingDisplayUI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StarRatingDisplayUI*, creationType>()));
    }
  }; // VROSC.StarRatingDisplayUI
  #pragma pack(pop)
  static check_size<sizeof(StarRatingDisplayUI), 48 + sizeof(float)> __VROSC_StarRatingDisplayUISizeCheck;
  static_assert(sizeof(StarRatingDisplayUI) == 0x34);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::StarRatingDisplayUI::SetValue
// Il2CppName: SetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::StarRatingDisplayUI::*)(float)>(&VROSC::StarRatingDisplayUI::SetValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::StarRatingDisplayUI*), "SetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::StarRatingDisplayUI::UpdateSlider
// Il2CppName: UpdateSlider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::StarRatingDisplayUI::*)(float)>(&VROSC::StarRatingDisplayUI::UpdateSlider)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::StarRatingDisplayUI*), "UpdateSlider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::StarRatingDisplayUI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
