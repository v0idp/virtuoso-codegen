// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: BearVisualizer
  class BearVisualizer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::BearVisualizer);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::BearVisualizer*, "VROSC", "BearVisualizer");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.BearVisualizer
  // [TokenAttribute] Offset: FFFFFFFF
  class BearVisualizer : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::VROSC::BearVisualizer::BeatGradient
    class BeatGradient;
    public:
    // private VROSC.BearVisualizer/VROSC.BeatGradient[] _beatGradients
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::VROSC::BearVisualizer::BeatGradient*> beatGradients;
    // Field size check
    static_assert(sizeof(::ArrayW<::VROSC::BearVisualizer::BeatGradient*>) == 0x8);
    // [RangeAttribute] Offset: 0x78C608
    // private System.Single _darkenOnMirror
    // Size: 0x4
    // Offset: 0x20
    float darkenOnMirror;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.BearVisualizer/VROSC.BeatGradient[] _beatGradients
    [[deprecated]] ::ArrayW<::VROSC::BearVisualizer::BeatGradient*>& dyn__beatGradients();
    // Get instance field reference: private System.Single _darkenOnMirror
    [[deprecated]] float& dyn__darkenOnMirror();
    // private System.Void OnEnable()
    // Offset: 0x974570
    void OnEnable();
    // private System.Void SendBeat(System.Int32 beat)
    // Offset: 0x97465C
    void SendBeat(int beat);
    // private System.Void OnDisable()
    // Offset: 0x97478C
    void OnDisable();
    // public System.Void .ctor()
    // Offset: 0x974878
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BearVisualizer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BearVisualizer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BearVisualizer*, creationType>()));
    }
  }; // VROSC.BearVisualizer
  #pragma pack(pop)
  static check_size<sizeof(BearVisualizer), 32 + sizeof(float)> __VROSC_BearVisualizerSizeCheck;
  static_assert(sizeof(BearVisualizer) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::BearVisualizer::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::BearVisualizer::*)()>(&VROSC::BearVisualizer::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::BearVisualizer*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::BearVisualizer::SendBeat
// Il2CppName: SendBeat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::BearVisualizer::*)(int)>(&VROSC::BearVisualizer::SendBeat)> {
  static const MethodInfo* get() {
    static auto* beat = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::BearVisualizer*), "SendBeat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{beat});
  }
};
// Writing MetadataGetter for method: VROSC::BearVisualizer::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::BearVisualizer::*)()>(&VROSC::BearVisualizer::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::BearVisualizer*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::BearVisualizer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
