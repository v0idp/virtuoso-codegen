// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: SampleGroup
  class SampleGroup;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AudioClip
  class AudioClip;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: SampleDatabase
  class SampleDatabase;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::SampleDatabase);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::SampleDatabase*, "VROSC", "SampleDatabase");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.SampleDatabase
  // [TokenAttribute] Offset: FFFFFFFF
  // [CreateAssetMenuAttribute] Offset: 77F77C
  class SampleDatabase : public ::UnityEngine::ScriptableObject {
    public:
    public:
    // private VROSC.SampleGroup[] _samplegroups
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::VROSC::SampleGroup*> samplegroups;
    // Field size check
    static_assert(sizeof(::ArrayW<::VROSC::SampleGroup*>) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.SampleGroup[] _samplegroups
    [[deprecated]] ::ArrayW<::VROSC::SampleGroup*>& dyn__samplegroups();
    // public VROSC.SampleGroup GetGroup(System.Int32 groupId)
    // Offset: 0xDDB9E0
    ::VROSC::SampleGroup* GetGroup(int groupId);
    // public System.Int32 GetGroupSampleId(System.Int32 groupId, System.Int32 index)
    // Offset: 0xDDBB04
    int GetGroupSampleId(int groupId, int index);
    // public UnityEngine.AudioClip GetSampleAudioClip(System.Int32 sampleId)
    // Offset: 0xDDBC8C
    ::UnityEngine::AudioClip* GetSampleAudioClip(int sampleId);
    // public System.Void .ctor()
    // Offset: 0xDDBF14
    // Implemented from: UnityEngine.ScriptableObject
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SampleDatabase* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SampleDatabase::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SampleDatabase*, creationType>()));
    }
  }; // VROSC.SampleDatabase
  #pragma pack(pop)
  static check_size<sizeof(SampleDatabase), 24 + sizeof(::ArrayW<::VROSC::SampleGroup*>)> __VROSC_SampleDatabaseSizeCheck;
  static_assert(sizeof(SampleDatabase) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::SampleDatabase::GetGroup
// Il2CppName: GetGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::SampleGroup* (VROSC::SampleDatabase::*)(int)>(&VROSC::SampleDatabase::GetGroup)> {
  static const MethodInfo* get() {
    static auto* groupId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SampleDatabase*), "GetGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupId});
  }
};
// Writing MetadataGetter for method: VROSC::SampleDatabase::GetGroupSampleId
// Il2CppName: GetGroupSampleId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::SampleDatabase::*)(int, int)>(&VROSC::SampleDatabase::GetGroupSampleId)> {
  static const MethodInfo* get() {
    static auto* groupId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SampleDatabase*), "GetGroupSampleId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupId, index});
  }
};
// Writing MetadataGetter for method: VROSC::SampleDatabase::GetSampleAudioClip
// Il2CppName: GetSampleAudioClip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AudioClip* (VROSC::SampleDatabase::*)(int)>(&VROSC::SampleDatabase::GetSampleAudioClip)> {
  static const MethodInfo* get() {
    static auto* sampleId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SampleDatabase*), "GetSampleAudioClip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sampleId});
  }
};
// Writing MetadataGetter for method: VROSC::SampleDatabase::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
