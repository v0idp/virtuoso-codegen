// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: VROSC.HandType
#include "VROSC/HandType.hpp"
// Completed includes
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: HapticRequest
  struct HapticRequest;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::VROSC::HapticRequest, "VROSC", "HapticRequest");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0xC
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: VROSC.HapticRequest
  // [TokenAttribute] Offset: FFFFFFFF
  struct HapticRequest/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Single Amplitude
    // Size: 0x4
    // Offset: 0x0
    float Amplitude;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single Frequency
    // Size: 0x4
    // Offset: 0x4
    float Frequency;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public VROSC.HandType Hand
    // Size: 0x4
    // Offset: 0x8
    ::VROSC::HandType Hand;
    // Field size check
    static_assert(sizeof(::VROSC::HandType) == 0x4);
    public:
    // Creating value type constructor for type: HapticRequest
    constexpr HapticRequest(float Amplitude_ = {}, float Frequency_ = {}, ::VROSC::HandType Hand_ = {}) noexcept : Amplitude{Amplitude_}, Frequency{Frequency_}, Hand{Hand_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Single Amplitude
    [[deprecated]] float& dyn_Amplitude();
    // Get instance field reference: public System.Single Frequency
    [[deprecated]] float& dyn_Frequency();
    // Get instance field reference: public VROSC.HandType Hand
    [[deprecated]] ::VROSC::HandType& dyn_Hand();
    // public System.Void .ctor(System.Single amplitude, System.Single frequency, VROSC.HandType hand)
    // Offset: 0x19ABB88
    // ABORTED: conflicts with another method.  HapticRequest(float amplitude, float frequency, ::VROSC::HandType hand);
  }; // VROSC.HapticRequest
  #pragma pack(pop)
  static check_size<sizeof(HapticRequest), 8 + sizeof(::VROSC::HandType)> __VROSC_HapticRequestSizeCheck;
  static_assert(sizeof(HapticRequest) == 0xC);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::HapticRequest::HapticRequest
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
