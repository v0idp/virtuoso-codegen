// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: VROSC.Error
#include "VROSC/Error.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: CloudDataManager
  class CloudDataManager;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: CloudStateManager
  class CloudStateManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::CloudStateManager);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::CloudStateManager*, "VROSC", "CloudStateManager");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.CloudStateManager
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: 668944
  class CloudStateManager : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::VROSC::CloudStateManager::DownloadState
    struct DownloadState;
    // Nested type: ::VROSC::CloudStateManager::UploadState
    struct UploadState;
    // Nested type: ::VROSC::CloudStateManager::$CoDownloadSession$d__20
    class $CoDownloadSession$d__20;
    // Nested type: ::VROSC::CloudStateManager::$$c__DisplayClass22_0
    class $$c__DisplayClass22_0;
    // Nested type: ::VROSC::CloudStateManager::$$c
    class $$c;
    // Nested type: ::VROSC::CloudStateManager::$CoUploadSession$d__22
    class $CoUploadSession$d__22;
    // Nested type: ::VROSC::CloudStateManager::$CoDeleteSession$d__25
    class $CoDeleteSession$d__25;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: VROSC.CloudStateManager/VROSC.DownloadState
    // [TokenAttribute] Offset: FFFFFFFF
    struct DownloadState/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: DownloadState
      constexpr DownloadState(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public VROSC.CloudStateManager/VROSC.DownloadState None
      static constexpr const int None = 0;
      // Get static field: static public VROSC.CloudStateManager/VROSC.DownloadState None
      static ::VROSC::CloudStateManager::DownloadState _get_None();
      // Set static field: static public VROSC.CloudStateManager/VROSC.DownloadState None
      static void _set_None(::VROSC::CloudStateManager::DownloadState value);
      // static field const value: static public VROSC.CloudStateManager/VROSC.DownloadState DownloadingSession
      static constexpr const int DownloadingSession = 1;
      // Get static field: static public VROSC.CloudStateManager/VROSC.DownloadState DownloadingSession
      static ::VROSC::CloudStateManager::DownloadState _get_DownloadingSession();
      // Set static field: static public VROSC.CloudStateManager/VROSC.DownloadState DownloadingSession
      static void _set_DownloadingSession(::VROSC::CloudStateManager::DownloadState value);
      // static field const value: static public VROSC.CloudStateManager/VROSC.DownloadState Waiting
      static constexpr const int Waiting = 2;
      // Get static field: static public VROSC.CloudStateManager/VROSC.DownloadState Waiting
      static ::VROSC::CloudStateManager::DownloadState _get_Waiting();
      // Set static field: static public VROSC.CloudStateManager/VROSC.DownloadState Waiting
      static void _set_Waiting(::VROSC::CloudStateManager::DownloadState value);
      // static field const value: static public VROSC.CloudStateManager/VROSC.DownloadState DownloadedSession
      static constexpr const int DownloadedSession = 3;
      // Get static field: static public VROSC.CloudStateManager/VROSC.DownloadState DownloadedSession
      static ::VROSC::CloudStateManager::DownloadState _get_DownloadedSession();
      // Set static field: static public VROSC.CloudStateManager/VROSC.DownloadState DownloadedSession
      static void _set_DownloadedSession(::VROSC::CloudStateManager::DownloadState value);
      // static field const value: static public VROSC.CloudStateManager/VROSC.DownloadState Abort
      static constexpr const int Abort = 4;
      // Get static field: static public VROSC.CloudStateManager/VROSC.DownloadState Abort
      static ::VROSC::CloudStateManager::DownloadState _get_Abort();
      // Set static field: static public VROSC.CloudStateManager/VROSC.DownloadState Abort
      static void _set_Abort(::VROSC::CloudStateManager::DownloadState value);
      // Get instance field reference: public System.Int32 value__
      int& dyn_value__();
    }; // VROSC.CloudStateManager/VROSC.DownloadState
    #pragma pack(pop)
    static check_size<sizeof(CloudStateManager::DownloadState), 0 + sizeof(int)> __VROSC_CloudStateManager_DownloadStateSizeCheck;
    static_assert(sizeof(CloudStateManager::DownloadState) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: VROSC.CloudStateManager/VROSC.UploadState
    // [TokenAttribute] Offset: FFFFFFFF
    struct UploadState/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: UploadState
      constexpr UploadState(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public VROSC.CloudStateManager/VROSC.UploadState None
      static constexpr const int None = 0;
      // Get static field: static public VROSC.CloudStateManager/VROSC.UploadState None
      static ::VROSC::CloudStateManager::UploadState _get_None();
      // Set static field: static public VROSC.CloudStateManager/VROSC.UploadState None
      static void _set_None(::VROSC::CloudStateManager::UploadState value);
      // static field const value: static public VROSC.CloudStateManager/VROSC.UploadState UploadingSession
      static constexpr const int UploadingSession = 1;
      // Get static field: static public VROSC.CloudStateManager/VROSC.UploadState UploadingSession
      static ::VROSC::CloudStateManager::UploadState _get_UploadingSession();
      // Set static field: static public VROSC.CloudStateManager/VROSC.UploadState UploadingSession
      static void _set_UploadingSession(::VROSC::CloudStateManager::UploadState value);
      // static field const value: static public VROSC.CloudStateManager/VROSC.UploadState Waiting
      static constexpr const int Waiting = 2;
      // Get static field: static public VROSC.CloudStateManager/VROSC.UploadState Waiting
      static ::VROSC::CloudStateManager::UploadState _get_Waiting();
      // Set static field: static public VROSC.CloudStateManager/VROSC.UploadState Waiting
      static void _set_Waiting(::VROSC::CloudStateManager::UploadState value);
      // static field const value: static public VROSC.CloudStateManager/VROSC.UploadState UploadedSession
      static constexpr const int UploadedSession = 3;
      // Get static field: static public VROSC.CloudStateManager/VROSC.UploadState UploadedSession
      static ::VROSC::CloudStateManager::UploadState _get_UploadedSession();
      // Set static field: static public VROSC.CloudStateManager/VROSC.UploadState UploadedSession
      static void _set_UploadedSession(::VROSC::CloudStateManager::UploadState value);
      // static field const value: static public VROSC.CloudStateManager/VROSC.UploadState Abort
      static constexpr const int Abort = 4;
      // Get static field: static public VROSC.CloudStateManager/VROSC.UploadState Abort
      static ::VROSC::CloudStateManager::UploadState _get_Abort();
      // Set static field: static public VROSC.CloudStateManager/VROSC.UploadState Abort
      static void _set_Abort(::VROSC::CloudStateManager::UploadState value);
      // Get instance field reference: public System.Int32 value__
      int& dyn_value__();
    }; // VROSC.CloudStateManager/VROSC.UploadState
    #pragma pack(pop)
    static check_size<sizeof(CloudStateManager::UploadState), 0 + sizeof(int)> __VROSC_CloudStateManager_UploadStateSizeCheck;
    static_assert(sizeof(CloudStateManager::UploadState) == 0x4);
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private VROSC.CloudDataManager _cloudDataManager
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::CloudDataManager* cloudDataManager;
    // Field size check
    static_assert(sizeof(::VROSC::CloudDataManager*) == 0x8);
    // private VROSC.CloudStateManager/VROSC.DownloadState _currentDownloadState
    // Size: 0x4
    // Offset: 0x20
    ::VROSC::CloudStateManager::DownloadState currentDownloadState;
    // Field size check
    static_assert(sizeof(::VROSC::CloudStateManager::DownloadState) == 0x4);
    // private VROSC.CloudStateManager/VROSC.UploadState _currentUploadState
    // Size: 0x4
    // Offset: 0x24
    ::VROSC::CloudStateManager::UploadState currentUploadState;
    // Field size check
    static_assert(sizeof(::VROSC::CloudStateManager::UploadState) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get static field: static public System.Action`1<System.String> OnDownloadSessionFromCloudSuccess
    static ::System::Action_1<::StringW>* _get_OnDownloadSessionFromCloudSuccess();
    // Set static field: static public System.Action`1<System.String> OnDownloadSessionFromCloudSuccess
    static void _set_OnDownloadSessionFromCloudSuccess(::System::Action_1<::StringW>* value);
    // Get static field: static public System.Action`2<System.String,VROSC.Error> OnDownloadSessionFromCloudFailure
    static ::System::Action_2<::StringW, ::VROSC::Error>* _get_OnDownloadSessionFromCloudFailure();
    // Set static field: static public System.Action`2<System.String,VROSC.Error> OnDownloadSessionFromCloudFailure
    static void _set_OnDownloadSessionFromCloudFailure(::System::Action_2<::StringW, ::VROSC::Error>* value);
    // Get static field: static public System.Action`2<System.String,System.Single> OnDownloadSessionFromCloudProgress
    static ::System::Action_2<::StringW, float>* _get_OnDownloadSessionFromCloudProgress();
    // Set static field: static public System.Action`2<System.String,System.Single> OnDownloadSessionFromCloudProgress
    static void _set_OnDownloadSessionFromCloudProgress(::System::Action_2<::StringW, float>* value);
    // Get static field: static public System.Action`1<System.String> OnUploadSessionToCloudSuccess
    static ::System::Action_1<::StringW>* _get_OnUploadSessionToCloudSuccess();
    // Set static field: static public System.Action`1<System.String> OnUploadSessionToCloudSuccess
    static void _set_OnUploadSessionToCloudSuccess(::System::Action_1<::StringW>* value);
    // Get static field: static public System.Action`2<System.String,VROSC.Error> OnUploadSessionToCloudFailure
    static ::System::Action_2<::StringW, ::VROSC::Error>* _get_OnUploadSessionToCloudFailure();
    // Set static field: static public System.Action`2<System.String,VROSC.Error> OnUploadSessionToCloudFailure
    static void _set_OnUploadSessionToCloudFailure(::System::Action_2<::StringW, ::VROSC::Error>* value);
    // Get static field: static public System.Action`2<System.String,System.Single> OnUploadSessionToCloudProgress
    static ::System::Action_2<::StringW, float>* _get_OnUploadSessionToCloudProgress();
    // Set static field: static public System.Action`2<System.String,System.Single> OnUploadSessionToCloudProgress
    static void _set_OnUploadSessionToCloudProgress(::System::Action_2<::StringW, float>* value);
    // Get static field: static public System.Action`2<System.String,System.Single> OnUploadSessionPreviewToCloudProgress
    static ::System::Action_2<::StringW, float>* _get_OnUploadSessionPreviewToCloudProgress();
    // Set static field: static public System.Action`2<System.String,System.Single> OnUploadSessionPreviewToCloudProgress
    static void _set_OnUploadSessionPreviewToCloudProgress(::System::Action_2<::StringW, float>* value);
    // Get static field: static public System.Action`1<System.String> OnDeleteSessionFromCloudSuccess
    static ::System::Action_1<::StringW>* _get_OnDeleteSessionFromCloudSuccess();
    // Set static field: static public System.Action`1<System.String> OnDeleteSessionFromCloudSuccess
    static void _set_OnDeleteSessionFromCloudSuccess(::System::Action_1<::StringW>* value);
    // Get static field: static public System.Action`2<System.String,VROSC.Error> OnDeleteSessionFromCloudFailure
    static ::System::Action_2<::StringW, ::VROSC::Error>* _get_OnDeleteSessionFromCloudFailure();
    // Set static field: static public System.Action`2<System.String,VROSC.Error> OnDeleteSessionFromCloudFailure
    static void _set_OnDeleteSessionFromCloudFailure(::System::Action_2<::StringW, ::VROSC::Error>* value);
    // Get static field: static public System.Action`1<System.String> OnDownloadPreviewSuccess
    static ::System::Action_1<::StringW>* _get_OnDownloadPreviewSuccess();
    // Set static field: static public System.Action`1<System.String> OnDownloadPreviewSuccess
    static void _set_OnDownloadPreviewSuccess(::System::Action_1<::StringW>* value);
    // Get static field: static public System.Action`2<System.String,VROSC.Error> OnDownloadPreviewFailure
    static ::System::Action_2<::StringW, ::VROSC::Error>* _get_OnDownloadPreviewFailure();
    // Set static field: static public System.Action`2<System.String,VROSC.Error> OnDownloadPreviewFailure
    static void _set_OnDownloadPreviewFailure(::System::Action_2<::StringW, ::VROSC::Error>* value);
    // Get static field: static public System.Action`2<System.String,System.Single> OnDownloadPreviewProgress
    static ::System::Action_2<::StringW, float>* _get_OnDownloadPreviewProgress();
    // Set static field: static public System.Action`2<System.String,System.Single> OnDownloadPreviewProgress
    static void _set_OnDownloadPreviewProgress(::System::Action_2<::StringW, float>* value);
    // Get instance field reference: private VROSC.CloudDataManager _cloudDataManager
    ::VROSC::CloudDataManager*& dyn__cloudDataManager();
    // Get instance field reference: private VROSC.CloudStateManager/VROSC.DownloadState _currentDownloadState
    ::VROSC::CloudStateManager::DownloadState& dyn__currentDownloadState();
    // Get instance field reference: private VROSC.CloudStateManager/VROSC.UploadState _currentUploadState
    ::VROSC::CloudStateManager::UploadState& dyn__currentUploadState();
    // private System.Void Awake()
    // Offset: 0x1332F54
    void Awake();
    // private System.Void OnDestroy()
    // Offset: 0x1332FF0
    void OnDestroy();
    // public System.Void DownloadSessionFromCloud(System.String sessionName, System.String userId, System.Boolean isCommunity)
    // Offset: 0x1332FF4
    void DownloadSessionFromCloud(::StringW sessionName, ::StringW userId, bool isCommunity);
    // private System.Collections.IEnumerator CoDownloadSession(System.String sessionName, System.String userId, System.Boolean isCommunity)
    // Offset: 0x1333150
    ::System::Collections::IEnumerator* CoDownloadSession(::StringW sessionName, ::StringW userId, bool isCommunity);
    // public System.Void UploadSessionToCloud(System.String sessionName, System.Boolean isCommunity, System.Boolean hasPreview)
    // Offset: 0x13331E4
    void UploadSessionToCloud(::StringW sessionName, bool isCommunity, bool hasPreview);
    // private System.Collections.IEnumerator CoUploadSession(System.String sessionName, System.Boolean isCommunity, System.Boolean hasPreview)
    // Offset: 0x1333340
    ::System::Collections::IEnumerator* CoUploadSession(::StringW sessionName, bool isCommunity, bool hasPreview);
    // public System.Void DeleteSessionFromCloud(System.String sessionName, System.Boolean isCommunity, System.Boolean isOgg)
    // Offset: 0x13333D8
    void DeleteSessionFromCloud(::StringW sessionName, bool isCommunity, bool isOgg);
    // public System.Void DownloadPreview(System.String sessionName, System.String userId, System.Boolean isCommunity, System.Boolean isOgg)
    // Offset: 0x13335CC
    void DownloadPreview(::StringW sessionName, ::StringW userId, bool isCommunity, bool isOgg);
    // private System.Collections.IEnumerator CoDeleteSession(System.String sessionName, System.Boolean isCommunity, System.Boolean isOgg)
    // Offset: 0x1333534
    ::System::Collections::IEnumerator* CoDeleteSession(::StringW sessionName, bool isCommunity, bool isOgg);
    // public System.Void .ctor()
    // Offset: 0x1333668
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CloudStateManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CloudStateManager*, creationType>()));
    }
  }; // VROSC.CloudStateManager
  #pragma pack(pop)
  static check_size<sizeof(CloudStateManager), 36 + sizeof(::VROSC::CloudStateManager::UploadState)> __VROSC_CloudStateManagerSizeCheck;
  static_assert(sizeof(CloudStateManager) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::VROSC::CloudStateManager::UploadState, "VROSC", "CloudStateManager/UploadState");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::VROSC::CloudStateManager::DownloadState, "VROSC", "CloudStateManager/DownloadState");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::CloudStateManager::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CloudStateManager::*)()>(&VROSC::CloudStateManager::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::CloudStateManager*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::CloudStateManager::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CloudStateManager::*)()>(&VROSC::CloudStateManager::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::CloudStateManager*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::CloudStateManager::DownloadSessionFromCloud
// Il2CppName: DownloadSessionFromCloud
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CloudStateManager::*)(::StringW, ::StringW, bool)>(&VROSC::CloudStateManager::DownloadSessionFromCloud)> {
  static const MethodInfo* get() {
    static auto* sessionName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isCommunity = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CloudStateManager*), "DownloadSessionFromCloud", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionName, userId, isCommunity});
  }
};
// Writing MetadataGetter for method: VROSC::CloudStateManager::CoDownloadSession
// Il2CppName: CoDownloadSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (VROSC::CloudStateManager::*)(::StringW, ::StringW, bool)>(&VROSC::CloudStateManager::CoDownloadSession)> {
  static const MethodInfo* get() {
    static auto* sessionName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isCommunity = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CloudStateManager*), "CoDownloadSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionName, userId, isCommunity});
  }
};
// Writing MetadataGetter for method: VROSC::CloudStateManager::UploadSessionToCloud
// Il2CppName: UploadSessionToCloud
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CloudStateManager::*)(::StringW, bool, bool)>(&VROSC::CloudStateManager::UploadSessionToCloud)> {
  static const MethodInfo* get() {
    static auto* sessionName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isCommunity = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* hasPreview = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CloudStateManager*), "UploadSessionToCloud", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionName, isCommunity, hasPreview});
  }
};
// Writing MetadataGetter for method: VROSC::CloudStateManager::CoUploadSession
// Il2CppName: CoUploadSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (VROSC::CloudStateManager::*)(::StringW, bool, bool)>(&VROSC::CloudStateManager::CoUploadSession)> {
  static const MethodInfo* get() {
    static auto* sessionName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isCommunity = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* hasPreview = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CloudStateManager*), "CoUploadSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionName, isCommunity, hasPreview});
  }
};
// Writing MetadataGetter for method: VROSC::CloudStateManager::DeleteSessionFromCloud
// Il2CppName: DeleteSessionFromCloud
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CloudStateManager::*)(::StringW, bool, bool)>(&VROSC::CloudStateManager::DeleteSessionFromCloud)> {
  static const MethodInfo* get() {
    static auto* sessionName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isCommunity = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isOgg = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CloudStateManager*), "DeleteSessionFromCloud", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionName, isCommunity, isOgg});
  }
};
// Writing MetadataGetter for method: VROSC::CloudStateManager::DownloadPreview
// Il2CppName: DownloadPreview
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CloudStateManager::*)(::StringW, ::StringW, bool, bool)>(&VROSC::CloudStateManager::DownloadPreview)> {
  static const MethodInfo* get() {
    static auto* sessionName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isCommunity = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isOgg = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CloudStateManager*), "DownloadPreview", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionName, userId, isCommunity, isOgg});
  }
};
// Writing MetadataGetter for method: VROSC::CloudStateManager::CoDeleteSession
// Il2CppName: CoDeleteSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (VROSC::CloudStateManager::*)(::StringW, bool, bool)>(&VROSC::CloudStateManager::CoDeleteSession)> {
  static const MethodInfo* get() {
    static auto* sessionName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isCommunity = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isOgg = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CloudStateManager*), "CoDeleteSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionName, isCommunity, isOgg});
  }
};
// Writing MetadataGetter for method: VROSC::CloudStateManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
