// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: VROSC.WidgetSettings
#include "VROSC/WidgetSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: UserDataControllers
  class UserDataControllers;
  // Forward declaring type: TimelineInstrumentActivation
  class TimelineInstrumentActivation;
  // Forward declaring type: TransformMover
  class TransformMover;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: WidgetController
  class WidgetController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::WidgetController);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::WidgetController*, "VROSC", "WidgetController");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.WidgetController
  // [TokenAttribute] Offset: FFFFFFFF
  class WidgetController : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::VROSC::WidgetController::WidgetPositionalData
    class WidgetPositionalData;
    public:
    // protected VROSC.WidgetSettings _widgetSettings
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::WidgetSettings* widgetSettings;
    // Field size check
    static_assert(sizeof(::VROSC::WidgetSettings*) == 0x8);
    // private UnityEngine.GameObject _toggleObject
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* toggleObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private VROSC.TimelineInstrumentActivation _timelineActivation
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::TimelineInstrumentActivation* timelineActivation;
    // Field size check
    static_assert(sizeof(::VROSC::TimelineInstrumentActivation*) == 0x8);
    // private VROSC.WidgetController/VROSC.WidgetPositionalData _positionalData
    // Size: 0x8
    // Offset: 0x30
    ::VROSC::WidgetController::WidgetPositionalData* positionalData;
    // Field size check
    static_assert(sizeof(::VROSC::WidgetController::WidgetPositionalData*) == 0x8);
    // protected VROSC.TransformMover _transformMover
    // Size: 0x8
    // Offset: 0x38
    ::VROSC::TransformMover* transformMover;
    // Field size check
    static_assert(sizeof(::VROSC::TransformMover*) == 0x8);
    // private System.Boolean <IsActive>k__BackingField
    // Size: 0x1
    // Offset: 0x40
    bool IsActive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <UserHasOpened>k__BackingField
    // Size: 0x1
    // Offset: 0x41
    bool UserHasOpened;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: UserHasOpened and: InitalLocalScale
    char __padding6[0x2] = {};
    // private UnityEngine.Vector3 <InitalLocalScale>k__BackingField
    // Size: 0xC
    // Offset: 0x44
    ::UnityEngine::Vector3 InitalLocalScale;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 <UserMoverScale>k__BackingField
    // Size: 0xC
    // Offset: 0x50
    ::UnityEngine::Vector3 UserMoverScale;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: UserMoverScale and: OnToggled
    char __padding8[0x4] = {};
    // public System.Action`1<System.Boolean> OnToggled
    // Size: 0x8
    // Offset: 0x60
    ::System::Action_1<bool>* OnToggled;
    // Field size check
    static_assert(sizeof(::System::Action_1<bool>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get static field: static public System.Action`2<VROSC.WidgetSettings,System.Boolean> OnWidgetActivationChange
    static ::System::Action_2<::VROSC::WidgetSettings*, bool>* _get_OnWidgetActivationChange();
    // Set static field: static public System.Action`2<VROSC.WidgetSettings,System.Boolean> OnWidgetActivationChange
    static void _set_OnWidgetActivationChange(::System::Action_2<::VROSC::WidgetSettings*, bool>* value);
    // Get instance field reference: protected VROSC.WidgetSettings _widgetSettings
    [[deprecated]] ::VROSC::WidgetSettings*& dyn__widgetSettings();
    // Get instance field reference: private UnityEngine.GameObject _toggleObject
    [[deprecated]] ::UnityEngine::GameObject*& dyn__toggleObject();
    // Get instance field reference: private VROSC.TimelineInstrumentActivation _timelineActivation
    [[deprecated]] ::VROSC::TimelineInstrumentActivation*& dyn__timelineActivation();
    // Get instance field reference: private VROSC.WidgetController/VROSC.WidgetPositionalData _positionalData
    [[deprecated]] ::VROSC::WidgetController::WidgetPositionalData*& dyn__positionalData();
    // Get instance field reference: protected VROSC.TransformMover _transformMover
    [[deprecated]] ::VROSC::TransformMover*& dyn__transformMover();
    // Get instance field reference: private System.Boolean <IsActive>k__BackingField
    [[deprecated]] bool& dyn_$IsActive$k__BackingField();
    // Get instance field reference: private System.Boolean <UserHasOpened>k__BackingField
    [[deprecated]] bool& dyn_$UserHasOpened$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector3 <InitalLocalScale>k__BackingField
    [[deprecated]] ::UnityEngine::Vector3& dyn_$InitalLocalScale$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector3 <UserMoverScale>k__BackingField
    [[deprecated]] ::UnityEngine::Vector3& dyn_$UserMoverScale$k__BackingField();
    // Get instance field reference: public System.Action`1<System.Boolean> OnToggled
    [[deprecated]] ::System::Action_1<bool>*& dyn_OnToggled();
    // public VROSC.WidgetController/VROSC.WidgetPositionalData get_PositionalData()
    // Offset: 0x951094
    ::VROSC::WidgetController::WidgetPositionalData* get_PositionalData();
    // public VROSC.WidgetSettings/VROSC.Identifier get_ID()
    // Offset: 0x95109C
    ::VROSC::WidgetSettings::Identifier get_ID();
    // public VROSC.WidgetSettings get_DefaultSettings()
    // Offset: 0x9510B8
    ::VROSC::WidgetSettings* get_DefaultSettings();
    // public System.String get_DisplayName()
    // Offset: 0x9510C0
    ::StringW get_DisplayName();
    // public System.Boolean get_IsActive()
    // Offset: 0x9510E8
    bool get_IsActive();
    // private System.Void set_IsActive(System.Boolean value)
    // Offset: 0x9510DC
    void set_IsActive(bool value);
    // public System.Boolean get_UserHasOpened()
    // Offset: 0x9510FC
    bool get_UserHasOpened();
    // protected System.Void set_UserHasOpened(System.Boolean value)
    // Offset: 0x9510F0
    void set_UserHasOpened(bool value);
    // public VROSC.TransformMover get_TransformMover()
    // Offset: 0x951104
    ::VROSC::TransformMover* get_TransformMover();
    // public System.Single get_SpawnHeightModifier()
    // Offset: 0x95110C
    float get_SpawnHeightModifier();
    // public UnityEngine.Vector3 get_InitalLocalScale()
    // Offset: 0x951134
    ::UnityEngine::Vector3 get_InitalLocalScale();
    // private System.Void set_InitalLocalScale(UnityEngine.Vector3 value)
    // Offset: 0x951128
    void set_InitalLocalScale(::UnityEngine::Vector3 value);
    // public UnityEngine.Vector3 get_UserMoverScale()
    // Offset: 0x95114C
    ::UnityEngine::Vector3 get_UserMoverScale();
    // private System.Void set_UserMoverScale(UnityEngine.Vector3 value)
    // Offset: 0x951140
    void set_UserMoverScale(::UnityEngine::Vector3 value);
    // protected System.Void Awake()
    // Offset: 0x951158
    void Awake();
    // protected System.Void OnDestroy()
    // Offset: 0x951328
    void OnDestroy();
    // private System.Void OnApplicationQuit()
    // Offset: 0x9514C8
    void OnApplicationQuit();
    // public System.Void Toggle()
    // Offset: 0x951688
    void Toggle();
    // public System.Void SetActive(System.Boolean shouldBeActive, System.Boolean forceImmediate)
    // Offset: 0x9516A4
    void SetActive(bool shouldBeActive, bool forceImmediate);
    // public System.Void SetActivationPositions(UnityEngine.Vector3 pressPos, System.Boolean active)
    // Offset: 0x951828
    void SetActivationPositions(::UnityEngine::Vector3 pressPos, bool active);
    // public System.Void TransformChanged(VROSC.TransformMover mover)
    // Offset: 0x95182C
    void TransformChanged(::VROSC::TransformMover* mover);
    // protected System.Void UserDataLoaded(VROSC.UserDataControllers user)
    // Offset: 0x951830
    void UserDataLoaded(::VROSC::UserDataControllers* user);
    // protected System.Void OnDrawGizmosSelected()
    // Offset: 0x951834
    void OnDrawGizmosSelected();
    // private System.Void SendToAnalytics(VROSC.WidgetSettings/VROSC.Identifier id, System.Boolean isActive)
    // Offset: 0x9514F4
    void SendToAnalytics(::VROSC::WidgetSettings::Identifier id, bool isActive);
    // public System.Void .ctor()
    // Offset: 0x9518F0
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WidgetController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::WidgetController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WidgetController*, creationType>()));
    }
  }; // VROSC.WidgetController
  #pragma pack(pop)
  static check_size<sizeof(WidgetController), 96 + sizeof(::System::Action_1<bool>*)> __VROSC_WidgetControllerSizeCheck;
  static_assert(sizeof(WidgetController) == 0x68);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::WidgetController::get_PositionalData
// Il2CppName: get_PositionalData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::WidgetController::WidgetPositionalData* (VROSC::WidgetController::*)()>(&VROSC::WidgetController::get_PositionalData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "get_PositionalData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::get_ID
// Il2CppName: get_ID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::WidgetSettings::Identifier (VROSC::WidgetController::*)()>(&VROSC::WidgetController::get_ID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "get_ID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::get_DefaultSettings
// Il2CppName: get_DefaultSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::WidgetSettings* (VROSC::WidgetController::*)()>(&VROSC::WidgetController::get_DefaultSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "get_DefaultSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::get_DisplayName
// Il2CppName: get_DisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::WidgetController::*)()>(&VROSC::WidgetController::get_DisplayName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "get_DisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::get_IsActive
// Il2CppName: get_IsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::WidgetController::*)()>(&VROSC::WidgetController::get_IsActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "get_IsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::set_IsActive
// Il2CppName: set_IsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetController::*)(bool)>(&VROSC::WidgetController::set_IsActive)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "set_IsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::get_UserHasOpened
// Il2CppName: get_UserHasOpened
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::WidgetController::*)()>(&VROSC::WidgetController::get_UserHasOpened)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "get_UserHasOpened", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::set_UserHasOpened
// Il2CppName: set_UserHasOpened
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetController::*)(bool)>(&VROSC::WidgetController::set_UserHasOpened)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "set_UserHasOpened", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::get_TransformMover
// Il2CppName: get_TransformMover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::TransformMover* (VROSC::WidgetController::*)()>(&VROSC::WidgetController::get_TransformMover)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "get_TransformMover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::get_SpawnHeightModifier
// Il2CppName: get_SpawnHeightModifier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (VROSC::WidgetController::*)()>(&VROSC::WidgetController::get_SpawnHeightModifier)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "get_SpawnHeightModifier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::get_InitalLocalScale
// Il2CppName: get_InitalLocalScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (VROSC::WidgetController::*)()>(&VROSC::WidgetController::get_InitalLocalScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "get_InitalLocalScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::set_InitalLocalScale
// Il2CppName: set_InitalLocalScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetController::*)(::UnityEngine::Vector3)>(&VROSC::WidgetController::set_InitalLocalScale)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "set_InitalLocalScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::get_UserMoverScale
// Il2CppName: get_UserMoverScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (VROSC::WidgetController::*)()>(&VROSC::WidgetController::get_UserMoverScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "get_UserMoverScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::set_UserMoverScale
// Il2CppName: set_UserMoverScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetController::*)(::UnityEngine::Vector3)>(&VROSC::WidgetController::set_UserMoverScale)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "set_UserMoverScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetController::*)()>(&VROSC::WidgetController::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetController::*)()>(&VROSC::WidgetController::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::OnApplicationQuit
// Il2CppName: OnApplicationQuit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetController::*)()>(&VROSC::WidgetController::OnApplicationQuit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "OnApplicationQuit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::Toggle
// Il2CppName: Toggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetController::*)()>(&VROSC::WidgetController::Toggle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "Toggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::SetActive
// Il2CppName: SetActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetController::*)(bool, bool)>(&VROSC::WidgetController::SetActive)> {
  static const MethodInfo* get() {
    static auto* shouldBeActive = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* forceImmediate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "SetActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shouldBeActive, forceImmediate});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::SetActivationPositions
// Il2CppName: SetActivationPositions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetController::*)(::UnityEngine::Vector3, bool)>(&VROSC::WidgetController::SetActivationPositions)> {
  static const MethodInfo* get() {
    static auto* pressPos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* active = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "SetActivationPositions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pressPos, active});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::TransformChanged
// Il2CppName: TransformChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetController::*)(::VROSC::TransformMover*)>(&VROSC::WidgetController::TransformChanged)> {
  static const MethodInfo* get() {
    static auto* mover = &::il2cpp_utils::GetClassFromName("VROSC", "TransformMover")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "TransformChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mover});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::UserDataLoaded
// Il2CppName: UserDataLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetController::*)(::VROSC::UserDataControllers*)>(&VROSC::WidgetController::UserDataLoaded)> {
  static const MethodInfo* get() {
    static auto* user = &::il2cpp_utils::GetClassFromName("VROSC", "UserDataControllers")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "UserDataLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{user});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::OnDrawGizmosSelected
// Il2CppName: OnDrawGizmosSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetController::*)()>(&VROSC::WidgetController::OnDrawGizmosSelected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "OnDrawGizmosSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::SendToAnalytics
// Il2CppName: SendToAnalytics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetController::*)(::VROSC::WidgetSettings::Identifier, bool)>(&VROSC::WidgetController::SendToAnalytics)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* isActive = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetController*), "SendToAnalytics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, isActive});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
