// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: LoopStationBaseGroupHandler
  class LoopStationBaseGroupHandler;
  // Forward declaring type: LoopStationUserGroupHandler
  class LoopStationUserGroupHandler;
  // Forward declaring type: LoopStationGroup
  class LoopStationGroup;
  // Forward declaring type: LoopStation
  class LoopStation;
  // Forward declaring type: LoopStationLoopHandler
  class LoopStationLoopHandler;
  // Forward declaring type: LoopPlayer
  class LoopPlayer;
  // Forward declaring type: LoopStationDataController
  class LoopStationDataController;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: LoopStationGroupCore
  class LoopStationGroupCore;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::LoopStationGroupCore);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::LoopStationGroupCore*, "VROSC", "LoopStationGroupCore");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.LoopStationGroupCore
  // [TokenAttribute] Offset: FFFFFFFF
  class LoopStationGroupCore : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private VROSC.LoopStationBaseGroupHandler _baseGroups
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::LoopStationBaseGroupHandler* baseGroups;
    // Field size check
    static_assert(sizeof(::VROSC::LoopStationBaseGroupHandler*) == 0x8);
    // private VROSC.LoopStationUserGroupHandler _userGroups
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::LoopStationUserGroupHandler* userGroups;
    // Field size check
    static_assert(sizeof(::VROSC::LoopStationUserGroupHandler*) == 0x8);
    // private System.Collections.Generic.List`1<VROSC.LoopStationGroup> <Groups>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>* Groups;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>*) == 0x8);
    // public System.Action`1<VROSC.LoopStationGroup> OnGroupCreated
    // Size: 0x8
    // Offset: 0x30
    ::System::Action_1<::VROSC::LoopStationGroup*>* OnGroupCreated;
    // Field size check
    static_assert(sizeof(::System::Action_1<::VROSC::LoopStationGroup*>*) == 0x8);
    // public System.Action`1<VROSC.LoopStationGroup> OnGroupRemoved
    // Size: 0x8
    // Offset: 0x38
    ::System::Action_1<::VROSC::LoopStationGroup*>* OnGroupRemoved;
    // Field size check
    static_assert(sizeof(::System::Action_1<::VROSC::LoopStationGroup*>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.LoopStationBaseGroupHandler _baseGroups
    [[deprecated]] ::VROSC::LoopStationBaseGroupHandler*& dyn__baseGroups();
    // Get instance field reference: private VROSC.LoopStationUserGroupHandler _userGroups
    [[deprecated]] ::VROSC::LoopStationUserGroupHandler*& dyn__userGroups();
    // Get instance field reference: private System.Collections.Generic.List`1<VROSC.LoopStationGroup> <Groups>k__BackingField
    [[deprecated]] ::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>*& dyn_$Groups$k__BackingField();
    // Get instance field reference: public System.Action`1<VROSC.LoopStationGroup> OnGroupCreated
    [[deprecated]] ::System::Action_1<::VROSC::LoopStationGroup*>*& dyn_OnGroupCreated();
    // Get instance field reference: public System.Action`1<VROSC.LoopStationGroup> OnGroupRemoved
    [[deprecated]] ::System::Action_1<::VROSC::LoopStationGroup*>*& dyn_OnGroupRemoved();
    // public VROSC.LoopStationBaseGroupHandler get_BaseGroups()
    // Offset: 0x196F3BC
    ::VROSC::LoopStationBaseGroupHandler* get_BaseGroups();
    // public VROSC.LoopStationUserGroupHandler get_UserGroups()
    // Offset: 0x196F3C4
    ::VROSC::LoopStationUserGroupHandler* get_UserGroups();
    // public System.Collections.Generic.List`1<VROSC.LoopStationGroup> get_Groups()
    // Offset: 0x196F3CC
    ::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>* get_Groups();
    // protected System.Void set_Groups(System.Collections.Generic.List`1<VROSC.LoopStationGroup> value)
    // Offset: 0x196F3D4
    void set_Groups(::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>* value);
    // public VROSC.LoopStationGroup get_BaseGroup()
    // Offset: 0x196F3DC
    ::VROSC::LoopStationGroup* get_BaseGroup();
    // private System.Void Awake()
    // Offset: 0x196F3F8
    void Awake();
    // private System.Void OnDestroy()
    // Offset: 0x196F5D8
    void OnDestroy();
    // public System.Void Setup(VROSC.LoopStation loopStation, VROSC.LoopStationLoopHandler loopHandler)
    // Offset: 0x196F7B8
    void Setup(::VROSC::LoopStation* loopStation, ::VROSC::LoopStationLoopHandler* loopHandler);
    // public System.Void AddToBaseGroup(VROSC.LoopPlayer newPlayer)
    // Offset: 0x196F814
    void AddToBaseGroup(::VROSC::LoopPlayer* newPlayer);
    // public System.Void CreateGroups(VROSC.LoopStationDataController data)
    // Offset: 0x196F82C
    void CreateGroups(::VROSC::LoopStationDataController* data);
    // public VROSC.LoopStationGroup GetGroupByID(System.String groupID, System.Boolean defaultToBaseGroup)
    // Offset: 0x196FC1C
    ::VROSC::LoopStationGroup* GetGroupByID(::StringW groupID, bool defaultToBaseGroup);
    // public System.Void RemoveAllGroups()
    // Offset: 0x196FE80
    void RemoveAllGroups();
    // private System.Void GroupRemoved(VROSC.LoopStationGroup group)
    // Offset: 0x196FEC4
    void GroupRemoved(::VROSC::LoopStationGroup* group);
    // private System.Void GroupCreated(VROSC.LoopStationGroup group)
    // Offset: 0x196FF8C
    void GroupCreated(::VROSC::LoopStationGroup* group);
    // public System.Void AllLoopsLoaded()
    // Offset: 0x1970054
    void AllLoopsLoaded();
    // public System.Void .ctor()
    // Offset: 0x197018C
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoopStationGroupCore* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupCore::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoopStationGroupCore*, creationType>()));
    }
  }; // VROSC.LoopStationGroupCore
  #pragma pack(pop)
  static check_size<sizeof(LoopStationGroupCore), 56 + sizeof(::System::Action_1<::VROSC::LoopStationGroup*>*)> __VROSC_LoopStationGroupCoreSizeCheck;
  static_assert(sizeof(LoopStationGroupCore) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::LoopStationGroupCore::get_BaseGroups
// Il2CppName: get_BaseGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::LoopStationBaseGroupHandler* (VROSC::LoopStationGroupCore::*)()>(&VROSC::LoopStationGroupCore::get_BaseGroups)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupCore*), "get_BaseGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupCore::get_UserGroups
// Il2CppName: get_UserGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::LoopStationUserGroupHandler* (VROSC::LoopStationGroupCore::*)()>(&VROSC::LoopStationGroupCore::get_UserGroups)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupCore*), "get_UserGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupCore::get_Groups
// Il2CppName: get_Groups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>* (VROSC::LoopStationGroupCore::*)()>(&VROSC::LoopStationGroupCore::get_Groups)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupCore*), "get_Groups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupCore::set_Groups
// Il2CppName: set_Groups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationGroupCore::*)(::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>*)>(&VROSC::LoopStationGroupCore::set_Groups)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "LoopStationGroup")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupCore*), "set_Groups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupCore::get_BaseGroup
// Il2CppName: get_BaseGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::LoopStationGroup* (VROSC::LoopStationGroupCore::*)()>(&VROSC::LoopStationGroupCore::get_BaseGroup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupCore*), "get_BaseGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupCore::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationGroupCore::*)()>(&VROSC::LoopStationGroupCore::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupCore*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupCore::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationGroupCore::*)()>(&VROSC::LoopStationGroupCore::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupCore*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupCore::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationGroupCore::*)(::VROSC::LoopStation*, ::VROSC::LoopStationLoopHandler*)>(&VROSC::LoopStationGroupCore::Setup)> {
  static const MethodInfo* get() {
    static auto* loopStation = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStation")->byval_arg;
    static auto* loopHandler = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStationLoopHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupCore*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{loopStation, loopHandler});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupCore::AddToBaseGroup
// Il2CppName: AddToBaseGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationGroupCore::*)(::VROSC::LoopPlayer*)>(&VROSC::LoopStationGroupCore::AddToBaseGroup)> {
  static const MethodInfo* get() {
    static auto* newPlayer = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupCore*), "AddToBaseGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newPlayer});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupCore::CreateGroups
// Il2CppName: CreateGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationGroupCore::*)(::VROSC::LoopStationDataController*)>(&VROSC::LoopStationGroupCore::CreateGroups)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStationDataController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupCore*), "CreateGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupCore::GetGroupByID
// Il2CppName: GetGroupByID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::LoopStationGroup* (VROSC::LoopStationGroupCore::*)(::StringW, bool)>(&VROSC::LoopStationGroupCore::GetGroupByID)> {
  static const MethodInfo* get() {
    static auto* groupID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* defaultToBaseGroup = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupCore*), "GetGroupByID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupID, defaultToBaseGroup});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupCore::RemoveAllGroups
// Il2CppName: RemoveAllGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationGroupCore::*)()>(&VROSC::LoopStationGroupCore::RemoveAllGroups)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupCore*), "RemoveAllGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupCore::GroupRemoved
// Il2CppName: GroupRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationGroupCore::*)(::VROSC::LoopStationGroup*)>(&VROSC::LoopStationGroupCore::GroupRemoved)> {
  static const MethodInfo* get() {
    static auto* group = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStationGroup")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupCore*), "GroupRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{group});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupCore::GroupCreated
// Il2CppName: GroupCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationGroupCore::*)(::VROSC::LoopStationGroup*)>(&VROSC::LoopStationGroupCore::GroupCreated)> {
  static const MethodInfo* get() {
    static auto* group = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStationGroup")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupCore*), "GroupCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{group});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupCore::AllLoopsLoaded
// Il2CppName: AllLoopsLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationGroupCore::*)()>(&VROSC::LoopStationGroupCore::AllLoopsLoaded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupCore*), "AllLoopsLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupCore::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
