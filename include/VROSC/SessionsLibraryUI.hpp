// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: VROSC.ConfirmationUIPopup
#include "VROSC/ConfirmationUIPopup.hpp"
// Including type: VROSC.LoginUIPopup
#include "VROSC/LoginUIPopup.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: SessionsPanelUI
  class SessionsPanelUI;
  // Forward declaring type: MySessionsPanelUI
  class MySessionsPanelUI;
  // Forward declaring type: MySharedSessionsPanelUI
  class MySharedSessionsPanelUI;
  // Forward declaring type: CommunitySessionsPanelUI
  class CommunitySessionsPanelUI;
  // Forward declaring type: FavoritesSessionsPanelUI
  class FavoritesSessionsPanelUI;
  // Forward declaring type: UIButton
  class UIButton;
  // Forward declaring type: PreviewOptionsUI
  class PreviewOptionsUI;
  // Forward declaring type: SaveSessionUIPopup
  class SaveSessionUIPopup;
  // Forward declaring type: LoadSessionUIPopup
  class LoadSessionUIPopup;
  // Forward declaring type: UserProfilePopup
  class UserProfilePopup;
  // Forward declaring type: SessionInfoPopup
  class SessionInfoPopup;
  // Forward declaring type: SessionsSearchBar
  class SessionsSearchBar;
  // Forward declaring type: SessionItemData
  class SessionItemData;
  // Forward declaring type: Error
  struct Error;
}
// Forward declaring namespace: VROSC::UI
namespace VROSC::UI {
  // Forward declaring type: TabController
  class TabController;
  // Forward declaring type: TabButton
  class TabButton;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: AudioClip
  class AudioClip;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: SessionsLibraryUI
  class SessionsLibraryUI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::SessionsLibraryUI);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::SessionsLibraryUI*, "VROSC", "SessionsLibraryUI");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x118
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.SessionsLibraryUI
  // [TokenAttribute] Offset: FFFFFFFF
  class SessionsLibraryUI : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::VROSC::SessionsLibraryUI::State
    struct State;
    // Nested type: ::VROSC::SessionsLibraryUI::OrderingType
    struct OrderingType;
    // Nested type: ::VROSC::SessionsLibraryUI::OrderingDirection
    struct OrderingDirection;
    // Nested type: ::VROSC::SessionsLibraryUI::SessionSaveData
    class SessionSaveData;
    // Nested type: ::VROSC::SessionsLibraryUI::$$c__DisplayClass64_0
    class $$c__DisplayClass64_0;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: VROSC.SessionsLibraryUI/VROSC.State
    // [TokenAttribute] Offset: FFFFFFFF
    struct State/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: State
      constexpr State(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public VROSC.SessionsLibraryUI/VROSC.State Main
      static constexpr const int Main = 0;
      // Get static field: static public VROSC.SessionsLibraryUI/VROSC.State Main
      static ::VROSC::SessionsLibraryUI::State _get_Main();
      // Set static field: static public VROSC.SessionsLibraryUI/VROSC.State Main
      static void _set_Main(::VROSC::SessionsLibraryUI::State value);
      // static field const value: static public VROSC.SessionsLibraryUI/VROSC.State Saving
      static constexpr const int Saving = 1;
      // Get static field: static public VROSC.SessionsLibraryUI/VROSC.State Saving
      static ::VROSC::SessionsLibraryUI::State _get_Saving();
      // Set static field: static public VROSC.SessionsLibraryUI/VROSC.State Saving
      static void _set_Saving(::VROSC::SessionsLibraryUI::State value);
      // static field const value: static public VROSC.SessionsLibraryUI/VROSC.State Loading
      static constexpr const int Loading = 2;
      // Get static field: static public VROSC.SessionsLibraryUI/VROSC.State Loading
      static ::VROSC::SessionsLibraryUI::State _get_Loading();
      // Set static field: static public VROSC.SessionsLibraryUI/VROSC.State Loading
      static void _set_Loading(::VROSC::SessionsLibraryUI::State value);
      // static field const value: static public VROSC.SessionsLibraryUI/VROSC.State Confirmation
      static constexpr const int Confirmation = 3;
      // Get static field: static public VROSC.SessionsLibraryUI/VROSC.State Confirmation
      static ::VROSC::SessionsLibraryUI::State _get_Confirmation();
      // Set static field: static public VROSC.SessionsLibraryUI/VROSC.State Confirmation
      static void _set_Confirmation(::VROSC::SessionsLibraryUI::State value);
      // static field const value: static public VROSC.SessionsLibraryUI/VROSC.State WaitingForValidation
      static constexpr const int WaitingForValidation = 4;
      // Get static field: static public VROSC.SessionsLibraryUI/VROSC.State WaitingForValidation
      static ::VROSC::SessionsLibraryUI::State _get_WaitingForValidation();
      // Set static field: static public VROSC.SessionsLibraryUI/VROSC.State WaitingForValidation
      static void _set_WaitingForValidation(::VROSC::SessionsLibraryUI::State value);
      // static field const value: static public VROSC.SessionsLibraryUI/VROSC.State LoggingIn
      static constexpr const int LoggingIn = 5;
      // Get static field: static public VROSC.SessionsLibraryUI/VROSC.State LoggingIn
      static ::VROSC::SessionsLibraryUI::State _get_LoggingIn();
      // Set static field: static public VROSC.SessionsLibraryUI/VROSC.State LoggingIn
      static void _set_LoggingIn(::VROSC::SessionsLibraryUI::State value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // VROSC.SessionsLibraryUI/VROSC.State
    #pragma pack(pop)
    static check_size<sizeof(SessionsLibraryUI::State), 0 + sizeof(int)> __VROSC_SessionsLibraryUI_StateSizeCheck;
    static_assert(sizeof(SessionsLibraryUI::State) == 0x4);
    public:
    // private VROSC.LoginUIPopup _loginPopupUI
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::LoginUIPopup* loginPopupUI;
    // Field size check
    static_assert(sizeof(::VROSC::LoginUIPopup*) == 0x8);
    // private VROSC.MySessionsPanelUI _mySessionsPanelUI
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::MySessionsPanelUI* mySessionsPanelUI;
    // Field size check
    static_assert(sizeof(::VROSC::MySessionsPanelUI*) == 0x8);
    // private VROSC.MySharedSessionsPanelUI _mySharedSessionsPanelUI
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::MySharedSessionsPanelUI* mySharedSessionsPanelUI;
    // Field size check
    static_assert(sizeof(::VROSC::MySharedSessionsPanelUI*) == 0x8);
    // private VROSC.CommunitySessionsPanelUI _communitySessionsPanelUI
    // Size: 0x8
    // Offset: 0x30
    ::VROSC::CommunitySessionsPanelUI* communitySessionsPanelUI;
    // Field size check
    static_assert(sizeof(::VROSC::CommunitySessionsPanelUI*) == 0x8);
    // private VROSC.FavoritesSessionsPanelUI _favoritesSessionsPanelUI
    // Size: 0x8
    // Offset: 0x38
    ::VROSC::FavoritesSessionsPanelUI* favoritesSessionsPanelUI;
    // Field size check
    static_assert(sizeof(::VROSC::FavoritesSessionsPanelUI*) == 0x8);
    // private VROSC.UI.TabController _tabController
    // Size: 0x8
    // Offset: 0x40
    ::VROSC::UI::TabController* tabController;
    // Field size check
    static_assert(sizeof(::VROSC::UI::TabController*) == 0x8);
    // private VROSC.UIButton _profileButton
    // Size: 0x8
    // Offset: 0x48
    ::VROSC::UIButton* profileButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIButton*) == 0x8);
    // private VROSC.UIButton _closeButton
    // Size: 0x8
    // Offset: 0x50
    ::VROSC::UIButton* closeButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIButton*) == 0x8);
    // private VROSC.UIButton _newSessionButton
    // Size: 0x8
    // Offset: 0x58
    ::VROSC::UIButton* newSessionButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIButton*) == 0x8);
    // private VROSC.UIButton _saveSessionButton
    // Size: 0x8
    // Offset: 0x60
    ::VROSC::UIButton* saveSessionButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIButton*) == 0x8);
    // private VROSC.UIButton _saveAsSessionButton
    // Size: 0x8
    // Offset: 0x68
    ::VROSC::UIButton* saveAsSessionButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIButton*) == 0x8);
    // private VROSC.UIButton _loadSessionButton
    // Size: 0x8
    // Offset: 0x70
    ::VROSC::UIButton* loadSessionButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIButton*) == 0x8);
    // private VROSC.UIButton _deleteSessionButton
    // Size: 0x8
    // Offset: 0x78
    ::VROSC::UIButton* deleteSessionButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIButton*) == 0x8);
    // private VROSC.ConfirmationUIPopup _confirmationUIPopup
    // Size: 0x8
    // Offset: 0x80
    ::VROSC::ConfirmationUIPopup* confirmationUIPopup;
    // Field size check
    static_assert(sizeof(::VROSC::ConfirmationUIPopup*) == 0x8);
    // private VROSC.SaveSessionUIPopup _saveSessionUIPopup
    // Size: 0x8
    // Offset: 0x88
    ::VROSC::SaveSessionUIPopup* saveSessionUIPopup;
    // Field size check
    static_assert(sizeof(::VROSC::SaveSessionUIPopup*) == 0x8);
    // private VROSC.LoadSessionUIPopup _loadSessionUIPopup
    // Size: 0x8
    // Offset: 0x90
    ::VROSC::LoadSessionUIPopup* loadSessionUIPopup;
    // Field size check
    static_assert(sizeof(::VROSC::LoadSessionUIPopup*) == 0x8);
    // private UnityEngine.GameObject _waitingForDataValidationPopup
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::GameObject* waitingForDataValidationPopup;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private VROSC.UserProfilePopup _userProfilePopup
    // Size: 0x8
    // Offset: 0xA0
    ::VROSC::UserProfilePopup* userProfilePopup;
    // Field size check
    static_assert(sizeof(::VROSC::UserProfilePopup*) == 0x8);
    // private VROSC.SessionInfoPopup _sessionInfoPopup
    // Size: 0x8
    // Offset: 0xA8
    ::VROSC::SessionInfoPopup* sessionInfoPopup;
    // Field size check
    static_assert(sizeof(::VROSC::SessionInfoPopup*) == 0x8);
    // private VROSC.SessionsSearchBar _searchBar
    // Size: 0x8
    // Offset: 0xB0
    ::VROSC::SessionsSearchBar* searchBar;
    // Field size check
    static_assert(sizeof(::VROSC::SessionsSearchBar*) == 0x8);
    // private VROSC.ConfirmationUIPopup/VROSC.Data _newSessionConfirmationData
    // Size: 0x8
    // Offset: 0xB8
    ::VROSC::ConfirmationUIPopup::Data* newSessionConfirmationData;
    // Field size check
    static_assert(sizeof(::VROSC::ConfirmationUIPopup::Data*) == 0x8);
    // private VROSC.ConfirmationUIPopup/VROSC.Data _loadSessionConfirmationData
    // Size: 0x8
    // Offset: 0xC0
    ::VROSC::ConfirmationUIPopup::Data* loadSessionConfirmationData;
    // Field size check
    static_assert(sizeof(::VROSC::ConfirmationUIPopup::Data*) == 0x8);
    // private VROSC.ConfirmationUIPopup/VROSC.Data _deleteSessionConfirmationData
    // Size: 0x8
    // Offset: 0xC8
    ::VROSC::ConfirmationUIPopup::Data* deleteSessionConfirmationData;
    // Field size check
    static_assert(sizeof(::VROSC::ConfirmationUIPopup::Data*) == 0x8);
    // private VROSC.PreviewOptionsUI _previewOptionsUI
    // Size: 0x8
    // Offset: 0xD0
    ::VROSC::PreviewOptionsUI* previewOptionsUI;
    // Field size check
    static_assert(sizeof(::VROSC::PreviewOptionsUI*) == 0x8);
    // private UnityEngine.GameObject _updateNoticeWindow
    // Size: 0x8
    // Offset: 0xD8
    ::UnityEngine::GameObject* updateNoticeWindow;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject _mainWindow
    // Size: 0x8
    // Offset: 0xE0
    ::UnityEngine::GameObject* mainWindow;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private VROSC.UIButton _updateContinueButton
    // Size: 0x8
    // Offset: 0xE8
    ::VROSC::UIButton* updateContinueButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIButton*) == 0x8);
    // private VROSC.SessionsLibraryUI/VROSC.State _currentState
    // Size: 0x4
    // Offset: 0xF0
    ::VROSC::SessionsLibraryUI::State currentState;
    // Field size check
    static_assert(sizeof(::VROSC::SessionsLibraryUI::State) == 0x4);
    // Padding between fields: currentState and: cachedSaveData
    char __padding27[0x4] = {};
    // private VROSC.SessionsLibraryUI/VROSC.SessionSaveData _cachedSaveData
    // Size: 0x8
    // Offset: 0xF8
    ::VROSC::SessionsLibraryUI::SessionSaveData* cachedSaveData;
    // Field size check
    static_assert(sizeof(::VROSC::SessionsLibraryUI::SessionSaveData*) == 0x8);
    // private System.Boolean _allowOnline
    // Size: 0x1
    // Offset: 0x100
    bool allowOnline;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: allowOnline and: currentSessionsPanel
    char __padding29[0x7] = {};
    // private VROSC.SessionsPanelUI _currentSessionsPanel
    // Size: 0x8
    // Offset: 0x108
    ::VROSC::SessionsPanelUI* currentSessionsPanel;
    // Field size check
    static_assert(sizeof(::VROSC::SessionsPanelUI*) == 0x8);
    // private VROSC.SessionItemData _selectedItemData
    // Size: 0x8
    // Offset: 0x110
    ::VROSC::SessionItemData* selectedItemData;
    // Field size check
    static_assert(sizeof(::VROSC::SessionItemData*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get static field: static public System.Action OnSaveConfirmed
    static ::System::Action* _get_OnSaveConfirmed();
    // Set static field: static public System.Action OnSaveConfirmed
    static void _set_OnSaveConfirmed(::System::Action* value);
    // Get static field: static public System.Action OnLoadConfirmed
    static ::System::Action* _get_OnLoadConfirmed();
    // Set static field: static public System.Action OnLoadConfirmed
    static void _set_OnLoadConfirmed(::System::Action* value);
    // Get static field: static public System.Action OnNewConfirmed
    static ::System::Action* _get_OnNewConfirmed();
    // Set static field: static public System.Action OnNewConfirmed
    static void _set_OnNewConfirmed(::System::Action* value);
    // Get instance field reference: private VROSC.LoginUIPopup _loginPopupUI
    [[deprecated("Use field access instead!")]] ::VROSC::LoginUIPopup*& dyn__loginPopupUI();
    // Get instance field reference: private VROSC.MySessionsPanelUI _mySessionsPanelUI
    [[deprecated("Use field access instead!")]] ::VROSC::MySessionsPanelUI*& dyn__mySessionsPanelUI();
    // Get instance field reference: private VROSC.MySharedSessionsPanelUI _mySharedSessionsPanelUI
    [[deprecated("Use field access instead!")]] ::VROSC::MySharedSessionsPanelUI*& dyn__mySharedSessionsPanelUI();
    // Get instance field reference: private VROSC.CommunitySessionsPanelUI _communitySessionsPanelUI
    [[deprecated("Use field access instead!")]] ::VROSC::CommunitySessionsPanelUI*& dyn__communitySessionsPanelUI();
    // Get instance field reference: private VROSC.FavoritesSessionsPanelUI _favoritesSessionsPanelUI
    [[deprecated("Use field access instead!")]] ::VROSC::FavoritesSessionsPanelUI*& dyn__favoritesSessionsPanelUI();
    // Get instance field reference: private VROSC.UI.TabController _tabController
    [[deprecated("Use field access instead!")]] ::VROSC::UI::TabController*& dyn__tabController();
    // Get instance field reference: private VROSC.UIButton _profileButton
    [[deprecated("Use field access instead!")]] ::VROSC::UIButton*& dyn__profileButton();
    // Get instance field reference: private VROSC.UIButton _closeButton
    [[deprecated("Use field access instead!")]] ::VROSC::UIButton*& dyn__closeButton();
    // Get instance field reference: private VROSC.UIButton _newSessionButton
    [[deprecated("Use field access instead!")]] ::VROSC::UIButton*& dyn__newSessionButton();
    // Get instance field reference: private VROSC.UIButton _saveSessionButton
    [[deprecated("Use field access instead!")]] ::VROSC::UIButton*& dyn__saveSessionButton();
    // Get instance field reference: private VROSC.UIButton _saveAsSessionButton
    [[deprecated("Use field access instead!")]] ::VROSC::UIButton*& dyn__saveAsSessionButton();
    // Get instance field reference: private VROSC.UIButton _loadSessionButton
    [[deprecated("Use field access instead!")]] ::VROSC::UIButton*& dyn__loadSessionButton();
    // Get instance field reference: private VROSC.UIButton _deleteSessionButton
    [[deprecated("Use field access instead!")]] ::VROSC::UIButton*& dyn__deleteSessionButton();
    // Get instance field reference: private VROSC.ConfirmationUIPopup _confirmationUIPopup
    [[deprecated("Use field access instead!")]] ::VROSC::ConfirmationUIPopup*& dyn__confirmationUIPopup();
    // Get instance field reference: private VROSC.SaveSessionUIPopup _saveSessionUIPopup
    [[deprecated("Use field access instead!")]] ::VROSC::SaveSessionUIPopup*& dyn__saveSessionUIPopup();
    // Get instance field reference: private VROSC.LoadSessionUIPopup _loadSessionUIPopup
    [[deprecated("Use field access instead!")]] ::VROSC::LoadSessionUIPopup*& dyn__loadSessionUIPopup();
    // Get instance field reference: private UnityEngine.GameObject _waitingForDataValidationPopup
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn__waitingForDataValidationPopup();
    // Get instance field reference: private VROSC.UserProfilePopup _userProfilePopup
    [[deprecated("Use field access instead!")]] ::VROSC::UserProfilePopup*& dyn__userProfilePopup();
    // Get instance field reference: private VROSC.SessionInfoPopup _sessionInfoPopup
    [[deprecated("Use field access instead!")]] ::VROSC::SessionInfoPopup*& dyn__sessionInfoPopup();
    // Get instance field reference: private VROSC.SessionsSearchBar _searchBar
    [[deprecated("Use field access instead!")]] ::VROSC::SessionsSearchBar*& dyn__searchBar();
    // Get instance field reference: private VROSC.ConfirmationUIPopup/VROSC.Data _newSessionConfirmationData
    [[deprecated("Use field access instead!")]] ::VROSC::ConfirmationUIPopup::Data*& dyn__newSessionConfirmationData();
    // Get instance field reference: private VROSC.ConfirmationUIPopup/VROSC.Data _loadSessionConfirmationData
    [[deprecated("Use field access instead!")]] ::VROSC::ConfirmationUIPopup::Data*& dyn__loadSessionConfirmationData();
    // Get instance field reference: private VROSC.ConfirmationUIPopup/VROSC.Data _deleteSessionConfirmationData
    [[deprecated("Use field access instead!")]] ::VROSC::ConfirmationUIPopup::Data*& dyn__deleteSessionConfirmationData();
    // Get instance field reference: private VROSC.PreviewOptionsUI _previewOptionsUI
    [[deprecated("Use field access instead!")]] ::VROSC::PreviewOptionsUI*& dyn__previewOptionsUI();
    // Get instance field reference: private UnityEngine.GameObject _updateNoticeWindow
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn__updateNoticeWindow();
    // Get instance field reference: private UnityEngine.GameObject _mainWindow
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn__mainWindow();
    // Get instance field reference: private VROSC.UIButton _updateContinueButton
    [[deprecated("Use field access instead!")]] ::VROSC::UIButton*& dyn__updateContinueButton();
    // Get instance field reference: private VROSC.SessionsLibraryUI/VROSC.State _currentState
    [[deprecated("Use field access instead!")]] ::VROSC::SessionsLibraryUI::State& dyn__currentState();
    // Get instance field reference: private VROSC.SessionsLibraryUI/VROSC.SessionSaveData _cachedSaveData
    [[deprecated("Use field access instead!")]] ::VROSC::SessionsLibraryUI::SessionSaveData*& dyn__cachedSaveData();
    // Get instance field reference: private System.Boolean _allowOnline
    [[deprecated("Use field access instead!")]] bool& dyn__allowOnline();
    // Get instance field reference: private VROSC.SessionsPanelUI _currentSessionsPanel
    [[deprecated("Use field access instead!")]] ::VROSC::SessionsPanelUI*& dyn__currentSessionsPanel();
    // Get instance field reference: private VROSC.SessionItemData _selectedItemData
    [[deprecated("Use field access instead!")]] ::VROSC::SessionItemData*& dyn__selectedItemData();
    // public System.Void .ctor()
    // Offset: 0x19922B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SessionsLibraryUI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SessionsLibraryUI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SessionsLibraryUI*, creationType>()));
    }
    // private System.Void Awake()
    // Offset: 0x198CB1C
    void Awake();
    // private System.Void OnEnable()
    // Offset: 0x198D564
    void OnEnable();
    // private System.Void ForceUpdateDataLoaded()
    // Offset: 0x198D718
    void ForceUpdateDataLoaded();
    // private System.Void OpenUpdateNoticeWindow()
    // Offset: 0x198DC24
    void OpenUpdateNoticeWindow();
    // private System.Void ContinueWithoutUpdating()
    // Offset: 0x198DC68
    void ContinueWithoutUpdating();
    // private System.Void OpenMainWindow(System.Boolean allowOnline)
    // Offset: 0x198D7D8
    void OpenMainWindow(bool allowOnline);
    // private System.Void OnDisable()
    // Offset: 0x198E50C
    void OnDisable();
    // private System.Void OnDestroy()
    // Offset: 0x198E798
    void OnDestroy();
    // private System.Void SetButtonsActive(System.Boolean active)
    // Offset: 0x198EF1C
    void SetButtonsActive(bool active);
    // private System.Void SetSelectedSessionButtonsActive(System.Boolean active)
    // Offset: 0x198EFF4
    void SetSelectedSessionButtonsActive(bool active);
    // private System.Void TabChanged(VROSC.UI.TabButton tabButton)
    // Offset: 0x198DEE0
    void TabChanged(::VROSC::UI::TabButton* tabButton);
    // public System.Void ShowChangeEmailPopup()
    // Offset: 0x198F260
    void ShowChangeEmailPopup();
    // public System.Void ShowChangePasswordPopup()
    // Offset: 0x198F268
    void ShowChangePasswordPopup();
    // public System.Void Refresh()
    // Offset: 0x198F270
    void Refresh();
    // private System.Void SearchFieldChanged(System.String text)
    // Offset: 0x198F350
    void SearchFieldChanged(::StringW text);
    // private System.Void OrderingChanged(VROSC.SessionsLibraryUI/VROSC.OrderingType orderingType, VROSC.SessionsLibraryUI/VROSC.OrderingDirection orderingDirection)
    // Offset: 0x198F3E4
    void OrderingChanged(::VROSC::SessionsLibraryUI::OrderingType orderingType, ::VROSC::SessionsLibraryUI::OrderingDirection orderingDirection);
    // private System.Void ItemSelected(VROSC.SessionItemData itemData)
    // Offset: 0x198F48C
    void ItemSelected(::VROSC::SessionItemData* itemData);
    // private System.Void DeselectItem()
    // Offset: 0x198F108
    void DeselectItem();
    // private System.Void ProfileButtonPressed()
    // Offset: 0x198F524
    void ProfileButtonPressed();
    // private System.Void CloseButtonPressed()
    // Offset: 0x198F5E4
    void CloseButtonPressed();
    // private System.Void NewSessionButtonPressed()
    // Offset: 0x198F60C
    void NewSessionButtonPressed();
    // private System.Void SaveSessionButtonPressed()
    // Offset: 0x198F850
    void SaveSessionButtonPressed();
    // private System.Void SaveAsSessionButtonPressed()
    // Offset: 0x198FB10
    void SaveAsSessionButtonPressed();
    // private System.Void LoadSessionButtonPressed()
    // Offset: 0x198FB3C
    void LoadSessionButtonPressed();
    // private System.Void DeleteSessionButtonPressed()
    // Offset: 0x198FC00
    void DeleteSessionButtonPressed();
    // private System.Void SaveSession(VROSC.SessionsLibraryUI/VROSC.SessionSaveData sessionSaveData, System.Boolean isValidated)
    // Offset: 0x198FCC4
    void SaveSession(::VROSC::SessionsLibraryUI::SessionSaveData* sessionSaveData, bool isValidated);
    // private System.Void SessionsValidated()
    // Offset: 0x1990B4C
    void SessionsValidated();
    // private System.Void SessionDataUpdateSucceeded(System.String sessionId)
    // Offset: 0x1990B54
    void SessionDataUpdateSucceeded(::StringW sessionId);
    // private System.Void SessionDataUpdateFailed(System.String sessionId, VROSC.Error error)
    // Offset: 0x1990CDC
    void SessionDataUpdateFailed(::StringW sessionId, ::VROSC::Error error);
    // private System.Void SessionPreviewLoadSucceded(System.String sessionId, UnityEngine.AudioClip audioClip, System.Single previewNormalizeMultiplier)
    // Offset: 0x1990D88
    void SessionPreviewLoadSucceded(::StringW sessionId, ::UnityEngine::AudioClip* audioClip, float previewNormalizeMultiplier);
    // private System.Void SessionPreviewLoadFailed(System.String sessionId, VROSC.Error error)
    // Offset: 0x1990DA0
    void SessionPreviewLoadFailed(::StringW sessionId, ::VROSC::Error error);
    // private System.Void SaveSessionCanceled()
    // Offset: 0x1990DD0
    void SaveSessionCanceled();
    // private System.Void SaveSessionSucceeded(System.String sessionId)
    // Offset: 0x1990DDC
    void SaveSessionSucceeded(::StringW sessionId);
    // private System.Void SaveSessionFailed(System.String sessionId, VROSC.Error error)
    // Offset: 0x1991108
    void SaveSessionFailed(::StringW sessionId, ::VROSC::Error error);
    // private System.Void SaveSessionProgressed(System.String sessionId, System.Single progress)
    // Offset: 0x19913D4
    void SaveSessionProgressed(::StringW sessionId, float progress);
    // private System.Void UploadSessionProgressed(System.String sessionId, System.Single progress)
    // Offset: 0x19913F0
    void UploadSessionProgressed(::StringW sessionId, float progress);
    // private System.Void UploadSessionPreviewProgressed(System.String sessionId, System.Single progress)
    // Offset: 0x199140C
    void UploadSessionPreviewProgressed(::StringW sessionId, float progress);
    // private System.Void LoadSessionSucceeded(System.String sessionId, System.Boolean isDefaultSession)
    // Offset: 0x1991428
    void LoadSessionSucceeded(::StringW sessionId, bool isDefaultSession);
    // private System.Void LoadSessionFailed(System.String sessionId, System.Boolean isDefaultSession, VROSC.Error error)
    // Offset: 0x1991958
    void LoadSessionFailed(::StringW sessionId, bool isDefaultSession, ::VROSC::Error error);
    // private System.Void LoadSessionProgressed(System.String sessionId, System.Single progress)
    // Offset: 0x1991C24
    void LoadSessionProgressed(::StringW sessionId, float progress);
    // private System.Void DownloadSessionProgressed(System.String sessionId, System.Single progress)
    // Offset: 0x1991C40
    void DownloadSessionProgressed(::StringW sessionId, float progress);
    // private System.Void DeleteSessionSucceeded(System.String sessionId)
    // Offset: 0x1991C5C
    void DeleteSessionSucceeded(::StringW sessionId);
    // private System.Void DeleteSessionFailed(System.String sessionId, VROSC.Error error)
    // Offset: 0x1991EF4
    void DeleteSessionFailed(::StringW sessionId, ::VROSC::Error error);
    // public System.Void FilterWith(System.String filter)
    // Offset: 0x1986434
    void FilterWith(::StringW filter);
    // private System.Void SetInConfirmationState(System.Boolean isInConfirmationState, VROSC.ConfirmationUIPopup/VROSC.Data data, System.Action confirmCallback, System.Action cancelCallback)
    // Offset: 0x198F6D0
    void SetInConfirmationState(bool isInConfirmationState, ::VROSC::ConfirmationUIPopup::Data* data, ::System::Action* confirmCallback, ::System::Action* cancelCallback);
    // private System.Void SetInSavingState(System.Boolean isInSavingState, System.Boolean isNewSave)
    // Offset: 0x198F918
    void SetInSavingState(bool isInSavingState, bool isNewSave);
    // private System.Void SetInLoadingState(System.Boolean isInLoadingState)
    // Offset: 0x1991730
    void SetInLoadingState(bool isInLoadingState);
    // private System.Void SetIsWaitingForValidationState(System.Boolean isWaiting)
    // Offset: 0x198DD60
    void SetIsWaitingForValidationState(bool isWaiting);
    // private System.Void OpenLoginPopup(VROSC.LoginUIPopup/VROSC.Panel panel)
    // Offset: 0x198F174
    void OpenLoginPopup(::VROSC::LoginUIPopup::Panel panel);
    // public System.Void CloseLoginPopup()
    // Offset: 0x198F158
    void CloseLoginPopup();
    // private System.Void LoginPopupClosed()
    // Offset: 0x19920FC
    void LoginPopupClosed();
    // private System.Void ClosedLoadSessionPopup()
    // Offset: 0x1992178
    void ClosedLoadSessionPopup();
    // private System.Void UserLoggedIn(System.String email, System.Boolean isVerified)
    // Offset: 0x1992180
    void UserLoggedIn(::StringW email, bool isVerified);
    // private System.Void UserLoggedOut()
    // Offset: 0x19921A8
    void UserLoggedOut();
    // private System.Void OnApplicationQuit()
    // Offset: 0x1992290
    void OnApplicationQuit();
    // private System.Void <NewSessionButtonPressed>b__59_0()
    // Offset: 0x19922C8
    void $NewSessionButtonPressed$b__59_0();
    // private System.Void <NewSessionButtonPressed>b__59_1()
    // Offset: 0x19927B0
    void $NewSessionButtonPressed$b__59_1();
    // private System.Void <LoadSessionButtonPressed>b__62_0()
    // Offset: 0x1992800
    void $LoadSessionButtonPressed$b__62_0();
    // private System.Void <LoadSessionButtonPressed>b__62_1()
    // Offset: 0x1993078
    void $LoadSessionButtonPressed$b__62_1();
    // private System.Void <DeleteSessionButtonPressed>b__63_0()
    // Offset: 0x19930C8
    void $DeleteSessionButtonPressed$b__63_0();
    // private System.Void <DeleteSessionButtonPressed>b__63_1()
    // Offset: 0x1993544
    void $DeleteSessionButtonPressed$b__63_1();
  }; // VROSC.SessionsLibraryUI
  #pragma pack(pop)
  static check_size<sizeof(SessionsLibraryUI), 272 + sizeof(::VROSC::SessionItemData*)> __VROSC_SessionsLibraryUISizeCheck;
  static_assert(sizeof(SessionsLibraryUI) == 0x118);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::VROSC::SessionsLibraryUI::State, "VROSC", "SessionsLibraryUI/State");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::ForceUpdateDataLoaded
// Il2CppName: ForceUpdateDataLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::ForceUpdateDataLoaded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "ForceUpdateDataLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::OpenUpdateNoticeWindow
// Il2CppName: OpenUpdateNoticeWindow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::OpenUpdateNoticeWindow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "OpenUpdateNoticeWindow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::ContinueWithoutUpdating
// Il2CppName: ContinueWithoutUpdating
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::ContinueWithoutUpdating)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "ContinueWithoutUpdating", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::OpenMainWindow
// Il2CppName: OpenMainWindow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(bool)>(&VROSC::SessionsLibraryUI::OpenMainWindow)> {
  static const MethodInfo* get() {
    static auto* allowOnline = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "OpenMainWindow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{allowOnline});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SetButtonsActive
// Il2CppName: SetButtonsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(bool)>(&VROSC::SessionsLibraryUI::SetButtonsActive)> {
  static const MethodInfo* get() {
    static auto* active = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SetButtonsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{active});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SetSelectedSessionButtonsActive
// Il2CppName: SetSelectedSessionButtonsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(bool)>(&VROSC::SessionsLibraryUI::SetSelectedSessionButtonsActive)> {
  static const MethodInfo* get() {
    static auto* active = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SetSelectedSessionButtonsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{active});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::TabChanged
// Il2CppName: TabChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::VROSC::UI::TabButton*)>(&VROSC::SessionsLibraryUI::TabChanged)> {
  static const MethodInfo* get() {
    static auto* tabButton = &::il2cpp_utils::GetClassFromName("VROSC.UI", "TabButton")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "TabChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tabButton});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::ShowChangeEmailPopup
// Il2CppName: ShowChangeEmailPopup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::ShowChangeEmailPopup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "ShowChangeEmailPopup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::ShowChangePasswordPopup
// Il2CppName: ShowChangePasswordPopup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::ShowChangePasswordPopup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "ShowChangePasswordPopup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::Refresh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SearchFieldChanged
// Il2CppName: SearchFieldChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW)>(&VROSC::SessionsLibraryUI::SearchFieldChanged)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SearchFieldChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::OrderingChanged
// Il2CppName: OrderingChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::VROSC::SessionsLibraryUI::OrderingType, ::VROSC::SessionsLibraryUI::OrderingDirection)>(&VROSC::SessionsLibraryUI::OrderingChanged)> {
  static const MethodInfo* get() {
    static auto* orderingType = &::il2cpp_utils::GetClassFromName("VROSC", "SessionsLibraryUI/OrderingType")->byval_arg;
    static auto* orderingDirection = &::il2cpp_utils::GetClassFromName("VROSC", "SessionsLibraryUI/OrderingDirection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "OrderingChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{orderingType, orderingDirection});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::ItemSelected
// Il2CppName: ItemSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::VROSC::SessionItemData*)>(&VROSC::SessionsLibraryUI::ItemSelected)> {
  static const MethodInfo* get() {
    static auto* itemData = &::il2cpp_utils::GetClassFromName("VROSC", "SessionItemData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "ItemSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemData});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::DeselectItem
// Il2CppName: DeselectItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::DeselectItem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "DeselectItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::ProfileButtonPressed
// Il2CppName: ProfileButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::ProfileButtonPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "ProfileButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::CloseButtonPressed
// Il2CppName: CloseButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::CloseButtonPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "CloseButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::NewSessionButtonPressed
// Il2CppName: NewSessionButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::NewSessionButtonPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "NewSessionButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SaveSessionButtonPressed
// Il2CppName: SaveSessionButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::SaveSessionButtonPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SaveSessionButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SaveAsSessionButtonPressed
// Il2CppName: SaveAsSessionButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::SaveAsSessionButtonPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SaveAsSessionButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::LoadSessionButtonPressed
// Il2CppName: LoadSessionButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::LoadSessionButtonPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "LoadSessionButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::DeleteSessionButtonPressed
// Il2CppName: DeleteSessionButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::DeleteSessionButtonPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "DeleteSessionButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SaveSession
// Il2CppName: SaveSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::VROSC::SessionsLibraryUI::SessionSaveData*, bool)>(&VROSC::SessionsLibraryUI::SaveSession)> {
  static const MethodInfo* get() {
    static auto* sessionSaveData = &::il2cpp_utils::GetClassFromName("VROSC", "SessionsLibraryUI/SessionSaveData")->byval_arg;
    static auto* isValidated = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SaveSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionSaveData, isValidated});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SessionsValidated
// Il2CppName: SessionsValidated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::SessionsValidated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SessionsValidated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SessionDataUpdateSucceeded
// Il2CppName: SessionDataUpdateSucceeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW)>(&VROSC::SessionsLibraryUI::SessionDataUpdateSucceeded)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SessionDataUpdateSucceeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SessionDataUpdateFailed
// Il2CppName: SessionDataUpdateFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW, ::VROSC::Error)>(&VROSC::SessionsLibraryUI::SessionDataUpdateFailed)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SessionDataUpdateFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, error});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SessionPreviewLoadSucceded
// Il2CppName: SessionPreviewLoadSucceded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW, ::UnityEngine::AudioClip*, float)>(&VROSC::SessionsLibraryUI::SessionPreviewLoadSucceded)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* audioClip = &::il2cpp_utils::GetClassFromName("UnityEngine", "AudioClip")->byval_arg;
    static auto* previewNormalizeMultiplier = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SessionPreviewLoadSucceded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, audioClip, previewNormalizeMultiplier});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SessionPreviewLoadFailed
// Il2CppName: SessionPreviewLoadFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW, ::VROSC::Error)>(&VROSC::SessionsLibraryUI::SessionPreviewLoadFailed)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SessionPreviewLoadFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, error});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SaveSessionCanceled
// Il2CppName: SaveSessionCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::SaveSessionCanceled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SaveSessionCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SaveSessionSucceeded
// Il2CppName: SaveSessionSucceeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW)>(&VROSC::SessionsLibraryUI::SaveSessionSucceeded)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SaveSessionSucceeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SaveSessionFailed
// Il2CppName: SaveSessionFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW, ::VROSC::Error)>(&VROSC::SessionsLibraryUI::SaveSessionFailed)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SaveSessionFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, error});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SaveSessionProgressed
// Il2CppName: SaveSessionProgressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW, float)>(&VROSC::SessionsLibraryUI::SaveSessionProgressed)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* progress = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SaveSessionProgressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, progress});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::UploadSessionProgressed
// Il2CppName: UploadSessionProgressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW, float)>(&VROSC::SessionsLibraryUI::UploadSessionProgressed)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* progress = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "UploadSessionProgressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, progress});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::UploadSessionPreviewProgressed
// Il2CppName: UploadSessionPreviewProgressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW, float)>(&VROSC::SessionsLibraryUI::UploadSessionPreviewProgressed)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* progress = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "UploadSessionPreviewProgressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, progress});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::LoadSessionSucceeded
// Il2CppName: LoadSessionSucceeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW, bool)>(&VROSC::SessionsLibraryUI::LoadSessionSucceeded)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isDefaultSession = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "LoadSessionSucceeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, isDefaultSession});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::LoadSessionFailed
// Il2CppName: LoadSessionFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW, bool, ::VROSC::Error)>(&VROSC::SessionsLibraryUI::LoadSessionFailed)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isDefaultSession = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "LoadSessionFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, isDefaultSession, error});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::LoadSessionProgressed
// Il2CppName: LoadSessionProgressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW, float)>(&VROSC::SessionsLibraryUI::LoadSessionProgressed)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* progress = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "LoadSessionProgressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, progress});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::DownloadSessionProgressed
// Il2CppName: DownloadSessionProgressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW, float)>(&VROSC::SessionsLibraryUI::DownloadSessionProgressed)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* progress = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "DownloadSessionProgressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, progress});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::DeleteSessionSucceeded
// Il2CppName: DeleteSessionSucceeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW)>(&VROSC::SessionsLibraryUI::DeleteSessionSucceeded)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "DeleteSessionSucceeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::DeleteSessionFailed
// Il2CppName: DeleteSessionFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW, ::VROSC::Error)>(&VROSC::SessionsLibraryUI::DeleteSessionFailed)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "DeleteSessionFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, error});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::FilterWith
// Il2CppName: FilterWith
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW)>(&VROSC::SessionsLibraryUI::FilterWith)> {
  static const MethodInfo* get() {
    static auto* filter = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "FilterWith", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{filter});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SetInConfirmationState
// Il2CppName: SetInConfirmationState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(bool, ::VROSC::ConfirmationUIPopup::Data*, ::System::Action*, ::System::Action*)>(&VROSC::SessionsLibraryUI::SetInConfirmationState)> {
  static const MethodInfo* get() {
    static auto* isInConfirmationState = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("VROSC", "ConfirmationUIPopup/Data")->byval_arg;
    static auto* confirmCallback = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* cancelCallback = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SetInConfirmationState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isInConfirmationState, data, confirmCallback, cancelCallback});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SetInSavingState
// Il2CppName: SetInSavingState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(bool, bool)>(&VROSC::SessionsLibraryUI::SetInSavingState)> {
  static const MethodInfo* get() {
    static auto* isInSavingState = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isNewSave = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SetInSavingState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isInSavingState, isNewSave});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SetInLoadingState
// Il2CppName: SetInLoadingState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(bool)>(&VROSC::SessionsLibraryUI::SetInLoadingState)> {
  static const MethodInfo* get() {
    static auto* isInLoadingState = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SetInLoadingState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isInLoadingState});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::SetIsWaitingForValidationState
// Il2CppName: SetIsWaitingForValidationState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(bool)>(&VROSC::SessionsLibraryUI::SetIsWaitingForValidationState)> {
  static const MethodInfo* get() {
    static auto* isWaiting = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "SetIsWaitingForValidationState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isWaiting});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::OpenLoginPopup
// Il2CppName: OpenLoginPopup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::VROSC::LoginUIPopup::Panel)>(&VROSC::SessionsLibraryUI::OpenLoginPopup)> {
  static const MethodInfo* get() {
    static auto* panel = &::il2cpp_utils::GetClassFromName("VROSC", "LoginUIPopup/Panel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "OpenLoginPopup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{panel});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::CloseLoginPopup
// Il2CppName: CloseLoginPopup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::CloseLoginPopup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "CloseLoginPopup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::LoginPopupClosed
// Il2CppName: LoginPopupClosed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::LoginPopupClosed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "LoginPopupClosed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::ClosedLoadSessionPopup
// Il2CppName: ClosedLoadSessionPopup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::ClosedLoadSessionPopup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "ClosedLoadSessionPopup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::UserLoggedIn
// Il2CppName: UserLoggedIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)(::StringW, bool)>(&VROSC::SessionsLibraryUI::UserLoggedIn)> {
  static const MethodInfo* get() {
    static auto* email = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isVerified = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "UserLoggedIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{email, isVerified});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::UserLoggedOut
// Il2CppName: UserLoggedOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::UserLoggedOut)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "UserLoggedOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::OnApplicationQuit
// Il2CppName: OnApplicationQuit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::OnApplicationQuit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "OnApplicationQuit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::$NewSessionButtonPressed$b__59_0
// Il2CppName: <NewSessionButtonPressed>b__59_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::$NewSessionButtonPressed$b__59_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "<NewSessionButtonPressed>b__59_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::$NewSessionButtonPressed$b__59_1
// Il2CppName: <NewSessionButtonPressed>b__59_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::$NewSessionButtonPressed$b__59_1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "<NewSessionButtonPressed>b__59_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::$LoadSessionButtonPressed$b__62_0
// Il2CppName: <LoadSessionButtonPressed>b__62_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::$LoadSessionButtonPressed$b__62_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "<LoadSessionButtonPressed>b__62_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::$LoadSessionButtonPressed$b__62_1
// Il2CppName: <LoadSessionButtonPressed>b__62_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::$LoadSessionButtonPressed$b__62_1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "<LoadSessionButtonPressed>b__62_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::$DeleteSessionButtonPressed$b__63_0
// Il2CppName: <DeleteSessionButtonPressed>b__63_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::$DeleteSessionButtonPressed$b__63_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "<DeleteSessionButtonPressed>b__63_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsLibraryUI::$DeleteSessionButtonPressed$b__63_1
// Il2CppName: <DeleteSessionButtonPressed>b__63_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsLibraryUI::*)()>(&VROSC::SessionsLibraryUI::$DeleteSessionButtonPressed$b__63_1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsLibraryUI*), "<DeleteSessionButtonPressed>b__63_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
