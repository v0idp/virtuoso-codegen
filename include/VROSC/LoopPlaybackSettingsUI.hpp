// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: VROSC.LoopPlaybackConfig
#include "VROSC/LoopPlaybackConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: UISlideToggle
  class UISlideToggle;
  // Forward declaring type: UISpinner
  class UISpinner;
  // Forward declaring type: InputDevice
  class InputDevice;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: LoopPlaybackSettingsUI
  class LoopPlaybackSettingsUI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::LoopPlaybackSettingsUI);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::LoopPlaybackSettingsUI*, "VROSC", "LoopPlaybackSettingsUI");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x69
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.LoopPlaybackSettingsUI
  // [TokenAttribute] Offset: FFFFFFFF
  class LoopPlaybackSettingsUI : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private System.Boolean <IsOpen>k__BackingField
    // Size: 0x1
    // Offset: 0x18
    bool IsOpen;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IsOpen and: oneShotToggle
    char __padding0[0x7] = {};
    // [HeaderAttribute] Offset: 0x78435C
    // protected VROSC.UISlideToggle _oneShotToggle
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::UISlideToggle* oneShotToggle;
    // Field size check
    static_assert(sizeof(::VROSC::UISlideToggle*) == 0x8);
    // protected VROSC.UISlideToggle _retriggerToggle
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::UISlideToggle* retriggerToggle;
    // Field size check
    static_assert(sizeof(::VROSC::UISlideToggle*) == 0x8);
    // protected VROSC.UISpinner _startSpinner
    // Size: 0x8
    // Offset: 0x30
    ::VROSC::UISpinner* startSpinner;
    // Field size check
    static_assert(sizeof(::VROSC::UISpinner*) == 0x8);
    // protected VROSC.UISpinner _stopSpinner
    // Size: 0x8
    // Offset: 0x38
    ::VROSC::UISpinner* stopSpinner;
    // Field size check
    static_assert(sizeof(::VROSC::UISpinner*) == 0x8);
    // protected VROSC.UISpinner _fadeInSpinner
    // Size: 0x8
    // Offset: 0x40
    ::VROSC::UISpinner* fadeInSpinner;
    // Field size check
    static_assert(sizeof(::VROSC::UISpinner*) == 0x8);
    // protected VROSC.UISpinner _fadeOutSpinner
    // Size: 0x8
    // Offset: 0x48
    ::VROSC::UISpinner* fadeOutSpinner;
    // Field size check
    static_assert(sizeof(::VROSC::UISpinner*) == 0x8);
    // protected System.Boolean _closeWhenOtherWindowOpens
    // Size: 0x1
    // Offset: 0x50
    bool closeWhenOtherWindowOpens;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: closeWhenOtherWindowOpens and: OnActivatedSelf
    char __padding7[0x7] = {};
    // public System.Action`1<System.Boolean> OnActivatedSelf
    // Size: 0x8
    // Offset: 0x58
    ::System::Action_1<bool>* OnActivatedSelf;
    // Field size check
    static_assert(sizeof(::System::Action_1<bool>*) == 0x8);
    // private VROSC.LoopPlaybackConfig _config
    // Size: 0x8
    // Offset: 0x60
    ::VROSC::LoopPlaybackConfig* config;
    // Field size check
    static_assert(sizeof(::VROSC::LoopPlaybackConfig*) == 0x8);
    // private System.Boolean _setupDone
    // Size: 0x1
    // Offset: 0x68
    bool setupDone;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get static field: static public System.Action`1<System.Boolean> OnActivated
    static ::System::Action_1<bool>* _get_OnActivated();
    // Set static field: static public System.Action`1<System.Boolean> OnActivated
    static void _set_OnActivated(::System::Action_1<bool>* value);
    // Get instance field reference: private System.Boolean <IsOpen>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$IsOpen$k__BackingField();
    // Get instance field reference: protected VROSC.UISlideToggle _oneShotToggle
    [[deprecated("Use field access instead!")]] ::VROSC::UISlideToggle*& dyn__oneShotToggle();
    // Get instance field reference: protected VROSC.UISlideToggle _retriggerToggle
    [[deprecated("Use field access instead!")]] ::VROSC::UISlideToggle*& dyn__retriggerToggle();
    // Get instance field reference: protected VROSC.UISpinner _startSpinner
    [[deprecated("Use field access instead!")]] ::VROSC::UISpinner*& dyn__startSpinner();
    // Get instance field reference: protected VROSC.UISpinner _stopSpinner
    [[deprecated("Use field access instead!")]] ::VROSC::UISpinner*& dyn__stopSpinner();
    // Get instance field reference: protected VROSC.UISpinner _fadeInSpinner
    [[deprecated("Use field access instead!")]] ::VROSC::UISpinner*& dyn__fadeInSpinner();
    // Get instance field reference: protected VROSC.UISpinner _fadeOutSpinner
    [[deprecated("Use field access instead!")]] ::VROSC::UISpinner*& dyn__fadeOutSpinner();
    // Get instance field reference: protected System.Boolean _closeWhenOtherWindowOpens
    [[deprecated("Use field access instead!")]] bool& dyn__closeWhenOtherWindowOpens();
    // Get instance field reference: public System.Action`1<System.Boolean> OnActivatedSelf
    [[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& dyn_OnActivatedSelf();
    // Get instance field reference: private VROSC.LoopPlaybackConfig _config
    [[deprecated("Use field access instead!")]] ::VROSC::LoopPlaybackConfig*& dyn__config();
    // Get instance field reference: private System.Boolean _setupDone
    [[deprecated("Use field access instead!")]] bool& dyn__setupDone();
    // public System.Boolean get_IsOpen()
    // Offset: 0x19B7D6C
    bool get_IsOpen();
    // private System.Void set_IsOpen(System.Boolean value)
    // Offset: 0x19B7D60
    void set_IsOpen(bool value);
    // public System.Void .ctor()
    // Offset: 0x19B92B4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoopPlaybackSettingsUI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlaybackSettingsUI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoopPlaybackSettingsUI*, creationType>()));
    }
    // protected System.Void Awake()
    // Offset: 0x19B7D74
    void Awake();
    // private System.Void SetUIData()
    // Offset: 0x19B8124
    void SetUIData();
    // public System.Void SetConfig(VROSC.LoopPlaybackConfig config)
    // Offset: 0x19B8384
    void SetConfig(::VROSC::LoopPlaybackConfig* config);
    // private System.Void OnStartChanged(VROSC.LoopPlaybackConfig/VROSC.TriggerSync startMode)
    // Offset: 0x19B897C
    void OnStartChanged(::VROSC::LoopPlaybackConfig::TriggerSync startMode);
    // private System.Void OnStopChanged(VROSC.LoopPlaybackConfig/VROSC.TriggerSync stopMode)
    // Offset: 0x19B89A0
    void OnStopChanged(::VROSC::LoopPlaybackConfig::TriggerSync stopMode);
    // private System.Void OnOneShotChanged(System.Boolean oneShot)
    // Offset: 0x19B89C4
    void OnOneShotChanged(bool oneShot);
    // private System.Void OnRetriggerChanged(System.Boolean retrigger)
    // Offset: 0x19B8A44
    void OnRetriggerChanged(bool retrigger);
    // private System.Void OnFadeInChanged(VROSC.LoopPlaybackConfig/VROSC.FadeDuration fadeIn)
    // Offset: 0x19B8A68
    void OnFadeInChanged(::VROSC::LoopPlaybackConfig::FadeDuration fadeIn);
    // private System.Void OnFadeOutChanged(VROSC.LoopPlaybackConfig/VROSC.FadeDuration fadeOut)
    // Offset: 0x19B8A8C
    void OnFadeOutChanged(::VROSC::LoopPlaybackConfig::FadeDuration fadeOut);
    // protected System.Void OnDestroy()
    // Offset: 0x19B8AB0
    void OnDestroy();
    // private System.Void CloseIfOtherOpen(System.Boolean isOn)
    // Offset: 0x19B9108
    void CloseIfOtherOpen(bool isOn);
    // public System.Void SetOpen(System.Boolean isOn)
    // Offset: 0x19B7C9C
    void SetOpen(bool isOn);
    // private System.Void SetOneShot(VROSC.InputDevice inputDevice, System.Boolean oneShot)
    // Offset: 0x19B91BC
    void SetOneShot(::VROSC::InputDevice* inputDevice, bool oneShot);
    // private System.Void SetRetrigger(VROSC.InputDevice inputDevice, System.Boolean retrigger)
    // Offset: 0x19B9270
    void SetRetrigger(::VROSC::InputDevice* inputDevice, bool retrigger);
    // private System.Void SetStart(System.Int32 selection)
    // Offset: 0x19B9284
    void SetStart(int selection);
    // private System.Void SetStop(System.Int32 selection)
    // Offset: 0x19B9260
    void SetStop(int selection);
    // private System.Void SetFadeIn(System.Int32 selection)
    // Offset: 0x19B9294
    void SetFadeIn(int selection);
    // private System.Void SetFadeOut(System.Int32 selection)
    // Offset: 0x19B92A4
    void SetFadeOut(int selection);
  }; // VROSC.LoopPlaybackSettingsUI
  #pragma pack(pop)
  static check_size<sizeof(LoopPlaybackSettingsUI), 104 + sizeof(bool)> __VROSC_LoopPlaybackSettingsUISizeCheck;
  static_assert(sizeof(LoopPlaybackSettingsUI) == 0x69);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::get_IsOpen
// Il2CppName: get_IsOpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::LoopPlaybackSettingsUI::*)()>(&VROSC::LoopPlaybackSettingsUI::get_IsOpen)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "get_IsOpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::set_IsOpen
// Il2CppName: set_IsOpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)(bool)>(&VROSC::LoopPlaybackSettingsUI::set_IsOpen)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "set_IsOpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)()>(&VROSC::LoopPlaybackSettingsUI::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::SetUIData
// Il2CppName: SetUIData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)()>(&VROSC::LoopPlaybackSettingsUI::SetUIData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "SetUIData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::SetConfig
// Il2CppName: SetConfig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)(::VROSC::LoopPlaybackConfig*)>(&VROSC::LoopPlaybackSettingsUI::SetConfig)> {
  static const MethodInfo* get() {
    static auto* config = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "SetConfig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{config});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::OnStartChanged
// Il2CppName: OnStartChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)(::VROSC::LoopPlaybackConfig::TriggerSync)>(&VROSC::LoopPlaybackSettingsUI::OnStartChanged)> {
  static const MethodInfo* get() {
    static auto* startMode = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfig/TriggerSync")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "OnStartChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startMode});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::OnStopChanged
// Il2CppName: OnStopChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)(::VROSC::LoopPlaybackConfig::TriggerSync)>(&VROSC::LoopPlaybackSettingsUI::OnStopChanged)> {
  static const MethodInfo* get() {
    static auto* stopMode = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfig/TriggerSync")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "OnStopChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stopMode});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::OnOneShotChanged
// Il2CppName: OnOneShotChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)(bool)>(&VROSC::LoopPlaybackSettingsUI::OnOneShotChanged)> {
  static const MethodInfo* get() {
    static auto* oneShot = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "OnOneShotChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oneShot});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::OnRetriggerChanged
// Il2CppName: OnRetriggerChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)(bool)>(&VROSC::LoopPlaybackSettingsUI::OnRetriggerChanged)> {
  static const MethodInfo* get() {
    static auto* retrigger = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "OnRetriggerChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{retrigger});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::OnFadeInChanged
// Il2CppName: OnFadeInChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)(::VROSC::LoopPlaybackConfig::FadeDuration)>(&VROSC::LoopPlaybackSettingsUI::OnFadeInChanged)> {
  static const MethodInfo* get() {
    static auto* fadeIn = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfig/FadeDuration")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "OnFadeInChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fadeIn});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::OnFadeOutChanged
// Il2CppName: OnFadeOutChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)(::VROSC::LoopPlaybackConfig::FadeDuration)>(&VROSC::LoopPlaybackSettingsUI::OnFadeOutChanged)> {
  static const MethodInfo* get() {
    static auto* fadeOut = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlaybackConfig/FadeDuration")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "OnFadeOutChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fadeOut});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)()>(&VROSC::LoopPlaybackSettingsUI::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::CloseIfOtherOpen
// Il2CppName: CloseIfOtherOpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)(bool)>(&VROSC::LoopPlaybackSettingsUI::CloseIfOtherOpen)> {
  static const MethodInfo* get() {
    static auto* isOn = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "CloseIfOtherOpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isOn});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::SetOpen
// Il2CppName: SetOpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)(bool)>(&VROSC::LoopPlaybackSettingsUI::SetOpen)> {
  static const MethodInfo* get() {
    static auto* isOn = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "SetOpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isOn});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::SetOneShot
// Il2CppName: SetOneShot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)(::VROSC::InputDevice*, bool)>(&VROSC::LoopPlaybackSettingsUI::SetOneShot)> {
  static const MethodInfo* get() {
    static auto* inputDevice = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* oneShot = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "SetOneShot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputDevice, oneShot});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::SetRetrigger
// Il2CppName: SetRetrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)(::VROSC::InputDevice*, bool)>(&VROSC::LoopPlaybackSettingsUI::SetRetrigger)> {
  static const MethodInfo* get() {
    static auto* inputDevice = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* retrigger = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "SetRetrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputDevice, retrigger});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::SetStart
// Il2CppName: SetStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)(int)>(&VROSC::LoopPlaybackSettingsUI::SetStart)> {
  static const MethodInfo* get() {
    static auto* selection = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "SetStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selection});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::SetStop
// Il2CppName: SetStop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)(int)>(&VROSC::LoopPlaybackSettingsUI::SetStop)> {
  static const MethodInfo* get() {
    static auto* selection = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "SetStop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selection});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::SetFadeIn
// Il2CppName: SetFadeIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)(int)>(&VROSC::LoopPlaybackSettingsUI::SetFadeIn)> {
  static const MethodInfo* get() {
    static auto* selection = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "SetFadeIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selection});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlaybackSettingsUI::SetFadeOut
// Il2CppName: SetFadeOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlaybackSettingsUI::*)(int)>(&VROSC::LoopPlaybackSettingsUI::SetFadeOut)> {
  static const MethodInfo* get() {
    static auto* selection = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlaybackSettingsUI*), "SetFadeOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selection});
  }
};
