// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.TutorialInputDevice
#include "VROSC/TutorialInputDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: ControllerComponent
  class ControllerComponent;
  // Forward declaring type: TutorialVisualBlinking
  class TutorialVisualBlinking;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::TutorialInputDevice::BlinkingButton);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::TutorialInputDevice::BlinkingButton*, "VROSC", "TutorialInputDevice/BlinkingButton");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.TutorialInputDevice/VROSC.BlinkingButton
  // [TokenAttribute] Offset: FFFFFFFF
  class TutorialInputDevice::BlinkingButton : public ::Il2CppObject {
    public:
    public:
    // private VROSC.ControllerComponent <Component>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::VROSC::ControllerComponent* Component;
    // Field size check
    static_assert(sizeof(::VROSC::ControllerComponent*) == 0x8);
    // private VROSC.TutorialVisualBlinking <Blinking>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::TutorialVisualBlinking* Blinking;
    // Field size check
    static_assert(sizeof(::VROSC::TutorialVisualBlinking*) == 0x8);
    public:
    // Get instance field reference: private VROSC.ControllerComponent <Component>k__BackingField
    [[deprecated]] ::VROSC::ControllerComponent*& dyn_$Component$k__BackingField();
    // Get instance field reference: private VROSC.TutorialVisualBlinking <Blinking>k__BackingField
    [[deprecated]] ::VROSC::TutorialVisualBlinking*& dyn_$Blinking$k__BackingField();
    // public VROSC.ControllerComponent get_Component()
    // Offset: 0xE7F98C
    ::VROSC::ControllerComponent* get_Component();
    // private System.Void set_Component(VROSC.ControllerComponent value)
    // Offset: 0xE7F984
    void set_Component(::VROSC::ControllerComponent* value);
    // public VROSC.TutorialVisualBlinking get_Blinking()
    // Offset: 0xE7F99C
    ::VROSC::TutorialVisualBlinking* get_Blinking();
    // private System.Void set_Blinking(VROSC.TutorialVisualBlinking value)
    // Offset: 0xE7F994
    void set_Blinking(::VROSC::TutorialVisualBlinking* value);
    // public System.Void .ctor(VROSC.ControllerComponent component)
    // Offset: 0xE7F9A4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TutorialInputDevice::BlinkingButton* New_ctor(::VROSC::ControllerComponent* component) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TutorialInputDevice::BlinkingButton::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TutorialInputDevice::BlinkingButton*, creationType>(component)));
    }
    // public System.Boolean Update()
    // Offset: 0xE7FAC4
    bool Update();
    // private UnityEngine.Color GetCurrentColor()
    // Offset: 0xE7FB1C
    ::UnityEngine::Color GetCurrentColor();
    // private UnityEngine.Color GetNormalColor()
    // Offset: 0xE7FB3C
    ::UnityEngine::Color GetNormalColor();
  }; // VROSC.TutorialInputDevice/VROSC.BlinkingButton
  #pragma pack(pop)
  static check_size<sizeof(TutorialInputDevice::BlinkingButton), 24 + sizeof(::VROSC::TutorialVisualBlinking*)> __VROSC_TutorialInputDevice_BlinkingButtonSizeCheck;
  static_assert(sizeof(TutorialInputDevice::BlinkingButton) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::TutorialInputDevice::BlinkingButton::get_Component
// Il2CppName: get_Component
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::ControllerComponent* (VROSC::TutorialInputDevice::BlinkingButton::*)()>(&VROSC::TutorialInputDevice::BlinkingButton::get_Component)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::TutorialInputDevice::BlinkingButton*), "get_Component", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::TutorialInputDevice::BlinkingButton::set_Component
// Il2CppName: set_Component
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::TutorialInputDevice::BlinkingButton::*)(::VROSC::ControllerComponent*)>(&VROSC::TutorialInputDevice::BlinkingButton::set_Component)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("VROSC", "ControllerComponent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::TutorialInputDevice::BlinkingButton*), "set_Component", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::TutorialInputDevice::BlinkingButton::get_Blinking
// Il2CppName: get_Blinking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::TutorialVisualBlinking* (VROSC::TutorialInputDevice::BlinkingButton::*)()>(&VROSC::TutorialInputDevice::BlinkingButton::get_Blinking)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::TutorialInputDevice::BlinkingButton*), "get_Blinking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::TutorialInputDevice::BlinkingButton::set_Blinking
// Il2CppName: set_Blinking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::TutorialInputDevice::BlinkingButton::*)(::VROSC::TutorialVisualBlinking*)>(&VROSC::TutorialInputDevice::BlinkingButton::set_Blinking)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("VROSC", "TutorialVisualBlinking")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::TutorialInputDevice::BlinkingButton*), "set_Blinking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::TutorialInputDevice::BlinkingButton::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::TutorialInputDevice::BlinkingButton::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::TutorialInputDevice::BlinkingButton::*)()>(&VROSC::TutorialInputDevice::BlinkingButton::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::TutorialInputDevice::BlinkingButton*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::TutorialInputDevice::BlinkingButton::GetCurrentColor
// Il2CppName: GetCurrentColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (VROSC::TutorialInputDevice::BlinkingButton::*)()>(&VROSC::TutorialInputDevice::BlinkingButton::GetCurrentColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::TutorialInputDevice::BlinkingButton*), "GetCurrentColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::TutorialInputDevice::BlinkingButton::GetNormalColor
// Il2CppName: GetNormalColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (VROSC::TutorialInputDevice::BlinkingButton::*)()>(&VROSC::TutorialInputDevice::BlinkingButton::GetNormalColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::TutorialInputDevice::BlinkingButton*), "GetNormalColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
