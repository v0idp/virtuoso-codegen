// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: TransformMoverRelay
  class TransformMoverRelay;
  // Forward declaring type: InfoPanel
  class InfoPanel;
  // Forward declaring type: UIToggle
  class UIToggle;
  // Forward declaring type: UIButton
  class UIButton;
  // Forward declaring type: WidgetController
  class WidgetController;
  // Forward declaring type: InputDevice
  class InputDevice;
}
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshPro
  class TextMeshPro;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: ControlPanelUI
  class ControlPanelUI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::ControlPanelUI);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::ControlPanelUI*, "VROSC", "ControlPanelUI");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.ControlPanelUI
  // [TokenAttribute] Offset: FFFFFFFF
  class ControlPanelUI : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private VROSC.TransformMoverRelay _transformMoverRelay
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::TransformMoverRelay* transformMoverRelay;
    // Field size check
    static_assert(sizeof(::VROSC::TransformMoverRelay*) == 0x8);
    // private VROSC.InfoPanel _infoPanelUI
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::InfoPanel* infoPanelUI;
    // Field size check
    static_assert(sizeof(::VROSC::InfoPanel*) == 0x8);
    // private VROSC.UIToggle _infoButton
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::UIToggle* infoButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIToggle*) == 0x8);
    // private VROSC.UIButton _closeButton
    // Size: 0x8
    // Offset: 0x30
    ::VROSC::UIButton* closeButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIButton*) == 0x8);
    // protected TMPro.TextMeshPro _header
    // Size: 0x8
    // Offset: 0x38
    ::TMPro::TextMeshPro* header;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshPro*) == 0x8);
    // public System.Action OnClosePressed
    // Size: 0x8
    // Offset: 0x40
    ::System::Action* OnClosePressed;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.TransformMoverRelay _transformMoverRelay
    [[deprecated]] ::VROSC::TransformMoverRelay*& dyn__transformMoverRelay();
    // Get instance field reference: private VROSC.InfoPanel _infoPanelUI
    [[deprecated]] ::VROSC::InfoPanel*& dyn__infoPanelUI();
    // Get instance field reference: private VROSC.UIToggle _infoButton
    [[deprecated]] ::VROSC::UIToggle*& dyn__infoButton();
    // Get instance field reference: private VROSC.UIButton _closeButton
    [[deprecated]] ::VROSC::UIButton*& dyn__closeButton();
    // Get instance field reference: protected TMPro.TextMeshPro _header
    [[deprecated]] ::TMPro::TextMeshPro*& dyn__header();
    // Get instance field reference: public System.Action OnClosePressed
    [[deprecated]] ::System::Action*& dyn_OnClosePressed();
    // public VROSC.TransformMoverRelay get_TransformMoverRelay()
    // Offset: 0x94D110
    ::VROSC::TransformMoverRelay* get_TransformMoverRelay();
    // protected System.Void Awake()
    // Offset: 0x94D118
    void Awake();
    // protected System.Void OnDestroy()
    // Offset: 0x94D264
    void OnDestroy();
    // public System.Void Setup(VROSC.WidgetController widgetController)
    // Offset: 0x94D3B0
    void Setup(::VROSC::WidgetController* widgetController);
    // private System.Void InfoButtonToggled(VROSC.InputDevice device, System.Boolean isOn)
    // Offset: 0x94D4C8
    void InfoButtonToggled(::VROSC::InputDevice* device, bool isOn);
    // private System.Void CloseButtonPressed()
    // Offset: 0x94D4EC
    void CloseButtonPressed();
    // public System.Void .ctor()
    // Offset: 0x94D500
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ControlPanelUI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControlPanelUI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ControlPanelUI*, creationType>()));
    }
  }; // VROSC.ControlPanelUI
  #pragma pack(pop)
  static check_size<sizeof(ControlPanelUI), 64 + sizeof(::System::Action*)> __VROSC_ControlPanelUISizeCheck;
  static_assert(sizeof(ControlPanelUI) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::ControlPanelUI::get_TransformMoverRelay
// Il2CppName: get_TransformMoverRelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::TransformMoverRelay* (VROSC::ControlPanelUI::*)()>(&VROSC::ControlPanelUI::get_TransformMoverRelay)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::ControlPanelUI*), "get_TransformMoverRelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::ControlPanelUI::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ControlPanelUI::*)()>(&VROSC::ControlPanelUI::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::ControlPanelUI*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::ControlPanelUI::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ControlPanelUI::*)()>(&VROSC::ControlPanelUI::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::ControlPanelUI*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::ControlPanelUI::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ControlPanelUI::*)(::VROSC::WidgetController*)>(&VROSC::ControlPanelUI::Setup)> {
  static const MethodInfo* get() {
    static auto* widgetController = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::ControlPanelUI*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{widgetController});
  }
};
// Writing MetadataGetter for method: VROSC::ControlPanelUI::InfoButtonToggled
// Il2CppName: InfoButtonToggled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ControlPanelUI::*)(::VROSC::InputDevice*, bool)>(&VROSC::ControlPanelUI::InfoButtonToggled)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* isOn = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::ControlPanelUI*), "InfoButtonToggled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, isOn});
  }
};
// Writing MetadataGetter for method: VROSC::ControlPanelUI::CloseButtonPressed
// Il2CppName: CloseButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ControlPanelUI::*)()>(&VROSC::ControlPanelUI::CloseButtonPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::ControlPanelUI*), "CloseButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::ControlPanelUI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
