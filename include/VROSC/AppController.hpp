// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: UISchemeController
  class UISchemeController;
  // Forward declaring type: SettingsDataDefaults
  class SettingsDataDefaults;
  // Forward declaring type: Dashboard
  class Dashboard;
  // Forward declaring type: StartMenu
  class StartMenu;
  // Forward declaring type: FullScreenFxController
  class FullScreenFxController;
  // Forward declaring type: MicrophoneDeviceManager
  class MicrophoneDeviceManager;
  // Forward declaring type: IntroVideoPlayer
  class IntroVideoPlayer;
  // Forward declaring type: StateMachine
  class StateMachine;
  // Forward declaring type: StartState
  class StartState;
  // Forward declaring type: MainState
  class MainState;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: AudioSource
  class AudioSource;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PunchKeyboard
  class PunchKeyboard;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: AppController
  class AppController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::AppController);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::AppController*, "VROSC", "AppController");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x81
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.AppController
  // [TokenAttribute] Offset: FFFFFFFF
  class AppController : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::VROSC::AppController::$$c
    class $$c;
    public:
    // private VROSC.UISchemeController _uiSchemeController
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::UISchemeController* uiSchemeController;
    // Field size check
    static_assert(sizeof(::VROSC::UISchemeController*) == 0x8);
    // private VROSC.SettingsDataDefaults _settingsDataDefaults
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::SettingsDataDefaults* settingsDataDefaults;
    // Field size check
    static_assert(sizeof(::VROSC::SettingsDataDefaults*) == 0x8);
    // private VROSC.Dashboard _dashboardPrefab
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::Dashboard* dashboardPrefab;
    // Field size check
    static_assert(sizeof(::VROSC::Dashboard*) == 0x8);
    // private UnityEngine.GameObject _sessionsLibraryWindow
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* sessionsLibraryWindow;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private PunchKeyboard _keyboardPrefab
    // Size: 0x8
    // Offset: 0x38
    ::GlobalNamespace::PunchKeyboard* keyboardPrefab;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PunchKeyboard*) == 0x8);
    // private VROSC.StartMenu _startMenuPrefab
    // Size: 0x8
    // Offset: 0x40
    ::VROSC::StartMenu* startMenuPrefab;
    // Field size check
    static_assert(sizeof(::VROSC::StartMenu*) == 0x8);
    // private UnityEngine.AudioSource _startMenuMusic
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::AudioSource* startMenuMusic;
    // Field size check
    static_assert(sizeof(::UnityEngine::AudioSource*) == 0x8);
    // private VROSC.FullScreenFxController _fullScreenFxController
    // Size: 0x8
    // Offset: 0x50
    ::VROSC::FullScreenFxController* fullScreenFxController;
    // Field size check
    static_assert(sizeof(::VROSC::FullScreenFxController*) == 0x8);
    // private VROSC.MicrophoneDeviceManager _microphoneDeviceManager
    // Size: 0x8
    // Offset: 0x58
    ::VROSC::MicrophoneDeviceManager* microphoneDeviceManager;
    // Field size check
    static_assert(sizeof(::VROSC::MicrophoneDeviceManager*) == 0x8);
    // private VROSC.IntroVideoPlayer _introVideoPlayer
    // Size: 0x8
    // Offset: 0x60
    ::VROSC::IntroVideoPlayer* introVideoPlayer;
    // Field size check
    static_assert(sizeof(::VROSC::IntroVideoPlayer*) == 0x8);
    // private VROSC.StateMachine _stateMachine
    // Size: 0x8
    // Offset: 0x68
    ::VROSC::StateMachine* stateMachine;
    // Field size check
    static_assert(sizeof(::VROSC::StateMachine*) == 0x8);
    // private VROSC.StartState _startState
    // Size: 0x8
    // Offset: 0x70
    ::VROSC::StartState* startState;
    // Field size check
    static_assert(sizeof(::VROSC::StartState*) == 0x8);
    // private VROSC.MainState _mainState
    // Size: 0x8
    // Offset: 0x78
    ::VROSC::MainState* mainState;
    // Field size check
    static_assert(sizeof(::VROSC::MainState*) == 0x8);
    // private System.Boolean <IsPaused>k__BackingField
    // Size: 0x1
    // Offset: 0x80
    bool IsPaused;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get static field: static public System.Action OnStartCreating
    static ::System::Action* _get_OnStartCreating();
    // Set static field: static public System.Action OnStartCreating
    static void _set_OnStartCreating(::System::Action* value);
    // Get static field: static public System.Action`1<System.Boolean> OnAppPaused
    static ::System::Action_1<bool>* _get_OnAppPaused();
    // Set static field: static public System.Action`1<System.Boolean> OnAppPaused
    static void _set_OnAppPaused(::System::Action_1<bool>* value);
    // Get instance field reference: private VROSC.UISchemeController _uiSchemeController
    [[deprecated("Use field access instead!")]] ::VROSC::UISchemeController*& dyn__uiSchemeController();
    // Get instance field reference: private VROSC.SettingsDataDefaults _settingsDataDefaults
    [[deprecated("Use field access instead!")]] ::VROSC::SettingsDataDefaults*& dyn__settingsDataDefaults();
    // Get instance field reference: private VROSC.Dashboard _dashboardPrefab
    [[deprecated("Use field access instead!")]] ::VROSC::Dashboard*& dyn__dashboardPrefab();
    // Get instance field reference: private UnityEngine.GameObject _sessionsLibraryWindow
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn__sessionsLibraryWindow();
    // Get instance field reference: private PunchKeyboard _keyboardPrefab
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PunchKeyboard*& dyn__keyboardPrefab();
    // Get instance field reference: private VROSC.StartMenu _startMenuPrefab
    [[deprecated("Use field access instead!")]] ::VROSC::StartMenu*& dyn__startMenuPrefab();
    // Get instance field reference: private UnityEngine.AudioSource _startMenuMusic
    [[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& dyn__startMenuMusic();
    // Get instance field reference: private VROSC.FullScreenFxController _fullScreenFxController
    [[deprecated("Use field access instead!")]] ::VROSC::FullScreenFxController*& dyn__fullScreenFxController();
    // Get instance field reference: private VROSC.MicrophoneDeviceManager _microphoneDeviceManager
    [[deprecated("Use field access instead!")]] ::VROSC::MicrophoneDeviceManager*& dyn__microphoneDeviceManager();
    // Get instance field reference: private VROSC.IntroVideoPlayer _introVideoPlayer
    [[deprecated("Use field access instead!")]] ::VROSC::IntroVideoPlayer*& dyn__introVideoPlayer();
    // Get instance field reference: private VROSC.StateMachine _stateMachine
    [[deprecated("Use field access instead!")]] ::VROSC::StateMachine*& dyn__stateMachine();
    // Get instance field reference: private VROSC.StartState _startState
    [[deprecated("Use field access instead!")]] ::VROSC::StartState*& dyn__startState();
    // Get instance field reference: private VROSC.MainState _mainState
    [[deprecated("Use field access instead!")]] ::VROSC::MainState*& dyn__mainState();
    // Get instance field reference: private System.Boolean <IsPaused>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$IsPaused$k__BackingField();
    // public UnityEngine.GameObject get_SessionsLibraryWindow()
    // Offset: 0x96AC68
    ::UnityEngine::GameObject* get_SessionsLibraryWindow();
    // public VROSC.FullScreenFxController get_FullScreenFxController()
    // Offset: 0x96AC70
    ::VROSC::FullScreenFxController* get_FullScreenFxController();
    // public System.Boolean get_IsPaused()
    // Offset: 0x96AC78
    bool get_IsPaused();
    // public System.Void set_IsPaused(System.Boolean value)
    // Offset: 0x96AC80
    void set_IsPaused(bool value);
    // public System.Boolean get_IsReady()
    // Offset: 0x96AC8C
    bool get_IsReady();
    // public System.Void .ctor()
    // Offset: 0x96BEA0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AppController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AppController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AppController*, creationType>()));
    }
    // private System.Void Awake()
    // Offset: 0x96ACB0
    void Awake();
    // private System.Void Start()
    // Offset: 0x96B9D8
    void Start();
    // private System.Void OnDestroy()
    // Offset: 0x96BE80
    void OnDestroy();
    // private System.Void Update()
    // Offset: 0x96BE84
    void Update();
    // public System.Void InitializeApp()
    // Offset: 0x96BD98
    void InitializeApp();
    // static System.Func`1<System.Boolean> <Awake>g__Continue|25_0()
    // Offset: 0x96B3E8
    static ::System::Func_1<bool>* $Awake$g__Continue_25_0();
    // static System.Func`1<System.Boolean> <Awake>g__IsPlatformSelectorReady|25_1()
    // Offset: 0x96B4E0
    static ::System::Func_1<bool>* $Awake$g__IsPlatformSelectorReady_25_1();
    // static System.Func`1<System.Boolean> <Awake>g__IsMidiManagerReady|25_2()
    // Offset: 0x96B5D8
    static ::System::Func_1<bool>* $Awake$g__IsMidiManagerReady_25_2();
    // private System.Func`1<System.Boolean> <Awake>g__IsMicrophoneInitialized|25_3()
    // Offset: 0x96B6D0
    ::System::Func_1<bool>* $Awake$g__IsMicrophoneInitialized_25_3();
    // private System.Boolean <Awake>b__25_10()
    // Offset: 0x96BEA8
    bool $Awake$b__25_10();
    // static System.Func`1<System.Boolean> <Awake>g__IsLocalDataLoaded|25_4()
    // Offset: 0x96B75C
    static ::System::Func_1<bool>* $Awake$g__IsLocalDataLoaded_25_4();
    // static System.Func`1<System.Boolean> <Awake>g__IsScenesLoaded|25_5()
    // Offset: 0x96B854
    static ::System::Func_1<bool>* $Awake$g__IsScenesLoaded_25_5();
    // private System.Func`1<System.Boolean> <Awake>g__IsAppValidAndSplashVideoFinished|25_6()
    // Offset: 0x96B94C
    ::System::Func_1<bool>* $Awake$g__IsAppValidAndSplashVideoFinished_25_6();
    // private System.Boolean <Awake>b__25_13()
    // Offset: 0x96BEC4
    bool $Awake$b__25_13();
  }; // VROSC.AppController
  #pragma pack(pop)
  static check_size<sizeof(AppController), 128 + sizeof(bool)> __VROSC_AppControllerSizeCheck;
  static_assert(sizeof(AppController) == 0x81);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::AppController::get_SessionsLibraryWindow
// Il2CppName: get_SessionsLibraryWindow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (VROSC::AppController::*)()>(&VROSC::AppController::get_SessionsLibraryWindow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "get_SessionsLibraryWindow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::get_FullScreenFxController
// Il2CppName: get_FullScreenFxController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::FullScreenFxController* (VROSC::AppController::*)()>(&VROSC::AppController::get_FullScreenFxController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "get_FullScreenFxController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::get_IsPaused
// Il2CppName: get_IsPaused
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::AppController::*)()>(&VROSC::AppController::get_IsPaused)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "get_IsPaused", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::set_IsPaused
// Il2CppName: set_IsPaused
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AppController::*)(bool)>(&VROSC::AppController::set_IsPaused)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "set_IsPaused", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::get_IsReady
// Il2CppName: get_IsReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::AppController::*)()>(&VROSC::AppController::get_IsReady)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "get_IsReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::AppController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AppController::*)()>(&VROSC::AppController::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AppController::*)()>(&VROSC::AppController::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AppController::*)()>(&VROSC::AppController::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AppController::*)()>(&VROSC::AppController::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::InitializeApp
// Il2CppName: InitializeApp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AppController::*)()>(&VROSC::AppController::InitializeApp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "InitializeApp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::$Awake$g__Continue_25_0
// Il2CppName: <Awake>g__Continue|25_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_1<bool>* (*)()>(&VROSC::AppController::$Awake$g__Continue_25_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "<Awake>g__Continue|25_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::$Awake$g__IsPlatformSelectorReady_25_1
// Il2CppName: <Awake>g__IsPlatformSelectorReady|25_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_1<bool>* (*)()>(&VROSC::AppController::$Awake$g__IsPlatformSelectorReady_25_1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "<Awake>g__IsPlatformSelectorReady|25_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::$Awake$g__IsMidiManagerReady_25_2
// Il2CppName: <Awake>g__IsMidiManagerReady|25_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_1<bool>* (*)()>(&VROSC::AppController::$Awake$g__IsMidiManagerReady_25_2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "<Awake>g__IsMidiManagerReady|25_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::$Awake$g__IsMicrophoneInitialized_25_3
// Il2CppName: <Awake>g__IsMicrophoneInitialized|25_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_1<bool>* (VROSC::AppController::*)()>(&VROSC::AppController::$Awake$g__IsMicrophoneInitialized_25_3)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "<Awake>g__IsMicrophoneInitialized|25_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::$Awake$b__25_10
// Il2CppName: <Awake>b__25_10
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::AppController::*)()>(&VROSC::AppController::$Awake$b__25_10)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "<Awake>b__25_10", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::$Awake$g__IsLocalDataLoaded_25_4
// Il2CppName: <Awake>g__IsLocalDataLoaded|25_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_1<bool>* (*)()>(&VROSC::AppController::$Awake$g__IsLocalDataLoaded_25_4)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "<Awake>g__IsLocalDataLoaded|25_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::$Awake$g__IsScenesLoaded_25_5
// Il2CppName: <Awake>g__IsScenesLoaded|25_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_1<bool>* (*)()>(&VROSC::AppController::$Awake$g__IsScenesLoaded_25_5)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "<Awake>g__IsScenesLoaded|25_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::$Awake$g__IsAppValidAndSplashVideoFinished_25_6
// Il2CppName: <Awake>g__IsAppValidAndSplashVideoFinished|25_6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_1<bool>* (VROSC::AppController::*)()>(&VROSC::AppController::$Awake$g__IsAppValidAndSplashVideoFinished_25_6)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "<Awake>g__IsAppValidAndSplashVideoFinished|25_6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AppController::$Awake$b__25_13
// Il2CppName: <Awake>b__25_13
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::AppController::*)()>(&VROSC::AppController::$Awake$b__25_13)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AppController*), "<Awake>b__25_13", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
