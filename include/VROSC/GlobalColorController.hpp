// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: GlobalColorController
  class GlobalColorController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::GlobalColorController);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::GlobalColorController*, "VROSC", "GlobalColorController");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.GlobalColorController
  // [TokenAttribute] Offset: FFFFFFFF
  class GlobalColorController : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::VROSC::GlobalColorController::BeatGradient
    class BeatGradient;
    public:
    // private VROSC.GlobalColorController/VROSC.BeatGradient[] _beatGradients
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::VROSC::GlobalColorController::BeatGradient*> beatGradients;
    // Field size check
    static_assert(sizeof(::ArrayW<::VROSC::GlobalColorController::BeatGradient*>) == 0x8);
    // [RangeAttribute] Offset: 0x78C698
    // private System.Single _darkenOnMirror
    // Size: 0x4
    // Offset: 0x20
    float darkenOnMirror;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.GlobalColorController/VROSC.BeatGradient[] _beatGradients
    [[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::GlobalColorController::BeatGradient*>& dyn__beatGradients();
    // Get instance field reference: private System.Single _darkenOnMirror
    [[deprecated("Use field access instead!")]] float& dyn__darkenOnMirror();
    // public VROSC.GlobalColorController/VROSC.BeatGradient[] get_BeatGradients()
    // Offset: 0x19A3ABC
    ::ArrayW<::VROSC::GlobalColorController::BeatGradient*> get_BeatGradients();
    // public System.Void .ctor()
    // Offset: 0x19A3DCC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GlobalColorController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GlobalColorController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GlobalColorController*, creationType>()));
    }
    // private System.Void Start()
    // Offset: 0x19A3AC4
    void Start();
    // private System.Void SendBeat(System.Int32 beat)
    // Offset: 0x19A3BB0
    void SendBeat(int beat);
    // private System.Void OnDestroy()
    // Offset: 0x19A3CE0
    void OnDestroy();
  }; // VROSC.GlobalColorController
  #pragma pack(pop)
  static check_size<sizeof(GlobalColorController), 32 + sizeof(float)> __VROSC_GlobalColorControllerSizeCheck;
  static_assert(sizeof(GlobalColorController) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::GlobalColorController::get_BeatGradients
// Il2CppName: get_BeatGradients
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::VROSC::GlobalColorController::BeatGradient*> (VROSC::GlobalColorController::*)()>(&VROSC::GlobalColorController::get_BeatGradients)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::GlobalColorController*), "get_BeatGradients", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::GlobalColorController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::GlobalColorController::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::GlobalColorController::*)()>(&VROSC::GlobalColorController::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::GlobalColorController*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::GlobalColorController::SendBeat
// Il2CppName: SendBeat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::GlobalColorController::*)(int)>(&VROSC::GlobalColorController::SendBeat)> {
  static const MethodInfo* get() {
    static auto* beat = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::GlobalColorController*), "SendBeat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{beat});
  }
};
// Writing MetadataGetter for method: VROSC::GlobalColorController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::GlobalColorController::*)()>(&VROSC::GlobalColorController::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::GlobalColorController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
