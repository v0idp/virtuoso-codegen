// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: Interactable
  class Interactable;
  // Forward declaring type: LoopStationLoopHandler
  class LoopStationLoopHandler;
  // Forward declaring type: TutorialBlinkingUIElement
  class TutorialBlinkingUIElement;
  // Forward declaring type: InstrumentSettings
  class InstrumentSettings;
  // Forward declaring type: TutorialEvent
  struct TutorialEvent;
  // Forward declaring type: LoopPlayer
  class LoopPlayer;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: LooperTutorialHelper
  class LooperTutorialHelper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::LooperTutorialHelper);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::LooperTutorialHelper*, "VROSC", "LooperTutorialHelper");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x41
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.LooperTutorialHelper
  // [TokenAttribute] Offset: FFFFFFFF
  class LooperTutorialHelper : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private VROSC.Interactable[] _interactablesToDisable
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::VROSC::Interactable*> interactablesToDisable;
    // Field size check
    static_assert(sizeof(::ArrayW<::VROSC::Interactable*>) == 0x8);
    // private VROSC.LoopStationLoopHandler _loopHandler
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::LoopStationLoopHandler* loopHandler;
    // Field size check
    static_assert(sizeof(::VROSC::LoopStationLoopHandler*) == 0x8);
    // private VROSC.TutorialBlinkingUIElement _rerecordBlinker
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::TutorialBlinkingUIElement* rerecordBlinker;
    // Field size check
    static_assert(sizeof(::VROSC::TutorialBlinkingUIElement*) == 0x8);
    // private VROSC.InstrumentSettings _boardSettings
    // Size: 0x8
    // Offset: 0x30
    ::VROSC::InstrumentSettings* boardSettings;
    // Field size check
    static_assert(sizeof(::VROSC::InstrumentSettings*) == 0x8);
    // private System.Collections.Generic.List`1<VROSC.Interactable> _disabledInteractables
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::List_1<::VROSC::Interactable*>* disabledInteractables;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::VROSC::Interactable*>*) == 0x8);
    // private System.Boolean _waitingForFirstRecording
    // Size: 0x1
    // Offset: 0x40
    bool waitingForFirstRecording;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.Interactable[] _interactablesToDisable
    [[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::Interactable*>& dyn__interactablesToDisable();
    // Get instance field reference: private VROSC.LoopStationLoopHandler _loopHandler
    [[deprecated("Use field access instead!")]] ::VROSC::LoopStationLoopHandler*& dyn__loopHandler();
    // Get instance field reference: private VROSC.TutorialBlinkingUIElement _rerecordBlinker
    [[deprecated("Use field access instead!")]] ::VROSC::TutorialBlinkingUIElement*& dyn__rerecordBlinker();
    // Get instance field reference: private VROSC.InstrumentSettings _boardSettings
    [[deprecated("Use field access instead!")]] ::VROSC::InstrumentSettings*& dyn__boardSettings();
    // Get instance field reference: private System.Collections.Generic.List`1<VROSC.Interactable> _disabledInteractables
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VROSC::Interactable*>*& dyn__disabledInteractables();
    // Get instance field reference: private System.Boolean _waitingForFirstRecording
    [[deprecated("Use field access instead!")]] bool& dyn__waitingForFirstRecording();
    // public System.Void .ctor()
    // Offset: 0x197B7D8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LooperTutorialHelper* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LooperTutorialHelper::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LooperTutorialHelper*, creationType>()));
    }
    // protected System.Void Start()
    // Offset: 0x197ADA4
    void Start();
    // private System.Void TutorialEventTriggered(VROSC.TutorialEvent tutorialEvent)
    // Offset: 0x197AE94
    void TutorialEventTriggered(::VROSC::TutorialEvent tutorialEvent);
    // private System.Void WaitForFirstRecording()
    // Offset: 0x197B350
    void WaitForFirstRecording();
    // private System.Void FirstLoopRecorded(VROSC.LoopPlayer loopPlayer)
    // Offset: 0x197B434
    void FirstLoopRecorded(::VROSC::LoopPlayer* loopPlayer);
    // private System.Void AdditionalLoopRecorded(VROSC.LoopPlayer loopPlayer)
    // Offset: 0x197B568
    void AdditionalLoopRecorded(::VROSC::LoopPlayer* loopPlayer);
    // private System.Void RerecordStarted()
    // Offset: 0x197B6BC
    void RerecordStarted();
    // private System.Void DisableAllInteractables()
    // Offset: 0x197B260
    void DisableAllInteractables();
    // private System.Void ResetAll()
    // Offset: 0x197B118
    void ResetAll();
  }; // VROSC.LooperTutorialHelper
  #pragma pack(pop)
  static check_size<sizeof(LooperTutorialHelper), 64 + sizeof(bool)> __VROSC_LooperTutorialHelperSizeCheck;
  static_assert(sizeof(LooperTutorialHelper) == 0x41);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::LooperTutorialHelper::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::LooperTutorialHelper::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LooperTutorialHelper::*)()>(&VROSC::LooperTutorialHelper::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LooperTutorialHelper*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LooperTutorialHelper::TutorialEventTriggered
// Il2CppName: TutorialEventTriggered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LooperTutorialHelper::*)(::VROSC::TutorialEvent)>(&VROSC::LooperTutorialHelper::TutorialEventTriggered)> {
  static const MethodInfo* get() {
    static auto* tutorialEvent = &::il2cpp_utils::GetClassFromName("VROSC", "TutorialEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LooperTutorialHelper*), "TutorialEventTriggered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tutorialEvent});
  }
};
// Writing MetadataGetter for method: VROSC::LooperTutorialHelper::WaitForFirstRecording
// Il2CppName: WaitForFirstRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LooperTutorialHelper::*)()>(&VROSC::LooperTutorialHelper::WaitForFirstRecording)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LooperTutorialHelper*), "WaitForFirstRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LooperTutorialHelper::FirstLoopRecorded
// Il2CppName: FirstLoopRecorded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LooperTutorialHelper::*)(::VROSC::LoopPlayer*)>(&VROSC::LooperTutorialHelper::FirstLoopRecorded)> {
  static const MethodInfo* get() {
    static auto* loopPlayer = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LooperTutorialHelper*), "FirstLoopRecorded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{loopPlayer});
  }
};
// Writing MetadataGetter for method: VROSC::LooperTutorialHelper::AdditionalLoopRecorded
// Il2CppName: AdditionalLoopRecorded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LooperTutorialHelper::*)(::VROSC::LoopPlayer*)>(&VROSC::LooperTutorialHelper::AdditionalLoopRecorded)> {
  static const MethodInfo* get() {
    static auto* loopPlayer = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LooperTutorialHelper*), "AdditionalLoopRecorded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{loopPlayer});
  }
};
// Writing MetadataGetter for method: VROSC::LooperTutorialHelper::RerecordStarted
// Il2CppName: RerecordStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LooperTutorialHelper::*)()>(&VROSC::LooperTutorialHelper::RerecordStarted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LooperTutorialHelper*), "RerecordStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LooperTutorialHelper::DisableAllInteractables
// Il2CppName: DisableAllInteractables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LooperTutorialHelper::*)()>(&VROSC::LooperTutorialHelper::DisableAllInteractables)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LooperTutorialHelper*), "DisableAllInteractables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LooperTutorialHelper::ResetAll
// Il2CppName: ResetAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LooperTutorialHelper::*)()>(&VROSC::LooperTutorialHelper::ResetAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LooperTutorialHelper*), "ResetAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
