// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.BaseDataController
#include "VROSC/BaseDataController.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: VROSC.Session
#include "VROSC/Session.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: Tuple`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Tuple_3;
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: SessionsDataModel
  class SessionsDataModel;
  // Forward declaring type: SessionUIData
  class SessionUIData;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: SessionsDataController
  class SessionsDataController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::SessionsDataController);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::SessionsDataController*, "VROSC", "SessionsDataController");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.SessionsDataController
  // [TokenAttribute] Offset: FFFFFFFF
  class SessionsDataController : public ::VROSC::BaseDataController {
    public:
    public:
    // protected VROSC.Session _tempSession
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::Session* tempSession;
    // Field size check
    static_assert(sizeof(::VROSC::Session*) == 0x8);
    public:
    // Creating conversion operator: operator ::VROSC::Session*
    constexpr operator ::VROSC::Session*() const noexcept {
      return tempSession;
    }
    // static field const value: static protected System.String NewSessionName
    static constexpr const char* NewSessionName = "Save";
    // Get static field: static protected System.String NewSessionName
    static ::StringW _get_NewSessionName();
    // Set static field: static protected System.String NewSessionName
    static void _set_NewSessionName(::StringW value);
    // static field const value: static public System.Int32 SessionsVersion
    static constexpr const int SessionsVersion = 3;
    // Get static field: static public System.Int32 SessionsVersion
    static int _get_SessionsVersion();
    // Set static field: static public System.Int32 SessionsVersion
    static void _set_SessionsVersion(int value);
    // Get instance field reference: protected VROSC.Session _tempSession
    [[deprecated("Use field access instead!")]] ::VROSC::Session*& dyn__tempSession();
    // protected VROSC.SessionsDataModel get_SessionsDataModel()
    // Offset: 0x198863C
    ::VROSC::SessionsDataModel* get_SessionsDataModel();
    // public System.String CreateSession(System.String displayName, System.String description, System.Collections.Generic.List`1<System.Tuple`3<System.String,System.String,System.String>> contributors, System.String[] tags, System.String platformName, System.Int32 trackCount)
    // Offset: 0x19888B8
    ::StringW CreateSession(::StringW displayName, ::StringW description, ::System::Collections::Generic::List_1<::System::Tuple_3<::StringW, ::StringW, ::StringW>*>* contributors, ::ArrayW<::StringW> tags, ::StringW platformName, int trackCount);
    // public System.String CreateSession(System.String displayName, System.String description, System.Collections.Generic.List`1<System.Tuple`3<System.String,System.String,System.String>> contributors, System.String[] tags, System.String userId, System.String userName, System.String platformName, System.Int32 trackCount)
    // Offset: 0x1988CC4
    ::StringW CreateSession(::StringW displayName, ::StringW description, ::System::Collections::Generic::List_1<::System::Tuple_3<::StringW, ::StringW, ::StringW>*>* contributors, ::ArrayW<::StringW> tags, ::StringW userId, ::StringW userName, ::StringW platformName, int trackCount);
    // public System.Void CreateSession(System.String sessionId, System.String displayName, System.String description, System.Collections.Generic.List`1<System.Tuple`3<System.String,System.String,System.String>> contributors, System.String[] tags, System.String platformName, System.Int32 trackCount)
    // Offset: 0x198894C
    void CreateSession(::StringW sessionId, ::StringW displayName, ::StringW description, ::System::Collections::Generic::List_1<::System::Tuple_3<::StringW, ::StringW, ::StringW>*>* contributors, ::ArrayW<::StringW> tags, ::StringW platformName, int trackCount);
    // public System.Void RemoveSession(System.String sessionId, System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x1988DF8
    void RemoveSession(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Collections.Generic.List`1<System.String> GetSessionsIds()
    // Offset: 0x1988E38
    ::System::Collections::Generic::List_1<::StringW>* GetSessionsIds();
    // public System.Boolean HasSession(System.String sessionId)
    // Offset: 0x1988EB4
    bool HasSession(::StringW sessionId);
    // public System.Boolean HasSessionWithDisplayName(System.String displayName)
    // Offset: 0x1988F20
    bool HasSessionWithDisplayName(::StringW displayName);
    // public System.Boolean HasSessionWithDisplayNameAndAuthor(System.String displayName, System.String authorId)
    // Offset: 0x19890EC
    bool HasSessionWithDisplayNameAndAuthor(::StringW displayName, ::StringW authorId);
    // public System.Int32 GetSessionVersion(System.String sessionId)
    // Offset: 0x1989328
    int GetSessionVersion(::StringW sessionId);
    // public System.String GetSessionAuthorId(System.String sessionId)
    // Offset: 0x1989408
    ::StringW GetSessionAuthorId(::StringW sessionId);
    // public System.String GetSessionDisplayName(System.String sessionId)
    // Offset: 0x1989538
    ::StringW GetSessionDisplayName(::StringW sessionId);
    // public System.Collections.Generic.List`1<System.Tuple`3<System.String,System.String,System.String>> GetSessionContributors(System.String sessionId)
    // Offset: 0x19895B0
    ::System::Collections::Generic::List_1<::System::Tuple_3<::StringW, ::StringW, ::StringW>*>* GetSessionContributors(::StringW sessionId);
    // public System.Collections.Generic.List`1<VROSC.SessionUIData> GetSessionsUIData()
    // Offset: 0x1989868
    ::System::Collections::Generic::List_1<::VROSC::SessionUIData*>* GetSessionsUIData();
    // public VROSC.SessionUIData GetSessionUIData(System.String sessionId)
    // Offset: 0x19898A8
    ::VROSC::SessionUIData* GetSessionUIData(::StringW sessionId);
    // public System.Void SetHasPreview(System.String sessionId, System.Boolean hasPreview, System.Single multiplier, VROSC.Session/VROSC.PreviewSource previewSource)
    // Offset: 0x19898E8
    void SetHasPreview(::StringW sessionId, bool hasPreview, float multiplier, ::VROSC::Session::PreviewSource previewSource);
    // public System.Boolean GetSessionHasPreview(System.String sessionId)
    // Offset: 0x19899AC
    bool GetSessionHasPreview(::StringW sessionId);
    // public System.Boolean IsSessionPreviewOgg(System.String sessionId)
    // Offset: 0x1989A94
    bool IsSessionPreviewOgg(::StringW sessionId);
    // public System.Single GetSessionPreviewNormalizeMultiplier(System.String sessionId)
    // Offset: 0x1989B84
    float GetSessionPreviewNormalizeMultiplier(::StringW sessionId);
    // protected VROSC.Session GetSession(System.String sessionId)
    // Offset: 0x1989C64
    ::VROSC::Session* GetSession(::StringW sessionId);
    // protected System.String GenerateNewSessionId()
    // Offset: 0x1989D18
    ::StringW GenerateNewSessionId();
    // protected System.Void UserLoggedOut()
    // Offset: 0x1989D58
    void UserLoggedOut();
    // public System.Void .ctor()
    // Offset: 0x19886B8
    // Implemented from: VROSC.BaseDataController
    // Base method: System.Void BaseDataController::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SessionsDataController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SessionsDataController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SessionsDataController*, creationType>()));
    }
    // protected override System.Void Finalize()
    // Offset: 0x1988794
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // VROSC.SessionsDataController
  #pragma pack(pop)
  static check_size<sizeof(SessionsDataController), 40 + sizeof(::VROSC::Session*)> __VROSC_SessionsDataControllerSizeCheck;
  static_assert(sizeof(SessionsDataController) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::SessionsDataController::get_SessionsDataModel
// Il2CppName: get_SessionsDataModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::SessionsDataModel* (VROSC::SessionsDataController::*)()>(&VROSC::SessionsDataController::get_SessionsDataModel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "get_SessionsDataModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::CreateSession
// Il2CppName: CreateSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::SessionsDataController::*)(::StringW, ::StringW, ::System::Collections::Generic::List_1<::System::Tuple_3<::StringW, ::StringW, ::StringW>*>*, ::ArrayW<::StringW>, ::StringW, int)>(&VROSC::SessionsDataController::CreateSession)> {
  static const MethodInfo* get() {
    static auto* displayName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* description = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* contributors = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Tuple`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})})->byval_arg;
    static auto* tags = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* platformName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* trackCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "CreateSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{displayName, description, contributors, tags, platformName, trackCount});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::CreateSession
// Il2CppName: CreateSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::SessionsDataController::*)(::StringW, ::StringW, ::System::Collections::Generic::List_1<::System::Tuple_3<::StringW, ::StringW, ::StringW>*>*, ::ArrayW<::StringW>, ::StringW, ::StringW, ::StringW, int)>(&VROSC::SessionsDataController::CreateSession)> {
  static const MethodInfo* get() {
    static auto* displayName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* description = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* contributors = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Tuple`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})})->byval_arg;
    static auto* tags = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* platformName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* trackCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "CreateSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{displayName, description, contributors, tags, userId, userName, platformName, trackCount});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::CreateSession
// Il2CppName: CreateSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsDataController::*)(::StringW, ::StringW, ::StringW, ::System::Collections::Generic::List_1<::System::Tuple_3<::StringW, ::StringW, ::StringW>*>*, ::ArrayW<::StringW>, ::StringW, int)>(&VROSC::SessionsDataController::CreateSession)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* displayName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* description = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* contributors = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Tuple`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})})->byval_arg;
    static auto* tags = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* platformName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* trackCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "CreateSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, displayName, description, contributors, tags, platformName, trackCount});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::RemoveSession
// Il2CppName: RemoveSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsDataController::*)(::StringW, ::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::SessionsDataController::RemoveSession)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "RemoveSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::GetSessionsIds
// Il2CppName: GetSessionsIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::StringW>* (VROSC::SessionsDataController::*)()>(&VROSC::SessionsDataController::GetSessionsIds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "GetSessionsIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::HasSession
// Il2CppName: HasSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SessionsDataController::*)(::StringW)>(&VROSC::SessionsDataController::HasSession)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "HasSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::HasSessionWithDisplayName
// Il2CppName: HasSessionWithDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SessionsDataController::*)(::StringW)>(&VROSC::SessionsDataController::HasSessionWithDisplayName)> {
  static const MethodInfo* get() {
    static auto* displayName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "HasSessionWithDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{displayName});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::HasSessionWithDisplayNameAndAuthor
// Il2CppName: HasSessionWithDisplayNameAndAuthor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SessionsDataController::*)(::StringW, ::StringW)>(&VROSC::SessionsDataController::HasSessionWithDisplayNameAndAuthor)> {
  static const MethodInfo* get() {
    static auto* displayName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* authorId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "HasSessionWithDisplayNameAndAuthor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{displayName, authorId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::GetSessionVersion
// Il2CppName: GetSessionVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::SessionsDataController::*)(::StringW)>(&VROSC::SessionsDataController::GetSessionVersion)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "GetSessionVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::GetSessionAuthorId
// Il2CppName: GetSessionAuthorId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::SessionsDataController::*)(::StringW)>(&VROSC::SessionsDataController::GetSessionAuthorId)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "GetSessionAuthorId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::GetSessionDisplayName
// Il2CppName: GetSessionDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::SessionsDataController::*)(::StringW)>(&VROSC::SessionsDataController::GetSessionDisplayName)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "GetSessionDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::GetSessionContributors
// Il2CppName: GetSessionContributors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::System::Tuple_3<::StringW, ::StringW, ::StringW>*>* (VROSC::SessionsDataController::*)(::StringW)>(&VROSC::SessionsDataController::GetSessionContributors)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "GetSessionContributors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::GetSessionsUIData
// Il2CppName: GetSessionsUIData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::VROSC::SessionUIData*>* (VROSC::SessionsDataController::*)()>(&VROSC::SessionsDataController::GetSessionsUIData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "GetSessionsUIData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::GetSessionUIData
// Il2CppName: GetSessionUIData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::SessionUIData* (VROSC::SessionsDataController::*)(::StringW)>(&VROSC::SessionsDataController::GetSessionUIData)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "GetSessionUIData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::SetHasPreview
// Il2CppName: SetHasPreview
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsDataController::*)(::StringW, bool, float, ::VROSC::Session::PreviewSource)>(&VROSC::SessionsDataController::SetHasPreview)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* hasPreview = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* multiplier = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* previewSource = &::il2cpp_utils::GetClassFromName("VROSC", "Session/PreviewSource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "SetHasPreview", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, hasPreview, multiplier, previewSource});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::GetSessionHasPreview
// Il2CppName: GetSessionHasPreview
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SessionsDataController::*)(::StringW)>(&VROSC::SessionsDataController::GetSessionHasPreview)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "GetSessionHasPreview", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::IsSessionPreviewOgg
// Il2CppName: IsSessionPreviewOgg
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SessionsDataController::*)(::StringW)>(&VROSC::SessionsDataController::IsSessionPreviewOgg)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "IsSessionPreviewOgg", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::GetSessionPreviewNormalizeMultiplier
// Il2CppName: GetSessionPreviewNormalizeMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (VROSC::SessionsDataController::*)(::StringW)>(&VROSC::SessionsDataController::GetSessionPreviewNormalizeMultiplier)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "GetSessionPreviewNormalizeMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::GetSession
// Il2CppName: GetSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::Session* (VROSC::SessionsDataController::*)(::StringW)>(&VROSC::SessionsDataController::GetSession)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "GetSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::GenerateNewSessionId
// Il2CppName: GenerateNewSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::SessionsDataController::*)()>(&VROSC::SessionsDataController::GenerateNewSessionId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "GenerateNewSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::UserLoggedOut
// Il2CppName: UserLoggedOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsDataController::*)()>(&VROSC::SessionsDataController::UserLoggedOut)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "UserLoggedOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SessionsDataController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::SessionsDataController::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SessionsDataController::*)()>(&VROSC::SessionsDataController::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SessionsDataController*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
