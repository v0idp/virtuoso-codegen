// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Playables.PlayableBehaviour
#include "UnityEngine/Playables/PlayableBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: TouchableObjectsController
  class TouchableObjectsController;
}
// Forward declaring namespace: UnityEngine::Playables
namespace UnityEngine::Playables {
  // Forward declaring type: Playable
  struct Playable;
  // Forward declaring type: FrameData
  struct FrameData;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: UpdateTouchablesBehaviour
  class UpdateTouchablesBehaviour;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::UpdateTouchablesBehaviour);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::UpdateTouchablesBehaviour*, "VROSC", "UpdateTouchablesBehaviour");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.UpdateTouchablesBehaviour
  // [TokenAttribute] Offset: FFFFFFFF
  class UpdateTouchablesBehaviour : public ::UnityEngine::Playables::PlayableBehaviour {
    public:
    public:
    // private VROSC.TouchableObjectsController _touchables
    // Size: 0x8
    // Offset: 0x10
    ::VROSC::TouchableObjectsController* touchables;
    // Field size check
    static_assert(sizeof(::VROSC::TouchableObjectsController*) == 0x8);
    public:
    // Creating conversion operator: operator ::VROSC::TouchableObjectsController*
    constexpr operator ::VROSC::TouchableObjectsController*() const noexcept {
      return touchables;
    }
    // Get instance field reference: private VROSC.TouchableObjectsController _touchables
    [[deprecated("Use field access instead!")]] ::VROSC::TouchableObjectsController*& dyn__touchables();
    // public System.Void .ctor()
    // Offset: 0x1919CD0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UpdateTouchablesBehaviour* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::UpdateTouchablesBehaviour::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UpdateTouchablesBehaviour*, creationType>()));
    }
    // public System.Void Setup(VROSC.TouchableObjectsController touchables)
    // Offset: 0x1919C9C
    void Setup(::VROSC::TouchableObjectsController* touchables);
    // public override System.Void ProcessFrame(UnityEngine.Playables.Playable playable, UnityEngine.Playables.FrameData info, System.Object playerData)
    // Offset: 0x1919CBC
    // Implemented from: UnityEngine.Playables.PlayableBehaviour
    // Base method: System.Void PlayableBehaviour::ProcessFrame(UnityEngine.Playables.Playable playable, UnityEngine.Playables.FrameData info, System.Object playerData)
    void ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData);
  }; // VROSC.UpdateTouchablesBehaviour
  #pragma pack(pop)
  static check_size<sizeof(UpdateTouchablesBehaviour), 16 + sizeof(::VROSC::TouchableObjectsController*)> __VROSC_UpdateTouchablesBehaviourSizeCheck;
  static_assert(sizeof(UpdateTouchablesBehaviour) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::UpdateTouchablesBehaviour::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::UpdateTouchablesBehaviour::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UpdateTouchablesBehaviour::*)(::VROSC::TouchableObjectsController*)>(&VROSC::UpdateTouchablesBehaviour::Setup)> {
  static const MethodInfo* get() {
    static auto* touchables = &::il2cpp_utils::GetClassFromName("VROSC", "TouchableObjectsController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UpdateTouchablesBehaviour*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{touchables});
  }
};
// Writing MetadataGetter for method: VROSC::UpdateTouchablesBehaviour::ProcessFrame
// Il2CppName: ProcessFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UpdateTouchablesBehaviour::*)(::UnityEngine::Playables::Playable, ::UnityEngine::Playables::FrameData, ::Il2CppObject*)>(&VROSC::UpdateTouchablesBehaviour::ProcessFrame)> {
  static const MethodInfo* get() {
    static auto* playable = &::il2cpp_utils::GetClassFromName("UnityEngine.Playables", "Playable")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("UnityEngine.Playables", "FrameData")->byval_arg;
    static auto* playerData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UpdateTouchablesBehaviour*), "ProcessFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playable, info, playerData});
  }
};
