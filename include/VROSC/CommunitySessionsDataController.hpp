// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.SessionsDataController
#include "VROSC/SessionsDataController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Skipping declaration: Session because it is already included!
  // Forward declaring type: SessionUIData
  class SessionUIData;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: CommunitySessionsDataController
  class CommunitySessionsDataController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::CommunitySessionsDataController);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::CommunitySessionsDataController*, "VROSC", "CommunitySessionsDataController");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x31
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.CommunitySessionsDataController
  // [TokenAttribute] Offset: FFFFFFFF
  class CommunitySessionsDataController : public ::VROSC::SessionsDataController {
    public:
    // Nested type: ::VROSC::CommunitySessionsDataController::$$c__DisplayClass2_0
    class $$c__DisplayClass2_0;
    // Nested type: ::VROSC::CommunitySessionsDataController::$$c
    class $$c;
    // Nested type: ::VROSC::CommunitySessionsDataController::$$c__DisplayClass4_0
    class $$c__DisplayClass4_0;
    // Nested type: ::VROSC::CommunitySessionsDataController::$$c__DisplayClass5_0
    class $$c__DisplayClass5_0;
    // Nested type: ::VROSC::CommunitySessionsDataController::$$c__DisplayClass6_0
    class $$c__DisplayClass6_0;
    // Nested type: ::VROSC::CommunitySessionsDataController::$$c__DisplayClass7_0
    class $$c__DisplayClass7_0;
    // Nested type: ::VROSC::CommunitySessionsDataController::$$c__DisplayClass8_0
    class $$c__DisplayClass8_0;
    // Nested type: ::VROSC::CommunitySessionsDataController::$$c__DisplayClass9_0
    class $$c__DisplayClass9_0;
    // Nested type: ::VROSC::CommunitySessionsDataController::$$c__DisplayClass10_0
    class $$c__DisplayClass10_0;
    // Nested type: ::VROSC::CommunitySessionsDataController::$$c__DisplayClass11_0
    class $$c__DisplayClass11_0;
    public:
    // private System.Boolean _isWaitingForData
    // Size: 0x1
    // Offset: 0x30
    bool isWaitingForData;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::VROSC::Session*
    constexpr operator ::VROSC::Session*() const noexcept = delete;
    // Get instance field reference: private System.Boolean _isWaitingForData
    [[deprecated("Use field access instead!")]] bool& dyn__isWaitingForData();
    // public System.Void SaveSessionToCloud(System.String sessionId, System.Action`1<System.String> onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x949B38
    void SaveSessionToCloud(::StringW sessionId, ::System::Action_1<::StringW>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void AddSessionUpVote(System.String sessionId, System.String userId, System.String userName, System.Action`1<System.String> onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x94A37C
    void AddSessionUpVote(::StringW sessionId, ::StringW userId, ::StringW userName, ::System::Action_1<::StringW>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void RemoveSessionUpVote(System.String sessionId, System.String upVoteId, System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x94A658
    void RemoveSessionUpVote(::StringW sessionId, ::StringW upVoteId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void AddSessionFavorite(System.String sessionId, System.String userId, System.String userName, System.Action`2<System.String,VROSC.Session> onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x94A80C
    void AddSessionFavorite(::StringW sessionId, ::StringW userId, ::StringW userName, ::System::Action_2<::StringW, ::VROSC::Session*>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void RemoveSessionFavorite(System.String sessionId, System.String favoriteId, System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x94AAE8
    void RemoveSessionFavorite(::StringW sessionId, ::StringW favoriteId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void AddSessionDownload(System.String sessionId, System.String userId, System.String userName, System.Action`1<System.String> onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x94AC70
    void AddSessionDownload(::StringW sessionId, ::StringW userId, ::StringW userName, ::System::Action_1<::StringW>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void AddSessionPreviewPlay(System.String sessionId, System.String userId, System.String userName, System.Action`1<System.String> onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x94AF4C
    void AddSessionPreviewPlay(::StringW sessionId, ::StringW userId, ::StringW userName, ::System::Action_1<::StringW>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void AddFavoriteSession(VROSC.Session session)
    // Offset: 0x94B228
    void AddFavoriteSession(::VROSC::Session* session);
    // public System.Void RemoveFavoriteSession(System.String sessionId)
    // Offset: 0x94B350
    void RemoveFavoriteSession(::StringW sessionId);
    // public System.Void .ctor()
    // Offset: 0x949860
    // Implemented from: VROSC.SessionsDataController
    // Base method: System.Void SessionsDataController::.ctor()
    // Base method: System.Void BaseDataController::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CommunitySessionsDataController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CommunitySessionsDataController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CommunitySessionsDataController*, creationType>()));
    }
    // public override System.Void LoadCloudData(System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x94993C
    // Implemented from: VROSC.BaseDataController
    // Base method: System.Void BaseDataController::LoadCloudData(System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    void LoadCloudData(::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public override System.Void SaveCloudData(System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x949B34
    // Implemented from: VROSC.BaseDataController
    // Base method: System.Void BaseDataController::SaveCloudData(System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    void SaveCloudData(::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public override System.Void RemoveSession(System.String sessionId, System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x94A218
    // Implemented from: VROSC.SessionsDataController
    // Base method: System.Void SessionsDataController::RemoveSession(System.String sessionId, System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    void RemoveSession(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public override System.Collections.Generic.List`1<VROSC.SessionUIData> GetSessionsUIData()
    // Offset: 0x94B354
    // Implemented from: VROSC.SessionsDataController
    // Base method: System.Collections.Generic.List`1<VROSC.SessionUIData> SessionsDataController::GetSessionsUIData()
    ::System::Collections::Generic::List_1<::VROSC::SessionUIData*>* GetSessionsUIData();
    // public override VROSC.SessionUIData GetSessionUIData(System.String sessionId)
    // Offset: 0x94B5E4
    // Implemented from: VROSC.SessionsDataController
    // Base method: VROSC.SessionUIData SessionsDataController::GetSessionUIData(System.String sessionId)
    ::VROSC::SessionUIData* GetSessionUIData(::StringW sessionId);
    // protected override System.String GenerateNewSessionId()
    // Offset: 0x94B788
    // Implemented from: VROSC.SessionsDataController
    // Base method: System.String SessionsDataController::GenerateNewSessionId()
    ::StringW GenerateNewSessionId();
    // protected override System.Void UserLoggedOut()
    // Offset: 0x94B7E0
    // Implemented from: VROSC.SessionsDataController
    // Base method: System.Void SessionsDataController::UserLoggedOut()
    void UserLoggedOut();
    // protected override VROSC.Session GetSession(System.String sessionId)
    // Offset: 0x94B838
    // Implemented from: VROSC.SessionsDataController
    // Base method: VROSC.Session SessionsDataController::GetSession(System.String sessionId)
    ::VROSC::Session* GetSession(::StringW sessionId);
  }; // VROSC.CommunitySessionsDataController
  #pragma pack(pop)
  static check_size<sizeof(CommunitySessionsDataController), 48 + sizeof(bool)> __VROSC_CommunitySessionsDataControllerSizeCheck;
  static_assert(sizeof(CommunitySessionsDataController) == 0x31);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::SaveSessionToCloud
// Il2CppName: SaveSessionToCloud
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CommunitySessionsDataController::*)(::StringW, ::System::Action_1<::StringW>*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::CommunitySessionsDataController::SaveSessionToCloud)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataController*), "SaveSessionToCloud", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::AddSessionUpVote
// Il2CppName: AddSessionUpVote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CommunitySessionsDataController::*)(::StringW, ::StringW, ::StringW, ::System::Action_1<::StringW>*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::CommunitySessionsDataController::AddSessionUpVote)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataController*), "AddSessionUpVote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, userId, userName, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::RemoveSessionUpVote
// Il2CppName: RemoveSessionUpVote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CommunitySessionsDataController::*)(::StringW, ::StringW, ::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::CommunitySessionsDataController::RemoveSessionUpVote)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* upVoteId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataController*), "RemoveSessionUpVote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, upVoteId, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::AddSessionFavorite
// Il2CppName: AddSessionFavorite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CommunitySessionsDataController::*)(::StringW, ::StringW, ::StringW, ::System::Action_2<::StringW, ::VROSC::Session*>*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::CommunitySessionsDataController::AddSessionFavorite)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("VROSC", "Session")})->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataController*), "AddSessionFavorite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, userId, userName, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::RemoveSessionFavorite
// Il2CppName: RemoveSessionFavorite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CommunitySessionsDataController::*)(::StringW, ::StringW, ::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::CommunitySessionsDataController::RemoveSessionFavorite)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* favoriteId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataController*), "RemoveSessionFavorite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, favoriteId, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::AddSessionDownload
// Il2CppName: AddSessionDownload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CommunitySessionsDataController::*)(::StringW, ::StringW, ::StringW, ::System::Action_1<::StringW>*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::CommunitySessionsDataController::AddSessionDownload)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataController*), "AddSessionDownload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, userId, userName, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::AddSessionPreviewPlay
// Il2CppName: AddSessionPreviewPlay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CommunitySessionsDataController::*)(::StringW, ::StringW, ::StringW, ::System::Action_1<::StringW>*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::CommunitySessionsDataController::AddSessionPreviewPlay)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataController*), "AddSessionPreviewPlay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, userId, userName, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::AddFavoriteSession
// Il2CppName: AddFavoriteSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CommunitySessionsDataController::*)(::VROSC::Session*)>(&VROSC::CommunitySessionsDataController::AddFavoriteSession)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("VROSC", "Session")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataController*), "AddFavoriteSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::RemoveFavoriteSession
// Il2CppName: RemoveFavoriteSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CommunitySessionsDataController::*)(::StringW)>(&VROSC::CommunitySessionsDataController::RemoveFavoriteSession)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataController*), "RemoveFavoriteSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::LoadCloudData
// Il2CppName: LoadCloudData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CommunitySessionsDataController::*)(::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::CommunitySessionsDataController::LoadCloudData)> {
  static const MethodInfo* get() {
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataController*), "LoadCloudData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::SaveCloudData
// Il2CppName: SaveCloudData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CommunitySessionsDataController::*)(::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::CommunitySessionsDataController::SaveCloudData)> {
  static const MethodInfo* get() {
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataController*), "SaveCloudData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::RemoveSession
// Il2CppName: RemoveSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CommunitySessionsDataController::*)(::StringW, ::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::CommunitySessionsDataController::RemoveSession)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataController*), "RemoveSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::GetSessionsUIData
// Il2CppName: GetSessionsUIData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::VROSC::SessionUIData*>* (VROSC::CommunitySessionsDataController::*)()>(&VROSC::CommunitySessionsDataController::GetSessionsUIData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataController*), "GetSessionsUIData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::GetSessionUIData
// Il2CppName: GetSessionUIData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::SessionUIData* (VROSC::CommunitySessionsDataController::*)(::StringW)>(&VROSC::CommunitySessionsDataController::GetSessionUIData)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataController*), "GetSessionUIData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::GenerateNewSessionId
// Il2CppName: GenerateNewSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::CommunitySessionsDataController::*)()>(&VROSC::CommunitySessionsDataController::GenerateNewSessionId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataController*), "GenerateNewSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::UserLoggedOut
// Il2CppName: UserLoggedOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CommunitySessionsDataController::*)()>(&VROSC::CommunitySessionsDataController::UserLoggedOut)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataController*), "UserLoggedOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataController::GetSession
// Il2CppName: GetSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::Session* (VROSC::CommunitySessionsDataController::*)(::StringW)>(&VROSC::CommunitySessionsDataController::GetSession)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataController*), "GetSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
