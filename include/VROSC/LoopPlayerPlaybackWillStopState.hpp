// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.LoopPlayerPlaybackFadeState
#include "VROSC/LoopPlayerPlaybackFadeState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: LoopPlayerPlaybackSettings
  class LoopPlayerPlaybackSettings;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: LoopPlayerPlaybackWillStopState
  class LoopPlayerPlaybackWillStopState;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::LoopPlayerPlaybackWillStopState);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::LoopPlayerPlaybackWillStopState*, "VROSC", "LoopPlayerPlaybackWillStopState");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.LoopPlayerPlaybackWillStopState
  // [TokenAttribute] Offset: FFFFFFFF
  class LoopPlayerPlaybackWillStopState : public ::VROSC::LoopPlayerPlaybackFadeState {
    public:
    // public System.Void SetBySettings(VROSC.LoopPlayerPlaybackSettings settings, System.Int32 loopStopSample, System.Boolean fromStopRequest)
    // Offset: 0x19BD62C
    void SetBySettings(::VROSC::LoopPlayerPlaybackSettings* settings, int loopStopSample, bool fromStopRequest);
    // protected System.Int32 GetStoppingPoint(VROSC.LoopPlayerPlaybackSettings settings, System.Int32 sample)
    // Offset: 0x19BE4B4
    int GetStoppingPoint(::VROSC::LoopPlayerPlaybackSettings* settings, int sample);
    // public override System.Boolean get_Playing()
    // Offset: 0x19BE3B0
    // Implemented from: VROSC.LoopPlayerPlaybackState
    // Base method: System.Boolean LoopPlayerPlaybackState::get_Playing()
    bool get_Playing();
    // public System.Void .ctor()
    // Offset: 0x19BD5BC
    // Implemented from: VROSC.LoopPlayerPlaybackFadeState
    // Base method: System.Void LoopPlayerPlaybackFadeState::.ctor()
    // Base method: System.Void LoopPlayerPlaybackState::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoopPlayerPlaybackWillStopState* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopPlayerPlaybackWillStopState::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoopPlayerPlaybackWillStopState*, creationType>()));
    }
    // public override System.String DebugString()
    // Offset: 0x19BE3C0
    // Implemented from: VROSC.LoopPlayerPlaybackState
    // Base method: System.String LoopPlayerPlaybackState::DebugString()
    ::StringW DebugString();
    // public override System.Void SetExplicit(System.Int32 startSample, System.Int32 stopSample)
    // Offset: 0x19BE49C
    // Implemented from: VROSC.LoopPlayerPlaybackState
    // Base method: System.Void LoopPlayerPlaybackState::SetExplicit(System.Int32 startSample, System.Int32 stopSample)
    void SetExplicit(int startSample, int stopSample);
    // public override System.Void SetStateActive(VROSC.LoopPlayerPlaybackSettings settings, System.Int32 atSample)
    // Offset: 0x19BE544
    // Implemented from: VROSC.LoopPlayerPlaybackState
    // Base method: System.Void LoopPlayerPlaybackState::SetStateActive(VROSC.LoopPlayerPlaybackSettings settings, System.Int32 atSample)
    void SetStateActive(::VROSC::LoopPlayerPlaybackSettings* settings, int atSample);
  }; // VROSC.LoopPlayerPlaybackWillStopState
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::LoopPlayerPlaybackWillStopState::SetBySettings
// Il2CppName: SetBySettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlayerPlaybackWillStopState::*)(::VROSC::LoopPlayerPlaybackSettings*, int, bool)>(&VROSC::LoopPlayerPlaybackWillStopState::SetBySettings)> {
  static const MethodInfo* get() {
    static auto* settings = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlayerPlaybackSettings")->byval_arg;
    static auto* loopStopSample = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* fromStopRequest = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlayerPlaybackWillStopState*), "SetBySettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{settings, loopStopSample, fromStopRequest});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlayerPlaybackWillStopState::GetStoppingPoint
// Il2CppName: GetStoppingPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::LoopPlayerPlaybackWillStopState::*)(::VROSC::LoopPlayerPlaybackSettings*, int)>(&VROSC::LoopPlayerPlaybackWillStopState::GetStoppingPoint)> {
  static const MethodInfo* get() {
    static auto* settings = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlayerPlaybackSettings")->byval_arg;
    static auto* sample = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlayerPlaybackWillStopState*), "GetStoppingPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{settings, sample});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlayerPlaybackWillStopState::get_Playing
// Il2CppName: get_Playing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::LoopPlayerPlaybackWillStopState::*)()>(&VROSC::LoopPlayerPlaybackWillStopState::get_Playing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlayerPlaybackWillStopState*), "get_Playing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlayerPlaybackWillStopState::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::LoopPlayerPlaybackWillStopState::DebugString
// Il2CppName: DebugString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::LoopPlayerPlaybackWillStopState::*)()>(&VROSC::LoopPlayerPlaybackWillStopState::DebugString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlayerPlaybackWillStopState*), "DebugString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlayerPlaybackWillStopState::SetExplicit
// Il2CppName: SetExplicit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlayerPlaybackWillStopState::*)(int, int)>(&VROSC::LoopPlayerPlaybackWillStopState::SetExplicit)> {
  static const MethodInfo* get() {
    static auto* startSample = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* stopSample = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlayerPlaybackWillStopState*), "SetExplicit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startSample, stopSample});
  }
};
// Writing MetadataGetter for method: VROSC::LoopPlayerPlaybackWillStopState::SetStateActive
// Il2CppName: SetStateActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopPlayerPlaybackWillStopState::*)(::VROSC::LoopPlayerPlaybackSettings*, int)>(&VROSC::LoopPlayerPlaybackWillStopState::SetStateActive)> {
  static const MethodInfo* get() {
    static auto* settings = &::il2cpp_utils::GetClassFromName("VROSC", "LoopPlayerPlaybackSettings")->byval_arg;
    static auto* atSample = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopPlayerPlaybackWillStopState*), "SetStateActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{settings, atSample});
  }
};
