// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: VROSC.Scale
#include "VROSC/Scale.hpp"
// Including type: VROSC.Note
#include "VROSC/Note.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: NoteNode
  class NoteNode;
  // Forward declaring type: ScaleNode
  class ScaleNode;
  // Forward declaring type: UIButton
  class UIButton;
  // Forward declaring type: ScaleNoteButtonUI
  class ScaleNoteButtonUI;
  // Forward declaring type: SynthController
  class SynthController;
  // Forward declaring type: ScalePreset
  class ScalePreset;
  // Forward declaring type: UserDataControllers
  class UserDataControllers;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: ScaleRowUI
  class ScaleRowUI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::ScaleRowUI);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::ScaleRowUI*, "VROSC", "ScaleRowUI");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x78
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.ScaleRowUI
  // [TokenAttribute] Offset: FFFFFFFF
  class ScaleRowUI : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::VROSC::ScaleRowUI::$OnEnableCoroutine$d__23
    class $OnEnableCoroutine$d__23;
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private VROSC.NoteNode _startNoteNode
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::NoteNode* startNoteNode;
    // Field size check
    static_assert(sizeof(::VROSC::NoteNode*) == 0x8);
    // private VROSC.ScaleNode _scaleNode
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::ScaleNode* scaleNode;
    // Field size check
    static_assert(sizeof(::VROSC::ScaleNode*) == 0x8);
    // private VROSC.UIButton _resetButton
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::UIButton* resetButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIButton*) == 0x8);
    // private VROSC.ScaleNoteButtonUI[] _notebuttons
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<::VROSC::ScaleNoteButtonUI*> notebuttons;
    // Field size check
    static_assert(sizeof(::ArrayW<::VROSC::ScaleNoteButtonUI*>) == 0x8);
    // private VROSC.SynthController _instrumentController
    // Size: 0x8
    // Offset: 0x38
    ::VROSC::SynthController* instrumentController;
    // Field size check
    static_assert(sizeof(::VROSC::SynthController*) == 0x8);
    // private System.Int32 _scaleRowIndex
    // Size: 0x4
    // Offset: 0x40
    int scaleRowIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private VROSC.Scale _initScale
    // Size: 0x4
    // Offset: 0x44
    ::VROSC::Scale initScale;
    // Field size check
    static_assert(sizeof(::VROSC::Scale) == 0x4);
    // private VROSC.ScalePreset _initGlobalScalePreset
    // Size: 0x8
    // Offset: 0x48
    ::VROSC::ScalePreset* initGlobalScalePreset;
    // Field size check
    static_assert(sizeof(::VROSC::ScalePreset*) == 0x8);
    // private VROSC.Note _initStartNote
    // Size: 0x4
    // Offset: 0x50
    ::VROSC::Note initStartNote;
    // Field size check
    static_assert(sizeof(::VROSC::Note) == 0x4);
    // private VROSC.Note _initGlobalKey
    // Size: 0x4
    // Offset: 0x54
    ::VROSC::Note initGlobalKey;
    // Field size check
    static_assert(sizeof(::VROSC::Note) == 0x4);
    // private System.Int32 _initNoteCount
    // Size: 0x4
    // Offset: 0x58
    int initNoteCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: initNoteCount and: lastGlobalScalePreset
    char __padding10[0x4] = {};
    // private VROSC.ScalePreset _lastGlobalScalePreset
    // Size: 0x8
    // Offset: 0x60
    ::VROSC::ScalePreset* lastGlobalScalePreset;
    // Field size check
    static_assert(sizeof(::VROSC::ScalePreset*) == 0x8);
    // private VROSC.Note _lastGlobalKey
    // Size: 0x4
    // Offset: 0x68
    ::VROSC::Note lastGlobalKey;
    // Field size check
    static_assert(sizeof(::VROSC::Note) == 0x4);
    // private System.Boolean _overrideScaleDefaults
    // Size: 0x1
    // Offset: 0x6C
    bool overrideScaleDefaults;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _locked
    // Size: 0x1
    // Offset: 0x6D
    bool locked;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean _customized
    // Size: 0x1
    // Offset: 0x6E
    bool customized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: customized and: OnNotesUpdated
    char __padding15[0x1] = {};
    // public System.Action`2<System.Int32,VROSC.Scale> OnNotesUpdated
    // Size: 0x8
    // Offset: 0x70
    ::System::Action_2<int, ::VROSC::Scale>* OnNotesUpdated;
    // Field size check
    static_assert(sizeof(::System::Action_2<int, ::VROSC::Scale>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.NoteNode _startNoteNode
    ::VROSC::NoteNode*& dyn__startNoteNode();
    // Get instance field reference: private VROSC.ScaleNode _scaleNode
    ::VROSC::ScaleNode*& dyn__scaleNode();
    // Get instance field reference: private VROSC.UIButton _resetButton
    ::VROSC::UIButton*& dyn__resetButton();
    // Get instance field reference: private VROSC.ScaleNoteButtonUI[] _notebuttons
    ::ArrayW<::VROSC::ScaleNoteButtonUI*>& dyn__notebuttons();
    // Get instance field reference: private VROSC.SynthController _instrumentController
    ::VROSC::SynthController*& dyn__instrumentController();
    // Get instance field reference: private System.Int32 _scaleRowIndex
    int& dyn__scaleRowIndex();
    // Get instance field reference: private VROSC.Scale _initScale
    ::VROSC::Scale& dyn__initScale();
    // Get instance field reference: private VROSC.ScalePreset _initGlobalScalePreset
    ::VROSC::ScalePreset*& dyn__initGlobalScalePreset();
    // Get instance field reference: private VROSC.Note _initStartNote
    ::VROSC::Note& dyn__initStartNote();
    // Get instance field reference: private VROSC.Note _initGlobalKey
    ::VROSC::Note& dyn__initGlobalKey();
    // Get instance field reference: private System.Int32 _initNoteCount
    int& dyn__initNoteCount();
    // Get instance field reference: private VROSC.ScalePreset _lastGlobalScalePreset
    ::VROSC::ScalePreset*& dyn__lastGlobalScalePreset();
    // Get instance field reference: private VROSC.Note _lastGlobalKey
    ::VROSC::Note& dyn__lastGlobalKey();
    // Get instance field reference: private System.Boolean _overrideScaleDefaults
    bool& dyn__overrideScaleDefaults();
    // Get instance field reference: private System.Boolean _locked
    bool& dyn__locked();
    // Get instance field reference: public System.Boolean _customized
    bool& dyn__customized();
    // Get instance field reference: public System.Action`2<System.Int32,VROSC.Scale> OnNotesUpdated
    ::System::Action_2<int, ::VROSC::Scale>*& dyn_OnNotesUpdated();
    // public System.Void Setup(VROSC.ScalePreset globalScale, VROSC.Note globalKey, VROSC.Scale scale, System.Int32 startNoteOffset, System.Boolean overrideScaleDefaults, VROSC.SynthController instrumentController, System.Int32 scaleRowIndex)
    // Offset: 0x13DEF98
    void Setup(::VROSC::ScalePreset* globalScale, ::VROSC::Note globalKey, ::VROSC::Scale scale, int startNoteOffset, bool overrideScaleDefaults, ::VROSC::SynthController* instrumentController, int scaleRowIndex);
    // private System.Void UserDataLoaded(VROSC.UserDataControllers user)
    // Offset: 0x13E00BC
    void UserDataLoaded(::VROSC::UserDataControllers* user);
    // public System.Void GlobalScaleChanged(VROSC.ScalePreset globalScalePreset, VROSC.Note globalKey)
    // Offset: 0x13DF694
    void GlobalScaleChanged(::VROSC::ScalePreset* globalScalePreset, ::VROSC::Note globalKey);
    // private System.Void ResetToCurrentScaleButtonPressed()
    // Offset: 0x13E025C
    void ResetToCurrentScaleButtonPressed();
    // private System.Void SetLocked(System.Boolean locked)
    // Offset: 0x13E02E4
    void SetLocked(bool locked);
    // private System.Void OnEnable()
    // Offset: 0x13E032C
    void OnEnable();
    // private System.Collections.IEnumerator OnEnableCoroutine()
    // Offset: 0x13E03BC
    ::System::Collections::IEnumerator* OnEnableCoroutine();
    // private System.Void UpdateButtons()
    // Offset: 0x13DFFDC
    void UpdateButtons();
    // private System.Void StartNoteAssigned(VROSC.Note note)
    // Offset: 0x13E0428
    void StartNoteAssigned(::VROSC::Note note);
    // private System.Void SetScaleNoteActive(VROSC.Note note, System.Boolean active)
    // Offset: 0x13E0544
    void SetScaleNoteActive(::VROSC::Note note, bool active);
    // private System.Void OnDestroy()
    // Offset: 0x13E05F0
    void OnDestroy();
    // private System.Void GetAllScaleNoteButtonsInChildren()
    // Offset: 0x13E07BC
    void GetAllScaleNoteButtonsInChildren();
    // private System.Void CustomizedChanged(System.Boolean saveData)
    // Offset: 0x13DFF4C
    void CustomizedChanged(bool saveData);
    // public System.Void .ctor()
    // Offset: 0x13E0810
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ScaleRowUI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleRowUI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ScaleRowUI*, creationType>()));
    }
  }; // VROSC.ScaleRowUI
  #pragma pack(pop)
  static check_size<sizeof(ScaleRowUI), 112 + sizeof(::System::Action_2<int, ::VROSC::Scale>*)> __VROSC_ScaleRowUISizeCheck;
  static_assert(sizeof(ScaleRowUI) == 0x78);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::ScaleRowUI::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScaleRowUI::*)(::VROSC::ScalePreset*, ::VROSC::Note, ::VROSC::Scale, int, bool, ::VROSC::SynthController*, int)>(&VROSC::ScaleRowUI::Setup)> {
  static const MethodInfo* get() {
    static auto* globalScale = &::il2cpp_utils::GetClassFromName("VROSC", "ScalePreset")->byval_arg;
    static auto* globalKey = &::il2cpp_utils::GetClassFromName("VROSC", "Note")->byval_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("VROSC", "Scale")->byval_arg;
    static auto* startNoteOffset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* overrideScaleDefaults = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* instrumentController = &::il2cpp_utils::GetClassFromName("VROSC", "SynthController")->byval_arg;
    static auto* scaleRowIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScaleRowUI*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{globalScale, globalKey, scale, startNoteOffset, overrideScaleDefaults, instrumentController, scaleRowIndex});
  }
};
// Writing MetadataGetter for method: VROSC::ScaleRowUI::UserDataLoaded
// Il2CppName: UserDataLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScaleRowUI::*)(::VROSC::UserDataControllers*)>(&VROSC::ScaleRowUI::UserDataLoaded)> {
  static const MethodInfo* get() {
    static auto* user = &::il2cpp_utils::GetClassFromName("VROSC", "UserDataControllers")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScaleRowUI*), "UserDataLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{user});
  }
};
// Writing MetadataGetter for method: VROSC::ScaleRowUI::GlobalScaleChanged
// Il2CppName: GlobalScaleChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScaleRowUI::*)(::VROSC::ScalePreset*, ::VROSC::Note)>(&VROSC::ScaleRowUI::GlobalScaleChanged)> {
  static const MethodInfo* get() {
    static auto* globalScalePreset = &::il2cpp_utils::GetClassFromName("VROSC", "ScalePreset")->byval_arg;
    static auto* globalKey = &::il2cpp_utils::GetClassFromName("VROSC", "Note")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScaleRowUI*), "GlobalScaleChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{globalScalePreset, globalKey});
  }
};
// Writing MetadataGetter for method: VROSC::ScaleRowUI::ResetToCurrentScaleButtonPressed
// Il2CppName: ResetToCurrentScaleButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScaleRowUI::*)()>(&VROSC::ScaleRowUI::ResetToCurrentScaleButtonPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScaleRowUI*), "ResetToCurrentScaleButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::ScaleRowUI::SetLocked
// Il2CppName: SetLocked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScaleRowUI::*)(bool)>(&VROSC::ScaleRowUI::SetLocked)> {
  static const MethodInfo* get() {
    static auto* locked = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScaleRowUI*), "SetLocked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{locked});
  }
};
// Writing MetadataGetter for method: VROSC::ScaleRowUI::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScaleRowUI::*)()>(&VROSC::ScaleRowUI::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScaleRowUI*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::ScaleRowUI::OnEnableCoroutine
// Il2CppName: OnEnableCoroutine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (VROSC::ScaleRowUI::*)()>(&VROSC::ScaleRowUI::OnEnableCoroutine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScaleRowUI*), "OnEnableCoroutine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::ScaleRowUI::UpdateButtons
// Il2CppName: UpdateButtons
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScaleRowUI::*)()>(&VROSC::ScaleRowUI::UpdateButtons)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScaleRowUI*), "UpdateButtons", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::ScaleRowUI::StartNoteAssigned
// Il2CppName: StartNoteAssigned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScaleRowUI::*)(::VROSC::Note)>(&VROSC::ScaleRowUI::StartNoteAssigned)> {
  static const MethodInfo* get() {
    static auto* note = &::il2cpp_utils::GetClassFromName("VROSC", "Note")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScaleRowUI*), "StartNoteAssigned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{note});
  }
};
// Writing MetadataGetter for method: VROSC::ScaleRowUI::SetScaleNoteActive
// Il2CppName: SetScaleNoteActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScaleRowUI::*)(::VROSC::Note, bool)>(&VROSC::ScaleRowUI::SetScaleNoteActive)> {
  static const MethodInfo* get() {
    static auto* note = &::il2cpp_utils::GetClassFromName("VROSC", "Note")->byval_arg;
    static auto* active = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScaleRowUI*), "SetScaleNoteActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{note, active});
  }
};
// Writing MetadataGetter for method: VROSC::ScaleRowUI::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScaleRowUI::*)()>(&VROSC::ScaleRowUI::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScaleRowUI*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::ScaleRowUI::GetAllScaleNoteButtonsInChildren
// Il2CppName: GetAllScaleNoteButtonsInChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScaleRowUI::*)()>(&VROSC::ScaleRowUI::GetAllScaleNoteButtonsInChildren)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScaleRowUI*), "GetAllScaleNoteButtonsInChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::ScaleRowUI::CustomizedChanged
// Il2CppName: CustomizedChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ScaleRowUI::*)(bool)>(&VROSC::ScaleRowUI::CustomizedChanged)> {
  static const MethodInfo* get() {
    static auto* saveData = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScaleRowUI*), "CustomizedChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{saveData});
  }
};
// Writing MetadataGetter for method: VROSC::ScaleRowUI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
