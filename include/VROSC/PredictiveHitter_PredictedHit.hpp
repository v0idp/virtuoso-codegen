// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.PredictiveHitter
#include "VROSC/PredictiveHitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: PredictiveHittable
  class PredictiveHittable;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::PredictiveHitter::PredictedHit);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::PredictiveHitter::PredictedHit*, "VROSC", "PredictiveHitter/PredictedHit");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.PredictiveHitter/VROSC.PredictedHit
  // [TokenAttribute] Offset: FFFFFFFF
  class PredictiveHitter::PredictedHit : public ::Il2CppObject {
    public:
    public:
    // public VROSC.PredictiveHittable PredictiveHittable
    // Size: 0x8
    // Offset: 0x10
    ::VROSC::PredictiveHittable* PredictiveHittable;
    // Field size check
    static_assert(sizeof(::VROSC::PredictiveHittable*) == 0x8);
    // public System.Double PredictedDSPTime
    // Size: 0x8
    // Offset: 0x18
    double PredictedDSPTime;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    public:
    // Get instance field reference: public VROSC.PredictiveHittable PredictiveHittable
    [[deprecated]] ::VROSC::PredictiveHittable*& dyn_PredictiveHittable();
    // Get instance field reference: public System.Double PredictedDSPTime
    [[deprecated]] double& dyn_PredictedDSPTime();
    // public System.Void .ctor(VROSC.PredictiveHittable predictiveHittable, System.Double predictedDspTime)
    // Offset: 0x8CE294
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PredictiveHitter::PredictedHit* New_ctor(::VROSC::PredictiveHittable* predictiveHittable, double predictedDspTime) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PredictiveHitter::PredictedHit::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PredictiveHitter::PredictedHit*, creationType>(predictiveHittable, predictedDspTime)));
    }
  }; // VROSC.PredictiveHitter/VROSC.PredictedHit
  #pragma pack(pop)
  static check_size<sizeof(PredictiveHitter::PredictedHit), 24 + sizeof(double)> __VROSC_PredictiveHitter_PredictedHitSizeCheck;
  static_assert(sizeof(PredictiveHitter::PredictedHit) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::PredictiveHitter::PredictedHit::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
