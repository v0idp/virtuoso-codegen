// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: MinMaxFloat
  class MinMaxFloat;
  // Forward declaring type: BoardFrameNote
  class BoardFrameNote;
  // Forward declaring type: NoteFieldMonitor
  class NoteFieldMonitor;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Vector2
  struct Vector2;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: BoardFrameVisuals
  class BoardFrameVisuals;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::BoardFrameVisuals);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::BoardFrameVisuals*, "VROSC", "BoardFrameVisuals");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.BoardFrameVisuals
  // [TokenAttribute] Offset: FFFFFFFF
  class BoardFrameVisuals : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private VROSC.MinMaxFloat _height
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::MinMaxFloat* height;
    // Field size check
    static_assert(sizeof(::VROSC::MinMaxFloat*) == 0x8);
    // private System.Int32 _maxOctave
    // Size: 0x4
    // Offset: 0x20
    int maxOctave;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single _width
    // Size: 0x4
    // Offset: 0x24
    float width;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private VROSC.BoardFrameNote _notePrefab
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::BoardFrameNote* notePrefab;
    // Field size check
    static_assert(sizeof(::VROSC::BoardFrameNote*) == 0x8);
    // private UnityEngine.GameObject _stringPrefab
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* stringPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private VROSC.NoteFieldMonitor _monitor
    // Size: 0x8
    // Offset: 0x38
    ::VROSC::NoteFieldMonitor* monitor;
    // Field size check
    static_assert(sizeof(::VROSC::NoteFieldMonitor*) == 0x8);
    // private VROSC.BoardFrameNote[] _notes
    // Size: 0x8
    // Offset: 0x40
    ::ArrayW<::VROSC::BoardFrameNote*> notes;
    // Field size check
    static_assert(sizeof(::ArrayW<::VROSC::BoardFrameNote*>) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.MinMaxFloat _height
    [[deprecated]] ::VROSC::MinMaxFloat*& dyn__height();
    // Get instance field reference: private System.Int32 _maxOctave
    [[deprecated]] int& dyn__maxOctave();
    // Get instance field reference: private System.Single _width
    [[deprecated]] float& dyn__width();
    // Get instance field reference: private VROSC.BoardFrameNote _notePrefab
    [[deprecated]] ::VROSC::BoardFrameNote*& dyn__notePrefab();
    // Get instance field reference: private UnityEngine.GameObject _stringPrefab
    [[deprecated]] ::UnityEngine::GameObject*& dyn__stringPrefab();
    // Get instance field reference: private VROSC.NoteFieldMonitor _monitor
    [[deprecated]] ::VROSC::NoteFieldMonitor*& dyn__monitor();
    // Get instance field reference: private VROSC.BoardFrameNote[] _notes
    [[deprecated]] ::ArrayW<::VROSC::BoardFrameNote*>& dyn__notes();
    // private System.Void Start()
    // Offset: 0x937E4C
    void Start();
    // private System.Void CreateStrings()
    // Offset: 0x938024
    void CreateStrings();
    // private System.Void Update()
    // Offset: 0x938134
    void Update();
    // private UnityEngine.Vector2 GetPositionByNote(System.Int32 note)
    // Offset: 0x938320
    ::UnityEngine::Vector2 GetPositionByNote(int note);
    // private System.Void OnDrawGizmosSelected()
    // Offset: 0x93842C
    void OnDrawGizmosSelected();
    // public System.Void .ctor()
    // Offset: 0x938610
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BoardFrameVisuals* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BoardFrameVisuals::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BoardFrameVisuals*, creationType>()));
    }
  }; // VROSC.BoardFrameVisuals
  #pragma pack(pop)
  static check_size<sizeof(BoardFrameVisuals), 64 + sizeof(::ArrayW<::VROSC::BoardFrameNote*>)> __VROSC_BoardFrameVisualsSizeCheck;
  static_assert(sizeof(BoardFrameVisuals) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::BoardFrameVisuals::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::BoardFrameVisuals::*)()>(&VROSC::BoardFrameVisuals::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::BoardFrameVisuals*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::BoardFrameVisuals::CreateStrings
// Il2CppName: CreateStrings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::BoardFrameVisuals::*)()>(&VROSC::BoardFrameVisuals::CreateStrings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::BoardFrameVisuals*), "CreateStrings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::BoardFrameVisuals::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::BoardFrameVisuals::*)()>(&VROSC::BoardFrameVisuals::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::BoardFrameVisuals*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::BoardFrameVisuals::GetPositionByNote
// Il2CppName: GetPositionByNote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (VROSC::BoardFrameVisuals::*)(int)>(&VROSC::BoardFrameVisuals::GetPositionByNote)> {
  static const MethodInfo* get() {
    static auto* note = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::BoardFrameVisuals*), "GetPositionByNote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{note});
  }
};
// Writing MetadataGetter for method: VROSC::BoardFrameVisuals::OnDrawGizmosSelected
// Il2CppName: OnDrawGizmosSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::BoardFrameVisuals::*)()>(&VROSC::BoardFrameVisuals::OnDrawGizmosSelected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::BoardFrameVisuals*), "OnDrawGizmosSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::BoardFrameVisuals::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
