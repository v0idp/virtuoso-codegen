// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.MethodRunner
#include "VROSC/MethodRunner.hpp"
// Including type: UnityEngine.Events.UnityEvent`1
#include "UnityEngine/Events/UnityEvent_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: Signal
  class Signal;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::MethodRunner::RunMethodEvent);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::MethodRunner::RunMethodEvent*, "VROSC", "MethodRunner/RunMethodEvent");
// Type namespace: VROSC
namespace VROSC {
  // WARNING Size may be invalid!
  // Autogenerated type: VROSC.MethodRunner/VROSC.RunMethodEvent
  // [TokenAttribute] Offset: FFFFFFFF
  class MethodRunner::RunMethodEvent : public ::UnityEngine::Events::UnityEvent_1<::VROSC::Signal*> {
    public:
    // public System.Void .ctor()
    // Offset: 0x1962108
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MethodRunner::RunMethodEvent* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MethodRunner::RunMethodEvent::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MethodRunner::RunMethodEvent*, creationType>()));
    }
  }; // VROSC.MethodRunner/VROSC.RunMethodEvent
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::MethodRunner::RunMethodEvent::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
