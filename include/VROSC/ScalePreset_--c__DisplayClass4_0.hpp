// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.ScalePreset
#include "VROSC/ScalePreset.hpp"
// Including type: VROSC.Note
#include "VROSC/Note.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::ScalePreset::$$c__DisplayClass4_0);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::ScalePreset::$$c__DisplayClass4_0*, "VROSC", "ScalePreset/<>c__DisplayClass4_0");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.ScalePreset/VROSC.<>c__DisplayClass4_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class ScalePreset::$$c__DisplayClass4_0 : public ::Il2CppObject {
    public:
    public:
    // public VROSC.Note note
    // Size: 0x4
    // Offset: 0x10
    ::VROSC::Note note;
    // Field size check
    static_assert(sizeof(::VROSC::Note) == 0x4);
    public:
    // Creating conversion operator: operator ::VROSC::Note
    constexpr operator ::VROSC::Note() const noexcept {
      return note;
    }
    // Get instance field reference: public VROSC.Note note
    [[deprecated]] ::VROSC::Note& dyn_note();
    // System.Boolean <UpdateNotePriorityList>b__1(VROSC.ScalePreset/VROSC.NotePriority n)
    // Offset: 0x8D4370
    bool $UpdateNotePriorityList$b__1(::VROSC::ScalePreset::NotePriority* n);
    // System.Boolean <UpdateNotePriorityList>b__2(VROSC.ScalePreset/VROSC.NotePriority n)
    // Offset: 0x8D4394
    bool $UpdateNotePriorityList$b__2(::VROSC::ScalePreset::NotePriority* n);
    // System.Boolean <UpdateNotePriorityList>b__0(VROSC.ScalePreset/VROSC.NotePriority n)
    // Offset: 0x8D43B8
    bool $UpdateNotePriorityList$b__0(::VROSC::ScalePreset::NotePriority* n);
    // public System.Void .ctor()
    // Offset: 0x8D4368
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ScalePreset::$$c__DisplayClass4_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScalePreset::$$c__DisplayClass4_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ScalePreset::$$c__DisplayClass4_0*, creationType>()));
    }
  }; // VROSC.ScalePreset/VROSC.<>c__DisplayClass4_0
  #pragma pack(pop)
  static check_size<sizeof(ScalePreset::$$c__DisplayClass4_0), 16 + sizeof(::VROSC::Note)> __VROSC_ScalePreset_$$c__DisplayClass4_0SizeCheck;
  static_assert(sizeof(ScalePreset::$$c__DisplayClass4_0) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::ScalePreset::$$c__DisplayClass4_0::$UpdateNotePriorityList$b__1
// Il2CppName: <UpdateNotePriorityList>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::ScalePreset::$$c__DisplayClass4_0::*)(::VROSC::ScalePreset::NotePriority*)>(&VROSC::ScalePreset::$$c__DisplayClass4_0::$UpdateNotePriorityList$b__1)> {
  static const MethodInfo* get() {
    static auto* n = &::il2cpp_utils::GetClassFromName("VROSC", "ScalePreset/NotePriority")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScalePreset::$$c__DisplayClass4_0*), "<UpdateNotePriorityList>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{n});
  }
};
// Writing MetadataGetter for method: VROSC::ScalePreset::$$c__DisplayClass4_0::$UpdateNotePriorityList$b__2
// Il2CppName: <UpdateNotePriorityList>b__2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::ScalePreset::$$c__DisplayClass4_0::*)(::VROSC::ScalePreset::NotePriority*)>(&VROSC::ScalePreset::$$c__DisplayClass4_0::$UpdateNotePriorityList$b__2)> {
  static const MethodInfo* get() {
    static auto* n = &::il2cpp_utils::GetClassFromName("VROSC", "ScalePreset/NotePriority")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScalePreset::$$c__DisplayClass4_0*), "<UpdateNotePriorityList>b__2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{n});
  }
};
// Writing MetadataGetter for method: VROSC::ScalePreset::$$c__DisplayClass4_0::$UpdateNotePriorityList$b__0
// Il2CppName: <UpdateNotePriorityList>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::ScalePreset::$$c__DisplayClass4_0::*)(::VROSC::ScalePreset::NotePriority*)>(&VROSC::ScalePreset::$$c__DisplayClass4_0::$UpdateNotePriorityList$b__0)> {
  static const MethodInfo* get() {
    static auto* n = &::il2cpp_utils::GetClassFromName("VROSC", "ScalePreset/NotePriority")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::ScalePreset::$$c__DisplayClass4_0*), "<UpdateNotePriorityList>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{n});
  }
};
// Writing MetadataGetter for method: VROSC::ScalePreset::$$c__DisplayClass4_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
