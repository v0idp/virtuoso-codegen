// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TMP_InputField
  class TMP_InputField;
  // Forward declaring type: TextMeshProUGUI
  class TextMeshProUGUI;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Button
  class Button;
}
// Completed forward declares
// Type namespace: VROSC.FBDebug
namespace VROSC::FBDebug {
  // Forward declaring type: LoginDebugPanel
  class LoginDebugPanel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::FBDebug::LoginDebugPanel);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::FBDebug::LoginDebugPanel*, "VROSC.FBDebug", "LoginDebugPanel");
// Type namespace: VROSC.FBDebug
namespace VROSC::FBDebug {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.FBDebug.LoginDebugPanel
  // [TokenAttribute] Offset: FFFFFFFF
  class LoginDebugPanel : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private TMPro.TMP_InputField _emailInput
    // Size: 0x8
    // Offset: 0x18
    ::TMPro::TMP_InputField* emailInput;
    // Field size check
    static_assert(sizeof(::TMPro::TMP_InputField*) == 0x8);
    // private TMPro.TMP_InputField _passwordInput
    // Size: 0x8
    // Offset: 0x20
    ::TMPro::TMP_InputField* passwordInput;
    // Field size check
    static_assert(sizeof(::TMPro::TMP_InputField*) == 0x8);
    // private UnityEngine.UI.Button _loginButton
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::UI::Button* loginButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.UI.Button _logoutButton
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::UI::Button* logoutButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.UI.Button _createAccountButton
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::UI::Button* createAccountButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.UI.Button _sendVerificationEmailButton
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::UI::Button* sendVerificationEmailButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.UI.Button _changeUserEmailButton
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::UI::Button* changeUserEmailButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.UI.Button _changeUserPasswordButton
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::UI::Button* changeUserPasswordButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.UI.Button _resetPasswordButton
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::UI::Button* resetPasswordButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Button*) == 0x8);
    // private TMPro.TextMeshProUGUI _messageText
    // Size: 0x8
    // Offset: 0x60
    ::TMPro::TextMeshProUGUI* messageText;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshProUGUI*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get static field: static private System.String _message
    static ::StringW _get__message();
    // Set static field: static private System.String _message
    static void _set__message(::StringW value);
    // Get instance field reference: private TMPro.TMP_InputField _emailInput
    [[deprecated("Use field access instead!")]] ::TMPro::TMP_InputField*& dyn__emailInput();
    // Get instance field reference: private TMPro.TMP_InputField _passwordInput
    [[deprecated("Use field access instead!")]] ::TMPro::TMP_InputField*& dyn__passwordInput();
    // Get instance field reference: private UnityEngine.UI.Button _loginButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& dyn__loginButton();
    // Get instance field reference: private UnityEngine.UI.Button _logoutButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& dyn__logoutButton();
    // Get instance field reference: private UnityEngine.UI.Button _createAccountButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& dyn__createAccountButton();
    // Get instance field reference: private UnityEngine.UI.Button _sendVerificationEmailButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& dyn__sendVerificationEmailButton();
    // Get instance field reference: private UnityEngine.UI.Button _changeUserEmailButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& dyn__changeUserEmailButton();
    // Get instance field reference: private UnityEngine.UI.Button _changeUserPasswordButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& dyn__changeUserPasswordButton();
    // Get instance field reference: private UnityEngine.UI.Button _resetPasswordButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& dyn__resetPasswordButton();
    // Get instance field reference: private TMPro.TextMeshProUGUI _messageText
    [[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& dyn__messageText();
    // public System.Void .ctor()
    // Offset: 0x19AF848
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoginDebugPanel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FBDebug::LoginDebugPanel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoginDebugPanel*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x19AF850
    static void _cctor();
    // private System.Void Awake()
    // Offset: 0x19AEE78
    void Awake();
    // private System.Void OnDestroy()
    // Offset: 0x19AF124
    void OnDestroy();
    // private System.Void Update()
    // Offset: 0x19AF3A0
    void Update();
    // private System.Void LoginButtonPressed()
    // Offset: 0x19AF424
    void LoginButtonPressed();
    // private System.Void LogoutButtonPressed()
    // Offset: 0x19AF49C
    void LogoutButtonPressed();
    // private System.Void CreateAccountPressed()
    // Offset: 0x19AF4F4
    void CreateAccountPressed();
    // private System.Void SendVerificationEmailPressed()
    // Offset: 0x19AF56C
    void SendVerificationEmailPressed();
    // private System.Void ChangeUserEmailPressed()
    // Offset: 0x19AF5C4
    void ChangeUserEmailPressed();
    // private System.Void ChangeUserPasswordPressed()
    // Offset: 0x19AF62C
    void ChangeUserPasswordPressed();
    // private System.Void ResetPasswordPressed()
    // Offset: 0x19AF6A0
    void ResetPasswordPressed();
    // static public System.Void AddMessage(System.String message, System.Boolean clear)
    // Offset: 0x19AF708
    static void AddMessage(::StringW message, bool clear);
  }; // VROSC.FBDebug.LoginDebugPanel
  #pragma pack(pop)
  static check_size<sizeof(LoginDebugPanel), 96 + sizeof(::TMPro::TextMeshProUGUI*)> __VROSC_FBDebug_LoginDebugPanelSizeCheck;
  static_assert(sizeof(LoginDebugPanel) == 0x68);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::FBDebug::LoginDebugPanel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::FBDebug::LoginDebugPanel::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&VROSC::FBDebug::LoginDebugPanel::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::FBDebug::LoginDebugPanel*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::FBDebug::LoginDebugPanel::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::FBDebug::LoginDebugPanel::*)()>(&VROSC::FBDebug::LoginDebugPanel::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::FBDebug::LoginDebugPanel*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::FBDebug::LoginDebugPanel::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::FBDebug::LoginDebugPanel::*)()>(&VROSC::FBDebug::LoginDebugPanel::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::FBDebug::LoginDebugPanel*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::FBDebug::LoginDebugPanel::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::FBDebug::LoginDebugPanel::*)()>(&VROSC::FBDebug::LoginDebugPanel::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::FBDebug::LoginDebugPanel*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::FBDebug::LoginDebugPanel::LoginButtonPressed
// Il2CppName: LoginButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::FBDebug::LoginDebugPanel::*)()>(&VROSC::FBDebug::LoginDebugPanel::LoginButtonPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::FBDebug::LoginDebugPanel*), "LoginButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::FBDebug::LoginDebugPanel::LogoutButtonPressed
// Il2CppName: LogoutButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::FBDebug::LoginDebugPanel::*)()>(&VROSC::FBDebug::LoginDebugPanel::LogoutButtonPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::FBDebug::LoginDebugPanel*), "LogoutButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::FBDebug::LoginDebugPanel::CreateAccountPressed
// Il2CppName: CreateAccountPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::FBDebug::LoginDebugPanel::*)()>(&VROSC::FBDebug::LoginDebugPanel::CreateAccountPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::FBDebug::LoginDebugPanel*), "CreateAccountPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::FBDebug::LoginDebugPanel::SendVerificationEmailPressed
// Il2CppName: SendVerificationEmailPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::FBDebug::LoginDebugPanel::*)()>(&VROSC::FBDebug::LoginDebugPanel::SendVerificationEmailPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::FBDebug::LoginDebugPanel*), "SendVerificationEmailPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::FBDebug::LoginDebugPanel::ChangeUserEmailPressed
// Il2CppName: ChangeUserEmailPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::FBDebug::LoginDebugPanel::*)()>(&VROSC::FBDebug::LoginDebugPanel::ChangeUserEmailPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::FBDebug::LoginDebugPanel*), "ChangeUserEmailPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::FBDebug::LoginDebugPanel::ChangeUserPasswordPressed
// Il2CppName: ChangeUserPasswordPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::FBDebug::LoginDebugPanel::*)()>(&VROSC::FBDebug::LoginDebugPanel::ChangeUserPasswordPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::FBDebug::LoginDebugPanel*), "ChangeUserPasswordPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::FBDebug::LoginDebugPanel::ResetPasswordPressed
// Il2CppName: ResetPasswordPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::FBDebug::LoginDebugPanel::*)()>(&VROSC::FBDebug::LoginDebugPanel::ResetPasswordPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::FBDebug::LoginDebugPanel*), "ResetPasswordPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::FBDebug::LoginDebugPanel::AddMessage
// Il2CppName: AddMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, bool)>(&VROSC::FBDebug::LoginDebugPanel::AddMessage)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* clear = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::FBDebug::LoginDebugPanel*), "AddMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, clear});
  }
};
