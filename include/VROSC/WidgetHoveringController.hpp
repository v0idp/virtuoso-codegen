// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: Interactable
  class Interactable;
  // Forward declaring type: WidgetHoveringNode
  class WidgetHoveringNode;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: WidgetHoveringController
  class WidgetHoveringController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::WidgetHoveringController);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::WidgetHoveringController*, "VROSC", "WidgetHoveringController");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.WidgetHoveringController
  // [TokenAttribute] Offset: FFFFFFFF
  class WidgetHoveringController : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::VROSC::WidgetHoveringController::$HideAfterDelay$d__10
    class $HideAfterDelay$d__10;
    public:
    // private VROSC.Interactable _reactTo
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::Interactable* reactTo;
    // Field size check
    static_assert(sizeof(::VROSC::Interactable*) == 0x8);
    // private System.Collections.Generic.List`1<VROSC.WidgetHoveringNode> _nodes
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::VROSC::WidgetHoveringNode*>* nodes;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::VROSC::WidgetHoveringNode*>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.GameObject> _hideWhenNotPointingAt
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* hideWhenNotPointingAt;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*) == 0x8);
    // private System.Single _closeAfterSeconds
    // Size: 0x4
    // Offset: 0x30
    float closeAfterSeconds;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: closeAfterSeconds and: shouldBeVisibleWhenPointedAtAgain
    char __padding3[0x4] = {};
    // private System.Collections.Generic.List`1<UnityEngine.GameObject> _shouldBeVisibleWhenPointedAtAgain
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* shouldBeVisibleWhenPointedAtAgain;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> _activators
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>* activators;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.Interactable _reactTo
    [[deprecated]] ::VROSC::Interactable*& dyn__reactTo();
    // Get instance field reference: private System.Collections.Generic.List`1<VROSC.WidgetHoveringNode> _nodes
    [[deprecated]] ::System::Collections::Generic::List_1<::VROSC::WidgetHoveringNode*>*& dyn__nodes();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.GameObject> _hideWhenNotPointingAt
    [[deprecated]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& dyn__hideWhenNotPointingAt();
    // Get instance field reference: private System.Single _closeAfterSeconds
    [[deprecated]] float& dyn__closeAfterSeconds();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.GameObject> _shouldBeVisibleWhenPointedAtAgain
    [[deprecated]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& dyn__shouldBeVisibleWhenPointedAtAgain();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> _activators
    [[deprecated]] ::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>*& dyn__activators();
    // private System.Void Awake()
    // Offset: 0x951924
    void Awake();
    // private System.Void OnDestroy()
    // Offset: 0x951EE0
    void OnDestroy();
    // private System.Void SetHovering(System.Boolean hovering)
    // Offset: 0x951FB4
    void SetHovering(bool hovering);
    // public System.Void SetHoveringWithSender(System.Boolean hovering, UnityEngine.MonoBehaviour sender)
    // Offset: 0x951FC0
    void SetHoveringWithSender(bool hovering, ::UnityEngine::MonoBehaviour* sender);
    // private System.Collections.IEnumerator HideAfterDelay()
    // Offset: 0x952110
    ::System::Collections::IEnumerator* HideAfterDelay();
    // private System.Void ActivateSubObjects(System.Boolean shouldBeVisible)
    // Offset: 0x951C44
    void ActivateSubObjects(bool shouldBeVisible);
    // public System.Void .ctor()
    // Offset: 0x95217C
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WidgetHoveringController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::WidgetHoveringController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WidgetHoveringController*, creationType>()));
    }
  }; // VROSC.WidgetHoveringController
  #pragma pack(pop)
  static check_size<sizeof(WidgetHoveringController), 64 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>*)> __VROSC_WidgetHoveringControllerSizeCheck;
  static_assert(sizeof(WidgetHoveringController) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::WidgetHoveringController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetHoveringController::*)()>(&VROSC::WidgetHoveringController::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetHoveringController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetHoveringController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetHoveringController::*)()>(&VROSC::WidgetHoveringController::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetHoveringController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetHoveringController::SetHovering
// Il2CppName: SetHovering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetHoveringController::*)(bool)>(&VROSC::WidgetHoveringController::SetHovering)> {
  static const MethodInfo* get() {
    static auto* hovering = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetHoveringController*), "SetHovering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hovering});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetHoveringController::SetHoveringWithSender
// Il2CppName: SetHoveringWithSender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetHoveringController::*)(bool, ::UnityEngine::MonoBehaviour*)>(&VROSC::WidgetHoveringController::SetHoveringWithSender)> {
  static const MethodInfo* get() {
    static auto* hovering = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* sender = &::il2cpp_utils::GetClassFromName("UnityEngine", "MonoBehaviour")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetHoveringController*), "SetHoveringWithSender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hovering, sender});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetHoveringController::HideAfterDelay
// Il2CppName: HideAfterDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (VROSC::WidgetHoveringController::*)()>(&VROSC::WidgetHoveringController::HideAfterDelay)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetHoveringController*), "HideAfterDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetHoveringController::ActivateSubObjects
// Il2CppName: ActivateSubObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::WidgetHoveringController::*)(bool)>(&VROSC::WidgetHoveringController::ActivateSubObjects)> {
  static const MethodInfo* get() {
    static auto* shouldBeVisible = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetHoveringController*), "ActivateSubObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shouldBeVisible});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetHoveringController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
