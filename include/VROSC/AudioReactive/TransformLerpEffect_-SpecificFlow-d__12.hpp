// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.AudioReactive.TransformLerpEffect
#include "VROSC/AudioReactive/TransformLerpEffect.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12*, "VROSC.AudioReactive", "TransformLerpEffect/<SpecificFlow>d__12");
// Type namespace: VROSC.AudioReactive
namespace VROSC::AudioReactive {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.AudioReactive.TransformLerpEffect/VROSC.AudioReactive.<SpecificFlow>d__12
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class TransformLerpEffect::$SpecificFlow$d__12 : public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*/ {
    public:
    public:
    // private System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x10
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: $$1__state and: $$2__current
    char __padding0[0x4] = {};
    // private System.Object <>2__current
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppObject* $$2__current;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // public VROSC.AudioReactive.TransformLerpEffect <>4__this
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::AudioReactive::TransformLerpEffect* $$4__this;
    // Field size check
    static_assert(sizeof(::VROSC::AudioReactive::TransformLerpEffect*) == 0x8);
    // private System.Single <time>5__2
    // Size: 0x4
    // Offset: 0x28
    float $time$5__2;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean <fromIsTarget>5__3
    // Size: 0x1
    // Offset: 0x2C
    bool $fromIsTarget$5__3;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: $fromIsTarget$5__3 and: $startPosition$5__4
    char __padding4[0x3] = {};
    // private UnityEngine.Vector3 <startPosition>5__4
    // Size: 0xC
    // Offset: 0x30
    ::UnityEngine::Vector3 $startPosition$5__4;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Quaternion <startRotation>5__5
    // Size: 0x10
    // Offset: 0x3C
    ::UnityEngine::Quaternion $startRotation$5__5;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // private UnityEngine.Vector3 <startScale>5__6
    // Size: 0xC
    // Offset: 0x4C
    ::UnityEngine::Vector3 $startScale$5__6;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>
    operator ::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*>(this);
    }
    // Get instance field reference: private System.Int32 <>1__state
    [[deprecated]] int& dyn_$$1__state();
    // Get instance field reference: private System.Object <>2__current
    [[deprecated]] ::Il2CppObject*& dyn_$$2__current();
    // Get instance field reference: public VROSC.AudioReactive.TransformLerpEffect <>4__this
    [[deprecated]] ::VROSC::AudioReactive::TransformLerpEffect*& dyn_$$4__this();
    // Get instance field reference: private System.Single <time>5__2
    [[deprecated]] float& dyn_$time$5__2();
    // Get instance field reference: private System.Boolean <fromIsTarget>5__3
    [[deprecated]] bool& dyn_$fromIsTarget$5__3();
    // Get instance field reference: private UnityEngine.Vector3 <startPosition>5__4
    [[deprecated]] ::UnityEngine::Vector3& dyn_$startPosition$5__4();
    // Get instance field reference: private UnityEngine.Quaternion <startRotation>5__5
    [[deprecated]] ::UnityEngine::Quaternion& dyn_$startRotation$5__5();
    // Get instance field reference: private UnityEngine.Vector3 <startScale>5__6
    [[deprecated]] ::UnityEngine::Vector3& dyn_$startScale$5__6();
    // private System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()
    // Offset: 0x8DD580
    ::Il2CppObject* System_Collections_Generic_IEnumerator$System_Object$_get_Current();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0x8DD5C8
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
    // public System.Void .ctor(System.Int32 <>1__state)
    // Offset: 0x8DD20C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TransformLerpEffect::$SpecificFlow$d__12* New_ctor(int $$1__state) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TransformLerpEffect::$SpecificFlow$d__12*, creationType>($$1__state)));
    }
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0x8DD238
    void System_IDisposable_Dispose();
    // private System.Boolean MoveNext()
    // Offset: 0x8DD23C
    bool MoveNext();
    // private System.Void System.Collections.IEnumerator.Reset()
    // Offset: 0x8DD588
    void System_Collections_IEnumerator_Reset();
  }; // VROSC.AudioReactive.TransformLerpEffect/VROSC.AudioReactive.<SpecificFlow>d__12
  #pragma pack(pop)
  static check_size<sizeof(TransformLerpEffect::$SpecificFlow$d__12), 76 + sizeof(::UnityEngine::Vector3)> __VROSC_AudioReactive_TransformLerpEffect_$SpecificFlow$d__12SizeCheck;
  static_assert(sizeof(TransformLerpEffect::$SpecificFlow$d__12) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12::*)()>(&VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12::*)()>(&VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12::System_Collections_IEnumerator_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12::*)()>(&VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12::System_IDisposable_Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12::*)()>(&VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12::*)()>(&VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12::System_Collections_IEnumerator_Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
