// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Renderer
  class Renderer;
  // Forward declaring type: MaterialPropertyBlock
  class MaterialPropertyBlock;
  // Forward declaring type: Color
  struct Color;
}
// Forward declaring namespace: VROSC::AudioReactive
namespace VROSC::AudioReactive {
  // Forward declaring type: ShiftColorEffectData
  class ShiftColorEffectData;
}
// Completed forward declares
// Type namespace: VROSC.AudioReactive
namespace VROSC::AudioReactive {
  // Forward declaring type: ShiftColorData
  class ShiftColorData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::AudioReactive::ShiftColorData);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::AudioReactive::ShiftColorData*, "VROSC.AudioReactive", "ShiftColorData");
// Type namespace: VROSC.AudioReactive
namespace VROSC::AudioReactive {
  // Size: 0x44
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.AudioReactive.ShiftColorData
  // [TokenAttribute] Offset: FFFFFFFF
  class ShiftColorData : public ::Il2CppObject {
    public:
    public:
    // private UnityEngine.Renderer _renderer
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Renderer* renderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::Renderer*) == 0x8);
    // private UnityEngine.MaterialPropertyBlock _materialBlock
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::MaterialPropertyBlock* materialBlock;
    // Field size check
    static_assert(sizeof(::UnityEngine::MaterialPropertyBlock*) == 0x8);
    // private VROSC.AudioReactive.ShiftColorEffectData _data
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::AudioReactive::ShiftColorEffectData* data;
    // Field size check
    static_assert(sizeof(::VROSC::AudioReactive::ShiftColorEffectData*) == 0x8);
    // private System.Single _shift
    // Size: 0x4
    // Offset: 0x28
    float shift;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _currentHue
    // Size: 0x4
    // Offset: 0x2C
    float currentHue;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _currentSaturation
    // Size: 0x4
    // Offset: 0x30
    float currentSaturation;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _currentValue
    // Size: 0x4
    // Offset: 0x34
    float currentValue;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _startSaturation
    // Size: 0x4
    // Offset: 0x38
    float startSaturation;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _intensityShift
    // Size: 0x4
    // Offset: 0x3C
    float intensityShift;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _saturationShift
    // Size: 0x4
    // Offset: 0x40
    float saturationShift;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: private UnityEngine.Renderer _renderer
    [[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& dyn__renderer();
    // Get instance field reference: private UnityEngine.MaterialPropertyBlock _materialBlock
    [[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& dyn__materialBlock();
    // Get instance field reference: private VROSC.AudioReactive.ShiftColorEffectData _data
    [[deprecated("Use field access instead!")]] ::VROSC::AudioReactive::ShiftColorEffectData*& dyn__data();
    // Get instance field reference: private System.Single _shift
    [[deprecated("Use field access instead!")]] float& dyn__shift();
    // Get instance field reference: private System.Single _currentHue
    [[deprecated("Use field access instead!")]] float& dyn__currentHue();
    // Get instance field reference: private System.Single _currentSaturation
    [[deprecated("Use field access instead!")]] float& dyn__currentSaturation();
    // Get instance field reference: private System.Single _currentValue
    [[deprecated("Use field access instead!")]] float& dyn__currentValue();
    // Get instance field reference: private System.Single _startSaturation
    [[deprecated("Use field access instead!")]] float& dyn__startSaturation();
    // Get instance field reference: private System.Single _intensityShift
    [[deprecated("Use field access instead!")]] float& dyn__intensityShift();
    // Get instance field reference: private System.Single _saturationShift
    [[deprecated("Use field access instead!")]] float& dyn__saturationShift();
    // public UnityEngine.Color get_Color()
    // Offset: 0x192720C
    ::UnityEngine::Color get_Color();
    // public System.Void .ctor(UnityEngine.Renderer renderer, VROSC.AudioReactive.ShiftColorEffectData data)
    // Offset: 0x1927254
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ShiftColorData* New_ctor(::UnityEngine::Renderer* renderer, ::VROSC::AudioReactive::ShiftColorEffectData* data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioReactive::ShiftColorData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ShiftColorData*, creationType>(renderer, data)));
    }
    // public System.Void SetRandomColor()
    // Offset: 0x19272FC
    void SetRandomColor();
    // private UnityEngine.Color GetColor()
    // Offset: 0x1927210
    ::UnityEngine::Color GetColor();
    // public System.Void ShiftShade(System.Single amount)
    // Offset: 0x1927380
    void ShiftShade(float amount);
    // public System.Void SetSaturationShift(System.Single saturationShift)
    // Offset: 0x19273F4
    void SetSaturationShift(float saturationShift);
    // public System.Void SetValueShift(System.Single value)
    // Offset: 0x19273FC
    void SetValueShift(float value);
    // public System.Void SetColorOnRenderer()
    // Offset: 0x1927404
    void SetColorOnRenderer();
  }; // VROSC.AudioReactive.ShiftColorData
  #pragma pack(pop)
  static check_size<sizeof(ShiftColorData), 64 + sizeof(float)> __VROSC_AudioReactive_ShiftColorDataSizeCheck;
  static_assert(sizeof(ShiftColorData) == 0x44);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::AudioReactive::ShiftColorData::get_Color
// Il2CppName: get_Color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (VROSC::AudioReactive::ShiftColorData::*)()>(&VROSC::AudioReactive::ShiftColorData::get_Color)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::ShiftColorData*), "get_Color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::ShiftColorData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::AudioReactive::ShiftColorData::SetRandomColor
// Il2CppName: SetRandomColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AudioReactive::ShiftColorData::*)()>(&VROSC::AudioReactive::ShiftColorData::SetRandomColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::ShiftColorData*), "SetRandomColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::ShiftColorData::GetColor
// Il2CppName: GetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (VROSC::AudioReactive::ShiftColorData::*)()>(&VROSC::AudioReactive::ShiftColorData::GetColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::ShiftColorData*), "GetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::ShiftColorData::ShiftShade
// Il2CppName: ShiftShade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AudioReactive::ShiftColorData::*)(float)>(&VROSC::AudioReactive::ShiftColorData::ShiftShade)> {
  static const MethodInfo* get() {
    static auto* amount = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::ShiftColorData*), "ShiftShade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{amount});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::ShiftColorData::SetSaturationShift
// Il2CppName: SetSaturationShift
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AudioReactive::ShiftColorData::*)(float)>(&VROSC::AudioReactive::ShiftColorData::SetSaturationShift)> {
  static const MethodInfo* get() {
    static auto* saturationShift = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::ShiftColorData*), "SetSaturationShift", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{saturationShift});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::ShiftColorData::SetValueShift
// Il2CppName: SetValueShift
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AudioReactive::ShiftColorData::*)(float)>(&VROSC::AudioReactive::ShiftColorData::SetValueShift)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::ShiftColorData*), "SetValueShift", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::ShiftColorData::SetColorOnRenderer
// Il2CppName: SetColorOnRenderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AudioReactive::ShiftColorData::*)()>(&VROSC::AudioReactive::ShiftColorData::SetColorOnRenderer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::ShiftColorData*), "SetColorOnRenderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
