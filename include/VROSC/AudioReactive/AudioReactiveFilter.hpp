// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC::AudioReactive
namespace VROSC::AudioReactive {
}
// Completed forward declares
// Type namespace: VROSC.AudioReactive
namespace VROSC::AudioReactive {
  // Forward declaring type: AudioReactiveFilter
  class AudioReactiveFilter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::AudioReactive::AudioReactiveFilter);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::AudioReactive::AudioReactiveFilter*, "VROSC.AudioReactive", "AudioReactiveFilter");
// Type namespace: VROSC.AudioReactive
namespace VROSC::AudioReactive {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.AudioReactive.AudioReactiveFilter
  // [TokenAttribute] Offset: FFFFFFFF
  // [CreateAssetMenuAttribute] Offset: 780BB4
  class AudioReactiveFilter : public ::UnityEngine::ScriptableObject {
    public:
    // Nested type: ::VROSC::AudioReactive::AudioReactiveFilter::FilterSettings
    class FilterSettings;
    public:
    // private VROSC.AudioReactive.AudioReactiveFilter/VROSC.AudioReactive.FilterSettings _filterSettings
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::AudioReactive::AudioReactiveFilter::FilterSettings* filterSettings;
    // Field size check
    static_assert(sizeof(::VROSC::AudioReactive::AudioReactiveFilter::FilterSettings*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.AudioReactive.AudioReactiveFilter/VROSC.AudioReactive.FilterSettings _filterSettings
    [[deprecated]] ::VROSC::AudioReactive::AudioReactiveFilter::FilterSettings*& dyn__filterSettings();
    // public System.Boolean Filter(VROSC.AudioReactive.AudioReactiveFilter/VROSC.AudioReactive.FilterSettings filterSettings, System.Int32 beat)
    // Offset: 0x971854
    bool Filter(::VROSC::AudioReactive::AudioReactiveFilter::FilterSettings* filterSettings, int beat);
    // public VROSC.AudioReactive.AudioReactiveFilter/VROSC.AudioReactive.FilterSettings Get()
    // Offset: 0x971874
    ::VROSC::AudioReactive::AudioReactiveFilter::FilterSettings* Get();
    // public System.Void .ctor()
    // Offset: 0x971890
    // Implemented from: UnityEngine.ScriptableObject
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AudioReactiveFilter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioReactive::AudioReactiveFilter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AudioReactiveFilter*, creationType>()));
    }
  }; // VROSC.AudioReactive.AudioReactiveFilter
  #pragma pack(pop)
  static check_size<sizeof(AudioReactiveFilter), 24 + sizeof(::VROSC::AudioReactive::AudioReactiveFilter::FilterSettings*)> __VROSC_AudioReactive_AudioReactiveFilterSizeCheck;
  static_assert(sizeof(AudioReactiveFilter) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::AudioReactive::AudioReactiveFilter::Filter
// Il2CppName: Filter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::AudioReactive::AudioReactiveFilter::*)(::VROSC::AudioReactive::AudioReactiveFilter::FilterSettings*, int)>(&VROSC::AudioReactive::AudioReactiveFilter::Filter)> {
  static const MethodInfo* get() {
    static auto* filterSettings = &::il2cpp_utils::GetClassFromName("VROSC.AudioReactive", "AudioReactiveFilter/FilterSettings")->byval_arg;
    static auto* beat = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::AudioReactiveFilter*), "Filter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{filterSettings, beat});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::AudioReactiveFilter::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::AudioReactive::AudioReactiveFilter::FilterSettings* (VROSC::AudioReactive::AudioReactiveFilter::*)()>(&VROSC::AudioReactive::AudioReactiveFilter::Get)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::AudioReactiveFilter*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::AudioReactiveFilter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
