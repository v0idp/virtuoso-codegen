// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC::AudioReactive
namespace VROSC::AudioReactive {
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: VROSC.AudioReactive
namespace VROSC::AudioReactive {
  // Forward declaring type: AudioReactiveCoreTester
  class AudioReactiveCoreTester;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::AudioReactive::AudioReactiveCoreTester);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::AudioReactive::AudioReactiveCoreTester*, "VROSC.AudioReactive", "AudioReactiveCoreTester");
// Type namespace: VROSC.AudioReactive
namespace VROSC::AudioReactive {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.AudioReactive.AudioReactiveCoreTester
  // [TokenAttribute] Offset: FFFFFFFF
  class AudioReactiveCoreTester : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::VROSC::AudioReactive::AudioReactiveCoreTester::$TestAudioReactions$d__3
    class $TestAudioReactions$d__3;
    public:
    // [RangeAttribute] Offset: 0x78CCA4
    // private System.Single _bpm
    // Size: 0x4
    // Offset: 0x18
    float bpm;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Single _bpm
    [[deprecated("Use field access instead!")]] float& dyn__bpm();
    // public System.Void .ctor()
    // Offset: 0x971844
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AudioReactiveCoreTester* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioReactive::AudioReactiveCoreTester::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AudioReactiveCoreTester*, creationType>()));
    }
    // private System.Void Start()
    // Offset: 0x971648
    void Start();
    // private System.Void BeatRecieved(System.Single obj)
    // Offset: 0x9717B8
    void BeatRecieved(float obj);
    // private System.Collections.IEnumerator TestAudioReactions()
    // Offset: 0x97174C
    ::System::Collections::IEnumerator* TestAudioReactions();
  }; // VROSC.AudioReactive.AudioReactiveCoreTester
  #pragma pack(pop)
  static check_size<sizeof(AudioReactiveCoreTester), 24 + sizeof(float)> __VROSC_AudioReactive_AudioReactiveCoreTesterSizeCheck;
  static_assert(sizeof(AudioReactiveCoreTester) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::AudioReactive::AudioReactiveCoreTester::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::AudioReactive::AudioReactiveCoreTester::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AudioReactive::AudioReactiveCoreTester::*)()>(&VROSC::AudioReactive::AudioReactiveCoreTester::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::AudioReactiveCoreTester*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::AudioReactiveCoreTester::BeatRecieved
// Il2CppName: BeatRecieved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AudioReactive::AudioReactiveCoreTester::*)(float)>(&VROSC::AudioReactive::AudioReactiveCoreTester::BeatRecieved)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::AudioReactiveCoreTester*), "BeatRecieved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::AudioReactiveCoreTester::TestAudioReactions
// Il2CppName: TestAudioReactions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (VROSC::AudioReactive::AudioReactiveCoreTester::*)()>(&VROSC::AudioReactive::AudioReactiveCoreTester::TestAudioReactions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::AudioReactiveCoreTester*), "TestAudioReactions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
