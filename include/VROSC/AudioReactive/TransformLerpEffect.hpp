// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.AudioReactive.CoroutineDrivenEffect
#include "VROSC/AudioReactive/CoroutineDrivenEffect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC::AudioReactive
namespace VROSC::AudioReactive {
  // Forward declaring type: TransformEffectData
  class TransformEffectData;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: VROSC.AudioReactive
namespace VROSC::AudioReactive {
  // Forward declaring type: TransformLerpEffect
  class TransformLerpEffect;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::AudioReactive::TransformLerpEffect);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::AudioReactive::TransformLerpEffect*, "VROSC.AudioReactive", "TransformLerpEffect");
// Type namespace: VROSC.AudioReactive
namespace VROSC::AudioReactive {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.AudioReactive.TransformLerpEffect
  // [TokenAttribute] Offset: FFFFFFFF
  class TransformLerpEffect : public ::VROSC::AudioReactive::CoroutineDrivenEffect {
    public:
    // Nested type: ::VROSC::AudioReactive::TransformLerpEffect::$SpecificFlow$d__12
    class $SpecificFlow$d__12;
    public:
    // private VROSC.AudioReactive.TransformEffectData _data
    // Size: 0x8
    // Offset: 0x30
    ::VROSC::AudioReactive::TransformEffectData* data;
    // Field size check
    static_assert(sizeof(::VROSC::AudioReactive::TransformEffectData*) == 0x8);
    // private UnityEngine.Transform _target
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Transform* target;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform _from
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Transform* from;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform _to
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Transform* to;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    public:
    // Get instance field reference: private VROSC.AudioReactive.TransformEffectData _data
    [[deprecated]] ::VROSC::AudioReactive::TransformEffectData*& dyn__data();
    // Get instance field reference: private UnityEngine.Transform _target
    [[deprecated]] ::UnityEngine::Transform*& dyn__target();
    // Get instance field reference: private UnityEngine.Transform _from
    [[deprecated]] ::UnityEngine::Transform*& dyn__from();
    // Get instance field reference: private UnityEngine.Transform _to
    [[deprecated]] ::UnityEngine::Transform*& dyn__to();
    // public VROSC.AudioReactive.TransformEffectData get_Data()
    // Offset: 0xA2A844
    ::VROSC::AudioReactive::TransformEffectData* get_Data();
    // public UnityEngine.Transform get_Target()
    // Offset: 0xA2A84C
    ::UnityEngine::Transform* get_Target();
    // public UnityEngine.Transform get_From()
    // Offset: 0xA2A854
    ::UnityEngine::Transform* get_From();
    // public UnityEngine.Transform get_To()
    // Offset: 0xA2A85C
    ::UnityEngine::Transform* get_To();
    // public System.Void .ctor()
    // Offset: 0xA2A8D0
    // Implemented from: VROSC.AudioReactive.CoroutineDrivenEffect
    // Base method: System.Void CoroutineDrivenEffect::.ctor()
    // Base method: System.Void ReactiveEffect::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TransformLerpEffect* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioReactive::TransformLerpEffect::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TransformLerpEffect*, creationType>()));
    }
    // protected override System.Collections.IEnumerator SpecificFlow()
    // Offset: 0xA2A864
    // Implemented from: VROSC.AudioReactive.CoroutineDrivenEffect
    // Base method: System.Collections.IEnumerator CoroutineDrivenEffect::SpecificFlow()
    ::System::Collections::IEnumerator* SpecificFlow();
  }; // VROSC.AudioReactive.TransformLerpEffect
  #pragma pack(pop)
  static check_size<sizeof(TransformLerpEffect), 72 + sizeof(::UnityEngine::Transform*)> __VROSC_AudioReactive_TransformLerpEffectSizeCheck;
  static_assert(sizeof(TransformLerpEffect) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::AudioReactive::TransformLerpEffect::get_Data
// Il2CppName: get_Data
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::AudioReactive::TransformEffectData* (VROSC::AudioReactive::TransformLerpEffect::*)()>(&VROSC::AudioReactive::TransformLerpEffect::get_Data)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::TransformLerpEffect*), "get_Data", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::TransformLerpEffect::get_Target
// Il2CppName: get_Target
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (VROSC::AudioReactive::TransformLerpEffect::*)()>(&VROSC::AudioReactive::TransformLerpEffect::get_Target)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::TransformLerpEffect*), "get_Target", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::TransformLerpEffect::get_From
// Il2CppName: get_From
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (VROSC::AudioReactive::TransformLerpEffect::*)()>(&VROSC::AudioReactive::TransformLerpEffect::get_From)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::TransformLerpEffect*), "get_From", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::TransformLerpEffect::get_To
// Il2CppName: get_To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (VROSC::AudioReactive::TransformLerpEffect::*)()>(&VROSC::AudioReactive::TransformLerpEffect::get_To)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::TransformLerpEffect*), "get_To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::TransformLerpEffect::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::AudioReactive::TransformLerpEffect::SpecificFlow
// Il2CppName: SpecificFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (VROSC::AudioReactive::TransformLerpEffect::*)()>(&VROSC::AudioReactive::TransformLerpEffect::SpecificFlow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::TransformLerpEffect*), "SpecificFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
