// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.AudioReactive.ReactiveEffect
#include "VROSC/AudioReactive/ReactiveEffect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC::AudioReactive
namespace VROSC::AudioReactive {
  // Forward declaring type: AudioReactiveBehaviour
  class AudioReactiveBehaviour;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Coroutine
  class Coroutine;
  // Forward declaring type: WaitForSeconds
  class WaitForSeconds;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: VROSC.AudioReactive
namespace VROSC::AudioReactive {
  // Forward declaring type: CoroutineDrivenEffect
  class CoroutineDrivenEffect;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::AudioReactive::CoroutineDrivenEffect);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::AudioReactive::CoroutineDrivenEffect*, "VROSC.AudioReactive", "CoroutineDrivenEffect");
// Type namespace: VROSC.AudioReactive
namespace VROSC::AudioReactive {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.AudioReactive.CoroutineDrivenEffect
  // [TokenAttribute] Offset: FFFFFFFF
  class CoroutineDrivenEffect : public ::VROSC::AudioReactive::ReactiveEffect {
    public:
    // Nested type: ::VROSC::AudioReactive::CoroutineDrivenEffect::$Reaction$d__7
    class $Reaction$d__7;
    public:
    // protected System.Single _delay
    // Size: 0x4
    // Offset: 0x10
    float delay;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: delay and: behaviour
    char __padding0[0x4] = {};
    // private VROSC.AudioReactive.AudioReactiveBehaviour _behaviour
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::AudioReactive::AudioReactiveBehaviour* behaviour;
    // Field size check
    static_assert(sizeof(::VROSC::AudioReactive::AudioReactiveBehaviour*) == 0x8);
    // private UnityEngine.Coroutine _coroutine
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Coroutine* coroutine;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    // protected UnityEngine.WaitForSeconds _waitDelay
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::WaitForSeconds* waitDelay;
    // Field size check
    static_assert(sizeof(::UnityEngine::WaitForSeconds*) == 0x8);
    public:
    // Get instance field reference: protected System.Single _delay
    [[deprecated("Use field access instead!")]] float& dyn__delay();
    // Get instance field reference: private VROSC.AudioReactive.AudioReactiveBehaviour _behaviour
    [[deprecated("Use field access instead!")]] ::VROSC::AudioReactive::AudioReactiveBehaviour*& dyn__behaviour();
    // Get instance field reference: private UnityEngine.Coroutine _coroutine
    [[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& dyn__coroutine();
    // Get instance field reference: protected UnityEngine.WaitForSeconds _waitDelay
    [[deprecated("Use field access instead!")]] ::UnityEngine::WaitForSeconds*& dyn__waitDelay();
    // private System.Collections.IEnumerator Reaction()
    // Offset: 0x8DF3CC
    ::System::Collections::IEnumerator* Reaction();
    // protected System.Collections.IEnumerator SpecificFlow()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::IEnumerator* SpecificFlow();
    // protected System.Void .ctor()
    // Offset: 0x8DF438
    // Implemented from: VROSC.AudioReactive.ReactiveEffect
    // Base method: System.Void ReactiveEffect::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CoroutineDrivenEffect* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioReactive::CoroutineDrivenEffect::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CoroutineDrivenEffect*, creationType>()));
    }
    // public override System.Void Update()
    // Offset: 0x8DF2F0
    // Implemented from: VROSC.AudioReactive.ReactiveEffect
    // Base method: System.Void ReactiveEffect::Update()
    void Update();
    // public override System.Void Setup(VROSC.AudioReactive.AudioReactiveBehaviour behaviour)
    // Offset: 0x8DF2F4
    // Implemented from: VROSC.AudioReactive.ReactiveEffect
    // Base method: System.Void ReactiveEffect::Setup(VROSC.AudioReactive.AudioReactiveBehaviour behaviour)
    void Setup(::VROSC::AudioReactive::AudioReactiveBehaviour* behaviour);
    // public override System.Void Trigger()
    // Offset: 0x8DF370
    // Implemented from: VROSC.AudioReactive.ReactiveEffect
    // Base method: System.Void ReactiveEffect::Trigger()
    void Trigger();
  }; // VROSC.AudioReactive.CoroutineDrivenEffect
  #pragma pack(pop)
  static check_size<sizeof(CoroutineDrivenEffect), 40 + sizeof(::UnityEngine::WaitForSeconds*)> __VROSC_AudioReactive_CoroutineDrivenEffectSizeCheck;
  static_assert(sizeof(CoroutineDrivenEffect) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::AudioReactive::CoroutineDrivenEffect::Reaction
// Il2CppName: Reaction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (VROSC::AudioReactive::CoroutineDrivenEffect::*)()>(&VROSC::AudioReactive::CoroutineDrivenEffect::Reaction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::CoroutineDrivenEffect*), "Reaction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::CoroutineDrivenEffect::SpecificFlow
// Il2CppName: SpecificFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (VROSC::AudioReactive::CoroutineDrivenEffect::*)()>(&VROSC::AudioReactive::CoroutineDrivenEffect::SpecificFlow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::CoroutineDrivenEffect*), "SpecificFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::CoroutineDrivenEffect::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::AudioReactive::CoroutineDrivenEffect::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AudioReactive::CoroutineDrivenEffect::*)()>(&VROSC::AudioReactive::CoroutineDrivenEffect::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::CoroutineDrivenEffect*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::CoroutineDrivenEffect::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AudioReactive::CoroutineDrivenEffect::*)(::VROSC::AudioReactive::AudioReactiveBehaviour*)>(&VROSC::AudioReactive::CoroutineDrivenEffect::Setup)> {
  static const MethodInfo* get() {
    static auto* behaviour = &::il2cpp_utils::GetClassFromName("VROSC.AudioReactive", "AudioReactiveBehaviour")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::CoroutineDrivenEffect*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{behaviour});
  }
};
// Writing MetadataGetter for method: VROSC::AudioReactive::CoroutineDrivenEffect::Trigger
// Il2CppName: Trigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AudioReactive::CoroutineDrivenEffect::*)()>(&VROSC::AudioReactive::CoroutineDrivenEffect::Trigger)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AudioReactive::CoroutineDrivenEffect*), "Trigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
