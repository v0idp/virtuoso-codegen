// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.TimelineActivation
#include "VROSC/TimelineActivation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: NoteBoardNoteController
  class NoteBoardNoteController;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: TimelineInstrumentActivation
  class TimelineInstrumentActivation;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::TimelineInstrumentActivation);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::TimelineInstrumentActivation*, "VROSC", "TimelineInstrumentActivation");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x41
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.TimelineInstrumentActivation
  // [TokenAttribute] Offset: FFFFFFFF
  class TimelineInstrumentActivation : public ::VROSC::TimelineActivation {
    public:
    // Writing base type padding for base size: 0x31 to desired offset: 0x38
    char ___base_padding[0x7] = {};
    public:
    // private VROSC.NoteBoardNoteController _noteboardControlller
    // Size: 0x8
    // Offset: 0x38
    ::VROSC::NoteBoardNoteController* noteboardControlller;
    // Field size check
    static_assert(sizeof(::VROSC::NoteBoardNoteController*) == 0x8);
    // private System.Boolean _hideAllNotesAtStart
    // Size: 0x1
    // Offset: 0x40
    bool hideAllNotesAtStart;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private VROSC.NoteBoardNoteController _noteboardControlller
    [[deprecated]] ::VROSC::NoteBoardNoteController*& dyn__noteboardControlller();
    // Get instance field reference: private System.Boolean _hideAllNotesAtStart
    [[deprecated]] bool& dyn__hideAllNotesAtStart();
    // private System.Void HideNotes()
    // Offset: 0xA27450
    void HideNotes();
    // public System.Void .ctor()
    // Offset: 0xA275D0
    // Implemented from: VROSC.TimelineActivation
    // Base method: System.Void TimelineActivation::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TimelineInstrumentActivation* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TimelineInstrumentActivation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TimelineInstrumentActivation*, creationType>()));
    }
    // protected override System.Void OnActivateStart()
    // Offset: 0xA2744C
    // Implemented from: VROSC.TimelineActivation
    // Base method: System.Void TimelineActivation::OnActivateStart()
    void OnActivateStart();
  }; // VROSC.TimelineInstrumentActivation
  #pragma pack(pop)
  static check_size<sizeof(TimelineInstrumentActivation), 64 + sizeof(bool)> __VROSC_TimelineInstrumentActivationSizeCheck;
  static_assert(sizeof(TimelineInstrumentActivation) == 0x41);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::TimelineInstrumentActivation::HideNotes
// Il2CppName: HideNotes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::TimelineInstrumentActivation::*)()>(&VROSC::TimelineInstrumentActivation::HideNotes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::TimelineInstrumentActivation*), "HideNotes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::TimelineInstrumentActivation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::TimelineInstrumentActivation::OnActivateStart
// Il2CppName: OnActivateStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::TimelineInstrumentActivation::*)()>(&VROSC::TimelineInstrumentActivation::OnActivateStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::TimelineInstrumentActivation*), "OnActivateStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
