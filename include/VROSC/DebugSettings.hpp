// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: DebugSettings
  class DebugSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::DebugSettings);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::DebugSettings*, "VROSC", "DebugSettings");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.DebugSettings
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugSettings : public ::Il2CppObject {
    public:
    // Get static field: static public System.Boolean DisableSpectatorCamera
    static bool _get_DisableSpectatorCamera();
    // Set static field: static public System.Boolean DisableSpectatorCamera
    static void _set_DisableSpectatorCamera(bool value);
    // Get static field: static public System.Boolean ShowReactToBeatLines
    static bool _get_ShowReactToBeatLines();
    // Set static field: static public System.Boolean ShowReactToBeatLines
    static void _set_ShowReactToBeatLines(bool value);
    // Get static field: static public System.Boolean ShowLoopData
    static bool _get_ShowLoopData();
    // Set static field: static public System.Boolean ShowLoopData
    static void _set_ShowLoopData(bool value);
    // static public System.Void SaveValues()
    // Offset: 0x8E393C
    static void SaveValues();
    // static private System.Void WriteBool(System.String key, System.Boolean value)
    // Offset: 0x8E39FC
    static void WriteBool(::StringW key, bool value);
    // static private System.Boolean ReadBool(System.String key)
    // Offset: 0x8E3A08
    static bool ReadBool(::StringW key);
    // static public System.Void LoadValues()
    // Offset: 0x8E3A28
    static void LoadValues();
  }; // VROSC.DebugSettings
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::DebugSettings::SaveValues
// Il2CppName: SaveValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&VROSC::DebugSettings::SaveValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::DebugSettings*), "SaveValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::DebugSettings::WriteBool
// Il2CppName: WriteBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, bool)>(&VROSC::DebugSettings::WriteBool)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::DebugSettings*), "WriteBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: VROSC::DebugSettings::ReadBool
// Il2CppName: ReadBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&VROSC::DebugSettings::ReadBool)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::DebugSettings*), "ReadBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: VROSC::DebugSettings::LoadValues
// Il2CppName: LoadValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&VROSC::DebugSettings::LoadValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::DebugSettings*), "LoadValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
