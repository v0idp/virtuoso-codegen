// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.BaseDataController
#include "VROSC/BaseDataController.hpp"
// Including type: VROSC.UserUpVotesDataModel
#include "VROSC/UserUpVotesDataModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: UserUpVotesDataController
  class UserUpVotesDataController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::UserUpVotesDataController);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::UserUpVotesDataController*, "VROSC", "UserUpVotesDataController");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.UserUpVotesDataController
  // [TokenAttribute] Offset: FFFFFFFF
  class UserUpVotesDataController : public ::VROSC::BaseDataController {
    public:
    // Nested type: ::VROSC::UserUpVotesDataController::$$c__DisplayClass8_0
    class $$c__DisplayClass8_0;
    // Nested type: ::VROSC::UserUpVotesDataController::$$c__DisplayClass10_0
    class $$c__DisplayClass10_0;
    // Nested type: ::VROSC::UserUpVotesDataController::$$c__DisplayClass11_0
    class $$c__DisplayClass11_0;
    // protected VROSC.UserUpVotesDataModel get_DataModel()
    // Offset: 0x19204B4
    ::VROSC::UserUpVotesDataModel* get_DataModel();
    // public System.Void AddUpVote(System.String sessionId, System.String sessionUpVoteId, System.Action`1<System.String> onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x19205A8
    void AddUpVote(::StringW sessionId, ::StringW sessionUpVoteId, ::System::Action_1<::StringW>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void RemoveUpVote(System.String sessionId, System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x1920994
    void RemoveUpVote(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public System.Void RemoveLocalUpVoteWithId(System.String upVoteId)
    // Offset: 0x1920D3C
    void RemoveLocalUpVoteWithId(::StringW upVoteId);
    // public System.String GetUpVoteIdFromSession(System.String sessionId)
    // Offset: 0x1920E5C
    ::StringW GetUpVoteIdFromSession(::StringW sessionId);
    // public System.Boolean HasUpVote(System.String sessionId)
    // Offset: 0x192074C
    bool HasUpVote(::StringW sessionId);
    // private System.Void AddUpVoteToData(VROSC.UserUpVotesDataModel/VROSC.UpVote upVote, System.Action`1<System.String> onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x1920768
    void AddUpVoteToData(::VROSC::UserUpVotesDataModel::UpVote* upVote, ::System::Action_1<::StringW>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // private System.Void RemoveUpVoteFromData(VROSC.UserUpVotesDataModel/VROSC.UpVote upVote, System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x1920C00
    void RemoveUpVoteFromData(::VROSC::UserUpVotesDataModel::UpVote* upVote, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // private VROSC.UserUpVotesDataModel/VROSC.UpVote GetUpVote(System.String sessionId)
    // Offset: 0x1920A9C
    ::VROSC::UserUpVotesDataModel::UpVote* GetUpVote(::StringW sessionId);
    // public System.Void .ctor()
    // Offset: 0x191A48C
    // Implemented from: VROSC.BaseDataController
    // Base method: System.Void BaseDataController::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UserUpVotesDataController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::UserUpVotesDataController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UserUpVotesDataController*, creationType>()));
    }
    // public override System.Void LoadCloudData(System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x1920EC8
    // Implemented from: VROSC.BaseDataController
    // Base method: System.Void BaseDataController::LoadCloudData(System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    void LoadCloudData(::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public override System.Void SaveCloudData(System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x1921004
    // Implemented from: VROSC.BaseDataController
    // Base method: System.Void BaseDataController::SaveCloudData(System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    void SaveCloudData(::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
  }; // VROSC.UserUpVotesDataController
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::UserUpVotesDataController::get_DataModel
// Il2CppName: get_DataModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::UserUpVotesDataModel* (VROSC::UserUpVotesDataController::*)()>(&VROSC::UserUpVotesDataController::get_DataModel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserUpVotesDataController*), "get_DataModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UserUpVotesDataController::AddUpVote
// Il2CppName: AddUpVote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserUpVotesDataController::*)(::StringW, ::StringW, ::System::Action_1<::StringW>*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::UserUpVotesDataController::AddUpVote)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* sessionUpVoteId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserUpVotesDataController*), "AddUpVote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, sessionUpVoteId, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::UserUpVotesDataController::RemoveUpVote
// Il2CppName: RemoveUpVote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserUpVotesDataController::*)(::StringW, ::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::UserUpVotesDataController::RemoveUpVote)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserUpVotesDataController*), "RemoveUpVote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::UserUpVotesDataController::RemoveLocalUpVoteWithId
// Il2CppName: RemoveLocalUpVoteWithId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserUpVotesDataController::*)(::StringW)>(&VROSC::UserUpVotesDataController::RemoveLocalUpVoteWithId)> {
  static const MethodInfo* get() {
    static auto* upVoteId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserUpVotesDataController*), "RemoveLocalUpVoteWithId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{upVoteId});
  }
};
// Writing MetadataGetter for method: VROSC::UserUpVotesDataController::GetUpVoteIdFromSession
// Il2CppName: GetUpVoteIdFromSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::UserUpVotesDataController::*)(::StringW)>(&VROSC::UserUpVotesDataController::GetUpVoteIdFromSession)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserUpVotesDataController*), "GetUpVoteIdFromSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::UserUpVotesDataController::HasUpVote
// Il2CppName: HasUpVote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::UserUpVotesDataController::*)(::StringW)>(&VROSC::UserUpVotesDataController::HasUpVote)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserUpVotesDataController*), "HasUpVote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::UserUpVotesDataController::AddUpVoteToData
// Il2CppName: AddUpVoteToData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserUpVotesDataController::*)(::VROSC::UserUpVotesDataModel::UpVote*, ::System::Action_1<::StringW>*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::UserUpVotesDataController::AddUpVoteToData)> {
  static const MethodInfo* get() {
    static auto* upVote = &::il2cpp_utils::GetClassFromName("VROSC", "UserUpVotesDataModel/UpVote")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserUpVotesDataController*), "AddUpVoteToData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{upVote, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::UserUpVotesDataController::RemoveUpVoteFromData
// Il2CppName: RemoveUpVoteFromData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserUpVotesDataController::*)(::VROSC::UserUpVotesDataModel::UpVote*, ::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::UserUpVotesDataController::RemoveUpVoteFromData)> {
  static const MethodInfo* get() {
    static auto* upVote = &::il2cpp_utils::GetClassFromName("VROSC", "UserUpVotesDataModel/UpVote")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserUpVotesDataController*), "RemoveUpVoteFromData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{upVote, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::UserUpVotesDataController::GetUpVote
// Il2CppName: GetUpVote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::UserUpVotesDataModel::UpVote* (VROSC::UserUpVotesDataController::*)(::StringW)>(&VROSC::UserUpVotesDataController::GetUpVote)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserUpVotesDataController*), "GetUpVote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::UserUpVotesDataController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::UserUpVotesDataController::LoadCloudData
// Il2CppName: LoadCloudData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserUpVotesDataController::*)(::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::UserUpVotesDataController::LoadCloudData)> {
  static const MethodInfo* get() {
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserUpVotesDataController*), "LoadCloudData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::UserUpVotesDataController::SaveCloudData
// Il2CppName: SaveCloudData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserUpVotesDataController::*)(::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::UserUpVotesDataController::SaveCloudData)> {
  static const MethodInfo* get() {
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserUpVotesDataController*), "SaveCloudData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{onSuccess, onFailure});
  }
};
