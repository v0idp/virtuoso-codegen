// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: UIToggle
  class UIToggle;
  // Forward declaring type: PaginatedListDataHolder
  class PaginatedListDataHolder;
  // Forward declaring type: PaginatedList
  class PaginatedList;
  // Forward declaring type: InputDevice
  class InputDevice;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: PaginatedListItemUI
  class PaginatedListItemUI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::PaginatedListItemUI);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::PaginatedListItemUI*, "VROSC", "PaginatedListItemUI");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.PaginatedListItemUI
  // [TokenAttribute] Offset: FFFFFFFF
  class PaginatedListItemUI : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // protected VROSC.UIToggle _button
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::UIToggle* button;
    // Field size check
    static_assert(sizeof(::VROSC::UIToggle*) == 0x8);
    // private VROSC.PaginatedListDataHolder <DataHolder>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::PaginatedListDataHolder* DataHolder;
    // Field size check
    static_assert(sizeof(::VROSC::PaginatedListDataHolder*) == 0x8);
    // protected VROSC.PaginatedList _paginatedList
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::PaginatedList* paginatedList;
    // Field size check
    static_assert(sizeof(::VROSC::PaginatedList*) == 0x8);
    // protected System.Boolean _selected
    // Size: 0x1
    // Offset: 0x30
    bool selected;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: selected and: OnItemSelected
    char __padding3[0x7] = {};
    // public System.Action`1<VROSC.PaginatedListDataHolder> OnItemSelected
    // Size: 0x8
    // Offset: 0x38
    ::System::Action_1<::VROSC::PaginatedListDataHolder*>* OnItemSelected;
    // Field size check
    static_assert(sizeof(::System::Action_1<::VROSC::PaginatedListDataHolder*>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: protected VROSC.UIToggle _button
    [[deprecated("Use field access instead!")]] ::VROSC::UIToggle*& dyn__button();
    // Get instance field reference: private VROSC.PaginatedListDataHolder <DataHolder>k__BackingField
    [[deprecated("Use field access instead!")]] ::VROSC::PaginatedListDataHolder*& dyn_$DataHolder$k__BackingField();
    // Get instance field reference: protected VROSC.PaginatedList _paginatedList
    [[deprecated("Use field access instead!")]] ::VROSC::PaginatedList*& dyn__paginatedList();
    // Get instance field reference: protected System.Boolean _selected
    [[deprecated("Use field access instead!")]] bool& dyn__selected();
    // Get instance field reference: public System.Action`1<VROSC.PaginatedListDataHolder> OnItemSelected
    [[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::PaginatedListDataHolder*>*& dyn_OnItemSelected();
    // public VROSC.PaginatedListDataHolder get_DataHolder()
    // Offset: 0xADC590
    ::VROSC::PaginatedListDataHolder* get_DataHolder();
    // private System.Void set_DataHolder(VROSC.PaginatedListDataHolder value)
    // Offset: 0xADC588
    void set_DataHolder(::VROSC::PaginatedListDataHolder* value);
    // protected System.Void .ctor()
    // Offset: 0xADC7BC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PaginatedListItemUI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PaginatedListItemUI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PaginatedListItemUI*, creationType>()));
    }
    // private System.Void Awake()
    // Offset: 0xADC598
    void Awake();
    // private System.Void OnDestroy()
    // Offset: 0xADC65C
    void OnDestroy();
    // public System.Void Setup(VROSC.PaginatedList paginatedList)
    // Offset: 0xADC720
    void Setup(::VROSC::PaginatedList* paginatedList);
    // public System.Void SetNewData(VROSC.PaginatedListDataHolder dataholder)
    // Offset: 0xADC728
    void SetNewData(::VROSC::PaginatedListDataHolder* dataholder);
    // public System.Void SetActive(System.Boolean active)
    // Offset: 0xADC398
    void SetActive(bool active);
    // protected System.Void SetSelected(VROSC.InputDevice inputDevice, System.Boolean shouldBeSelected)
    // Offset: 0xADC730
    void SetSelected(::VROSC::InputDevice* inputDevice, bool shouldBeSelected);
    // public System.Void SetIsSelected(System.Boolean selected)
    // Offset: 0xADC054
    void SetIsSelected(bool selected);
  }; // VROSC.PaginatedListItemUI
  #pragma pack(pop)
  static check_size<sizeof(PaginatedListItemUI), 56 + sizeof(::System::Action_1<::VROSC::PaginatedListDataHolder*>*)> __VROSC_PaginatedListItemUISizeCheck;
  static_assert(sizeof(PaginatedListItemUI) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::PaginatedListItemUI::get_DataHolder
// Il2CppName: get_DataHolder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::PaginatedListDataHolder* (VROSC::PaginatedListItemUI::*)()>(&VROSC::PaginatedListItemUI::get_DataHolder)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::PaginatedListItemUI*), "get_DataHolder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::PaginatedListItemUI::set_DataHolder
// Il2CppName: set_DataHolder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PaginatedListItemUI::*)(::VROSC::PaginatedListDataHolder*)>(&VROSC::PaginatedListItemUI::set_DataHolder)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("VROSC", "PaginatedListDataHolder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::PaginatedListItemUI*), "set_DataHolder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::PaginatedListItemUI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::PaginatedListItemUI::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PaginatedListItemUI::*)()>(&VROSC::PaginatedListItemUI::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::PaginatedListItemUI*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::PaginatedListItemUI::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PaginatedListItemUI::*)()>(&VROSC::PaginatedListItemUI::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::PaginatedListItemUI*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::PaginatedListItemUI::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PaginatedListItemUI::*)(::VROSC::PaginatedList*)>(&VROSC::PaginatedListItemUI::Setup)> {
  static const MethodInfo* get() {
    static auto* paginatedList = &::il2cpp_utils::GetClassFromName("VROSC", "PaginatedList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::PaginatedListItemUI*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paginatedList});
  }
};
// Writing MetadataGetter for method: VROSC::PaginatedListItemUI::SetNewData
// Il2CppName: SetNewData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PaginatedListItemUI::*)(::VROSC::PaginatedListDataHolder*)>(&VROSC::PaginatedListItemUI::SetNewData)> {
  static const MethodInfo* get() {
    static auto* dataholder = &::il2cpp_utils::GetClassFromName("VROSC", "PaginatedListDataHolder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::PaginatedListItemUI*), "SetNewData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dataholder});
  }
};
// Writing MetadataGetter for method: VROSC::PaginatedListItemUI::SetActive
// Il2CppName: SetActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PaginatedListItemUI::*)(bool)>(&VROSC::PaginatedListItemUI::SetActive)> {
  static const MethodInfo* get() {
    static auto* active = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::PaginatedListItemUI*), "SetActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{active});
  }
};
// Writing MetadataGetter for method: VROSC::PaginatedListItemUI::SetSelected
// Il2CppName: SetSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PaginatedListItemUI::*)(::VROSC::InputDevice*, bool)>(&VROSC::PaginatedListItemUI::SetSelected)> {
  static const MethodInfo* get() {
    static auto* inputDevice = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* shouldBeSelected = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::PaginatedListItemUI*), "SetSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputDevice, shouldBeSelected});
  }
};
// Writing MetadataGetter for method: VROSC::PaginatedListItemUI::SetIsSelected
// Il2CppName: SetIsSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PaginatedListItemUI::*)(bool)>(&VROSC::PaginatedListItemUI::SetIsSelected)> {
  static const MethodInfo* get() {
    static auto* selected = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::PaginatedListItemUI*), "SetIsSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selected});
  }
};
