// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: UIToggle
  class UIToggle;
  // Forward declaring type: TooltipData
  class TooltipData;
  // Forward declaring type: InputDevice
  class InputDevice;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: ActivateObjectOnToggle
  class ActivateObjectOnToggle;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::ActivateObjectOnToggle);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::ActivateObjectOnToggle*, "VROSC", "ActivateObjectOnToggle");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.ActivateObjectOnToggle
  // [TokenAttribute] Offset: FFFFFFFF
  class ActivateObjectOnToggle : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private VROSC.UIToggle _toggle
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::UIToggle* toggle;
    // Field size check
    static_assert(sizeof(::VROSC::UIToggle*) == 0x8);
    // private VROSC.TooltipData _tooltip
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::TooltipData* tooltip;
    // Field size check
    static_assert(sizeof(::VROSC::TooltipData*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.UIToggle _toggle
    [[deprecated("Use field access instead!")]] ::VROSC::UIToggle*& dyn__toggle();
    // Get instance field reference: private VROSC.TooltipData _tooltip
    [[deprecated("Use field access instead!")]] ::VROSC::TooltipData*& dyn__tooltip();
    // public System.Void .ctor()
    // Offset: 0x965578
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ActivateObjectOnToggle* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ActivateObjectOnToggle::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ActivateObjectOnToggle*, creationType>()));
    }
    // private System.Void Awake()
    // Offset: 0x965388
    void Awake();
    // private System.Void Start()
    // Offset: 0x965528
    void Start();
    // public System.Void SetActive(VROSC.InputDevice device, System.Boolean shouldBeOn)
    // Offset: 0x965544
    void SetActive(::VROSC::InputDevice* device, bool shouldBeOn);
  }; // VROSC.ActivateObjectOnToggle
  #pragma pack(pop)
  static check_size<sizeof(ActivateObjectOnToggle), 32 + sizeof(::VROSC::TooltipData*)> __VROSC_ActivateObjectOnToggleSizeCheck;
  static_assert(sizeof(ActivateObjectOnToggle) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::ActivateObjectOnToggle::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::ActivateObjectOnToggle::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ActivateObjectOnToggle::*)()>(&VROSC::ActivateObjectOnToggle::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::ActivateObjectOnToggle*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::ActivateObjectOnToggle::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ActivateObjectOnToggle::*)()>(&VROSC::ActivateObjectOnToggle::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::ActivateObjectOnToggle*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::ActivateObjectOnToggle::SetActive
// Il2CppName: SetActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::ActivateObjectOnToggle::*)(::VROSC::InputDevice*, bool)>(&VROSC::ActivateObjectOnToggle::SetActive)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* shouldBeOn = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::ActivateObjectOnToggle*), "SetActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, shouldBeOn});
  }
};
