// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: EnvironmentData
  class EnvironmentData;
  // Forward declaring type: Environment
  class Environment;
  // Forward declaring type: UserDataControllers
  class UserDataControllers;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AnimationCurve
  class AnimationCurve;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: UnityEngine::SceneManagement
namespace UnityEngine::SceneManagement {
  // Forward declaring type: Scene
  struct Scene;
  // Forward declaring type: LoadSceneMode
  struct LoadSceneMode;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: EnvironmentController
  class EnvironmentController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::EnvironmentController);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::EnvironmentController*, "VROSC", "EnvironmentController");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x51
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.EnvironmentController
  // [TokenAttribute] Offset: FFFFFFFF
  class EnvironmentController : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27
    class $FadeToOtherEnvironment$d__27;
    public:
    // private VROSC.EnvironmentData _startEnvironment
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::EnvironmentData* startEnvironment;
    // Field size check
    static_assert(sizeof(::VROSC::EnvironmentData*) == 0x8);
    // private UnityEngine.AnimationCurve _screenFadeCurve
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::AnimationCurve* screenFadeCurve;
    // Field size check
    static_assert(sizeof(::UnityEngine::AnimationCurve*) == 0x8);
    // private System.Single _screenFadeTime
    // Size: 0x4
    // Offset: 0x28
    float screenFadeTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: screenFadeTime and: scenes
    char __padding2[0x4] = {};
    // private System.Collections.Generic.List`1<System.String> _scenes
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::List_1<::StringW>* scenes;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // private VROSC.Environment <CurrentEnvironment>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::VROSC::Environment* CurrentEnvironment;
    // Field size check
    static_assert(sizeof(::VROSC::Environment*) == 0x8);
    // private System.Single <EffectsAmount>k__BackingField
    // Size: 0x4
    // Offset: 0x40
    float EffectsAmount;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: EffectsAmount and: environments
    char __padding5[0x4] = {};
    // private System.Collections.Generic.List`1<VROSC.Environment> _environments
    // Size: 0x8
    // Offset: 0x48
    ::System::Collections::Generic::List_1<::VROSC::Environment*>* environments;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::VROSC::Environment*>*) == 0x8);
    // private System.Boolean <ScenesLoaded>k__BackingField
    // Size: 0x1
    // Offset: 0x50
    bool ScenesLoaded;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get static field: static public System.Action`1<VROSC.Environment> OnNewEnvironment
    static ::System::Action_1<::VROSC::Environment*>* _get_OnNewEnvironment();
    // Set static field: static public System.Action`1<VROSC.Environment> OnNewEnvironment
    static void _set_OnNewEnvironment(::System::Action_1<::VROSC::Environment*>* value);
    // Get instance field reference: private VROSC.EnvironmentData _startEnvironment
    [[deprecated]] ::VROSC::EnvironmentData*& dyn__startEnvironment();
    // Get instance field reference: private UnityEngine.AnimationCurve _screenFadeCurve
    [[deprecated]] ::UnityEngine::AnimationCurve*& dyn__screenFadeCurve();
    // Get instance field reference: private System.Single _screenFadeTime
    [[deprecated]] float& dyn__screenFadeTime();
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> _scenes
    [[deprecated]] ::System::Collections::Generic::List_1<::StringW>*& dyn__scenes();
    // Get instance field reference: private VROSC.Environment <CurrentEnvironment>k__BackingField
    [[deprecated]] ::VROSC::Environment*& dyn_$CurrentEnvironment$k__BackingField();
    // Get instance field reference: private System.Single <EffectsAmount>k__BackingField
    [[deprecated]] float& dyn_$EffectsAmount$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.List`1<VROSC.Environment> _environments
    [[deprecated]] ::System::Collections::Generic::List_1<::VROSC::Environment*>*& dyn__environments();
    // Get instance field reference: private System.Boolean <ScenesLoaded>k__BackingField
    [[deprecated]] bool& dyn_$ScenesLoaded$k__BackingField();
    // public VROSC.EnvironmentData get_StartEnvironment()
    // Offset: 0x8ED934
    ::VROSC::EnvironmentData* get_StartEnvironment();
    // public VROSC.Environment get_CurrentEnvironment()
    // Offset: 0x8ED944
    ::VROSC::Environment* get_CurrentEnvironment();
    // private System.Void set_CurrentEnvironment(VROSC.Environment value)
    // Offset: 0x8ED93C
    void set_CurrentEnvironment(::VROSC::Environment* value);
    // public System.Single get_EffectsAmount()
    // Offset: 0x8ED954
    float get_EffectsAmount();
    // private System.Void set_EffectsAmount(System.Single value)
    // Offset: 0x8ED94C
    void set_EffectsAmount(float value);
    // public System.Boolean get_ScenesLoaded()
    // Offset: 0x8ED95C
    bool get_ScenesLoaded();
    // private System.Void set_ScenesLoaded(System.Boolean value)
    // Offset: 0x8ED964
    void set_ScenesLoaded(bool value);
    // private System.Void Awake()
    // Offset: 0x8ED970
    void Awake();
    // private System.Void OnDestroy()
    // Offset: 0x8EDB50
    void OnDestroy();
    // private System.Void OnApplicationQuit()
    // Offset: 0x8EDCA4
    void OnApplicationQuit();
    // public System.Void LoadScenes()
    // Offset: 0x8EDD70
    void LoadScenes();
    // private System.Void SceneLoaded(UnityEngine.SceneManagement.Scene scene, UnityEngine.SceneManagement.LoadSceneMode mode)
    // Offset: 0x8EDF14
    void SceneLoaded(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::LoadSceneMode mode);
    // public System.Void SetEnvironment(VROSC.EnvironmentData environmentData, System.Boolean animate)
    // Offset: 0x8EE36C
    void SetEnvironment(::VROSC::EnvironmentData* environmentData, bool animate);
    // private System.Void SetEnvironment(VROSC.Environment environment)
    // Offset: 0x8EE2C4
    void SetEnvironment(::VROSC::Environment* environment);
    // private System.Collections.IEnumerator FadeToOtherEnvironment(VROSC.Environment environment)
    // Offset: 0x8EE564
    ::System::Collections::IEnumerator* FadeToOtherEnvironment(::VROSC::Environment* environment);
    // private System.Void ActivateEnvironment(VROSC.Environment environment)
    // Offset: 0x8EE674
    void ActivateEnvironment(::VROSC::Environment* environment);
    // private System.Void HideCurrentEnvironment()
    // Offset: 0x8EE5DC
    void HideCurrentEnvironment();
    // public System.Void SetEnvironmentEffectsInput(System.Single effectsAmount)
    // Offset: 0x8EE364
    void SetEnvironmentEffectsInput(float effectsAmount);
    // public VROSC.Environment GetEnvironment(System.String environmentId)
    // Offset: 0x8EE15C
    ::VROSC::Environment* GetEnvironment(::StringW environmentId);
    // private System.Void UserDataLoaded(VROSC.UserDataControllers userDataControllers)
    // Offset: 0x8EE850
    void UserDataLoaded(::VROSC::UserDataControllers* userDataControllers);
    // private System.Void SessionDataLoaded(VROSC.UserDataControllers userDataControllers)
    // Offset: 0x8EE960
    void SessionDataLoaded(::VROSC::UserDataControllers* userDataControllers);
    // public System.Void .ctor()
    // Offset: 0x8EEA54
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EnvironmentController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EnvironmentController*, creationType>()));
    }
  }; // VROSC.EnvironmentController
  #pragma pack(pop)
  static check_size<sizeof(EnvironmentController), 80 + sizeof(bool)> __VROSC_EnvironmentControllerSizeCheck;
  static_assert(sizeof(EnvironmentController) == 0x51);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::EnvironmentController::get_StartEnvironment
// Il2CppName: get_StartEnvironment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::EnvironmentData* (VROSC::EnvironmentController::*)()>(&VROSC::EnvironmentController::get_StartEnvironment)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "get_StartEnvironment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::get_CurrentEnvironment
// Il2CppName: get_CurrentEnvironment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::Environment* (VROSC::EnvironmentController::*)()>(&VROSC::EnvironmentController::get_CurrentEnvironment)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "get_CurrentEnvironment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::set_CurrentEnvironment
// Il2CppName: set_CurrentEnvironment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EnvironmentController::*)(::VROSC::Environment*)>(&VROSC::EnvironmentController::set_CurrentEnvironment)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("VROSC", "Environment")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "set_CurrentEnvironment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::get_EffectsAmount
// Il2CppName: get_EffectsAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (VROSC::EnvironmentController::*)()>(&VROSC::EnvironmentController::get_EffectsAmount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "get_EffectsAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::set_EffectsAmount
// Il2CppName: set_EffectsAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EnvironmentController::*)(float)>(&VROSC::EnvironmentController::set_EffectsAmount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "set_EffectsAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::get_ScenesLoaded
// Il2CppName: get_ScenesLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::EnvironmentController::*)()>(&VROSC::EnvironmentController::get_ScenesLoaded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "get_ScenesLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::set_ScenesLoaded
// Il2CppName: set_ScenesLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EnvironmentController::*)(bool)>(&VROSC::EnvironmentController::set_ScenesLoaded)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "set_ScenesLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EnvironmentController::*)()>(&VROSC::EnvironmentController::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EnvironmentController::*)()>(&VROSC::EnvironmentController::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::OnApplicationQuit
// Il2CppName: OnApplicationQuit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EnvironmentController::*)()>(&VROSC::EnvironmentController::OnApplicationQuit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "OnApplicationQuit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::LoadScenes
// Il2CppName: LoadScenes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EnvironmentController::*)()>(&VROSC::EnvironmentController::LoadScenes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "LoadScenes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::SceneLoaded
// Il2CppName: SceneLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EnvironmentController::*)(::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::LoadSceneMode)>(&VROSC::EnvironmentController::SceneLoaded)> {
  static const MethodInfo* get() {
    static auto* scene = &::il2cpp_utils::GetClassFromName("UnityEngine.SceneManagement", "Scene")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("UnityEngine.SceneManagement", "LoadSceneMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "SceneLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scene, mode});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::SetEnvironment
// Il2CppName: SetEnvironment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EnvironmentController::*)(::VROSC::EnvironmentData*, bool)>(&VROSC::EnvironmentController::SetEnvironment)> {
  static const MethodInfo* get() {
    static auto* environmentData = &::il2cpp_utils::GetClassFromName("VROSC", "EnvironmentData")->byval_arg;
    static auto* animate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "SetEnvironment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{environmentData, animate});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::SetEnvironment
// Il2CppName: SetEnvironment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EnvironmentController::*)(::VROSC::Environment*)>(&VROSC::EnvironmentController::SetEnvironment)> {
  static const MethodInfo* get() {
    static auto* environment = &::il2cpp_utils::GetClassFromName("VROSC", "Environment")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "SetEnvironment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{environment});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::FadeToOtherEnvironment
// Il2CppName: FadeToOtherEnvironment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (VROSC::EnvironmentController::*)(::VROSC::Environment*)>(&VROSC::EnvironmentController::FadeToOtherEnvironment)> {
  static const MethodInfo* get() {
    static auto* environment = &::il2cpp_utils::GetClassFromName("VROSC", "Environment")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "FadeToOtherEnvironment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{environment});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::ActivateEnvironment
// Il2CppName: ActivateEnvironment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EnvironmentController::*)(::VROSC::Environment*)>(&VROSC::EnvironmentController::ActivateEnvironment)> {
  static const MethodInfo* get() {
    static auto* environment = &::il2cpp_utils::GetClassFromName("VROSC", "Environment")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "ActivateEnvironment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{environment});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::HideCurrentEnvironment
// Il2CppName: HideCurrentEnvironment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EnvironmentController::*)()>(&VROSC::EnvironmentController::HideCurrentEnvironment)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "HideCurrentEnvironment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::SetEnvironmentEffectsInput
// Il2CppName: SetEnvironmentEffectsInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EnvironmentController::*)(float)>(&VROSC::EnvironmentController::SetEnvironmentEffectsInput)> {
  static const MethodInfo* get() {
    static auto* effectsAmount = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "SetEnvironmentEffectsInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{effectsAmount});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::GetEnvironment
// Il2CppName: GetEnvironment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::Environment* (VROSC::EnvironmentController::*)(::StringW)>(&VROSC::EnvironmentController::GetEnvironment)> {
  static const MethodInfo* get() {
    static auto* environmentId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "GetEnvironment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{environmentId});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::UserDataLoaded
// Il2CppName: UserDataLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EnvironmentController::*)(::VROSC::UserDataControllers*)>(&VROSC::EnvironmentController::UserDataLoaded)> {
  static const MethodInfo* get() {
    static auto* userDataControllers = &::il2cpp_utils::GetClassFromName("VROSC", "UserDataControllers")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "UserDataLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userDataControllers});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::SessionDataLoaded
// Il2CppName: SessionDataLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EnvironmentController::*)(::VROSC::UserDataControllers*)>(&VROSC::EnvironmentController::SessionDataLoaded)> {
  static const MethodInfo* get() {
    static auto* userDataControllers = &::il2cpp_utils::GetClassFromName("VROSC", "UserDataControllers")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentController*), "SessionDataLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userDataControllers});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
