// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.SessionsDataModel
#include "VROSC/SessionsDataModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: Session
  class Session;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: CommunitySessionsDataModel
  class CommunitySessionsDataModel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::CommunitySessionsDataModel);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::CommunitySessionsDataModel*, "VROSC", "CommunitySessionsDataModel");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.CommunitySessionsDataModel
  // [TokenAttribute] Offset: FFFFFFFF
  class CommunitySessionsDataModel : public ::VROSC::SessionsDataModel {
    public:
    public:
    // public System.Collections.Generic.Dictionary`2<System.String,VROSC.Session> FavoriteSessions
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::Dictionary_2<::StringW, ::VROSC::Session*>* FavoriteSessions;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::VROSC::Session*>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Collections::Generic::Dictionary_2<::StringW, ::VROSC::Session*>*
    constexpr operator ::System::Collections::Generic::Dictionary_2<::StringW, ::VROSC::Session*>*() const noexcept {
      return FavoriteSessions;
    }
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,VROSC.Session> FavoriteSessions
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::VROSC::Session*>*& dyn_FavoriteSessions();
    // public override System.String get_Key()
    // Offset: 0x94B930
    // Implemented from: VROSC.BaseDataModel
    // Base method: System.String BaseDataModel::get_Key()
    ::StringW get_Key();
    // public System.Void .ctor()
    // Offset: 0x9498C4
    // Implemented from: VROSC.SessionsDataModel
    // Base method: System.Void SessionsDataModel::.ctor()
    // Base method: System.Void BaseDataModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CommunitySessionsDataModel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CommunitySessionsDataModel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CommunitySessionsDataModel*, creationType>()));
    }
  }; // VROSC.CommunitySessionsDataModel
  #pragma pack(pop)
  static check_size<sizeof(CommunitySessionsDataModel), 40 + sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::VROSC::Session*>*)> __VROSC_CommunitySessionsDataModelSizeCheck;
  static_assert(sizeof(CommunitySessionsDataModel) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataModel::get_Key
// Il2CppName: get_Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::CommunitySessionsDataModel::*)()>(&VROSC::CommunitySessionsDataModel::get_Key)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::CommunitySessionsDataModel*), "get_Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::CommunitySessionsDataModel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
