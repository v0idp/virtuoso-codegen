// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.SynthsDataController/VROSC.<>c__DisplayClass6_0
#include "VROSC/SynthsDataController_--c__DisplayClass6_0.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Runtime.CompilerServices.IAsyncStateMachine
#include "System/Runtime/CompilerServices/IAsyncStateMachine.hpp"
// Including type: System.Runtime.CompilerServices.AsyncVoidMethodBuilder
#include "System/Runtime/CompilerServices/AsyncVoidMethodBuilder.hpp"
// Including type: VROSC.SynthsDataController
#include "VROSC/SynthsDataController.hpp"
// Including type: System.Collections.Generic.List`1/System.Collections.Generic.Enumerator
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Runtime.CompilerServices.TaskAwaiter
#include "System/Runtime/CompilerServices/TaskAwaiter.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: SynthData
  class SynthData;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::VROSC::SynthsDataController::$$c__DisplayClass6_0::$$LoadData$b__0$d, "VROSC", "SynthsDataController/<>c__DisplayClass6_0/<<LoadData>b__0>d");
// Type namespace: VROSC
namespace VROSC {
  // WARNING Size may be invalid!
  // Autogenerated type: VROSC.SynthsDataController/VROSC.<>c__DisplayClass6_0/VROSC.<<LoadData>b__0>d
  // [TokenAttribute] Offset: FFFFFFFF
  struct SynthsDataController::$$c__DisplayClass6_0::$$LoadData$b__0$d/*, public ::System::ValueType, public ::System::Runtime::CompilerServices::IAsyncStateMachine*/ {
    public:
    public:
    // public System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x0
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
    // Size: 0x20
    // Offset: 0x8
    ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder $$t__builder;
    // Field size check
    static_assert(sizeof(::System::Runtime::CompilerServices::AsyncVoidMethodBuilder) == 0x20);
    // public VROSC.SynthsDataController/VROSC.<>c__DisplayClass6_0 <>4__this
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::SynthsDataController::$$c__DisplayClass6_0* $$4__this;
    // Field size check
    static_assert(sizeof(::VROSC::SynthsDataController::$$c__DisplayClass6_0*) == 0x8);
    // public System.String data
    // Size: 0x8
    // Offset: 0x30
    ::StringW data;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private VROSC.SynthsDataController/VROSC.<>c__DisplayClass6_1 <>8__1
    // Size: 0x8
    // Offset: 0x38
    ::VROSC::SynthsDataController::$$c__DisplayClass6_1* $$8__1;
    // Field size check
    static_assert(sizeof(::VROSC::SynthsDataController::$$c__DisplayClass6_1*) == 0x8);
    // private VROSC.SynthsDataController/VROSC.<>c__DisplayClass6_2 <>8__2
    // Size: 0x8
    // Offset: 0x40
    ::VROSC::SynthsDataController::$$c__DisplayClass6_2* $$8__2;
    // Field size check
    static_assert(sizeof(::VROSC::SynthsDataController::$$c__DisplayClass6_2*) == 0x8);
    // private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<VROSC.SynthData> <>7__wrap1
    // Size: 0xFFFFFFFF
    // Offset: 0x48
    typename ::System::Collections::Generic::List_1<::VROSC::SynthData*>::Enumerator $$7__wrap1;
    // private System.Int32 <i>5__3
    // Size: 0x4
    // Offset: 0x60
    int $i$5__3;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Runtime.CompilerServices.TaskAwaiter <>u__1
    // Size: 0x8
    // Offset: 0x68
    ::System::Runtime::CompilerServices::TaskAwaiter $$u__1;
    // Field size check
    static_assert(sizeof(::System::Runtime::CompilerServices::TaskAwaiter) == 0x8);
    public:
    // Creating value type constructor for type: $$LoadData$b__0$d
    constexpr $$LoadData$b__0$d(int $$1__state_ = {}, ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder $$t__builder_ = {}, ::VROSC::SynthsDataController::$$c__DisplayClass6_0* $$4__this_ = {}, ::StringW data_ = {}, ::VROSC::SynthsDataController::$$c__DisplayClass6_1* $$8__1_ = {}, ::VROSC::SynthsDataController::$$c__DisplayClass6_2* $$8__2_ = {}, typename ::System::Collections::Generic::List_1<::VROSC::SynthData*>::Enumerator $$7__wrap1_ = {}, int $i$5__3_ = {}, ::System::Runtime::CompilerServices::TaskAwaiter $$u__1_ = {}) noexcept : $$1__state{$$1__state_}, $$t__builder{$$t__builder_}, $$4__this{$$4__this_}, data{data_}, $$8__1{$$8__1_}, $$8__2{$$8__2_}, $$7__wrap1{$$7__wrap1_}, $i$5__3{$i$5__3_}, $$u__1{$$u__1_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::Runtime::CompilerServices::IAsyncStateMachine
    operator ::System::Runtime::CompilerServices::IAsyncStateMachine() noexcept {
      return *reinterpret_cast<::System::Runtime::CompilerServices::IAsyncStateMachine*>(this);
    }
    // Get instance field reference: public System.Int32 <>1__state
    [[deprecated("Use field access instead!")]] int& dyn_$$1__state();
    // Get instance field reference: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
    [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& dyn_$$t__builder();
    // Get instance field reference: public VROSC.SynthsDataController/VROSC.<>c__DisplayClass6_0 <>4__this
    [[deprecated("Use field access instead!")]] ::VROSC::SynthsDataController::$$c__DisplayClass6_0*& dyn_$$4__this();
    // Get instance field reference: public System.String data
    [[deprecated("Use field access instead!")]] ::StringW& dyn_data();
    // Get instance field reference: private VROSC.SynthsDataController/VROSC.<>c__DisplayClass6_1 <>8__1
    [[deprecated("Use field access instead!")]] ::VROSC::SynthsDataController::$$c__DisplayClass6_1*& dyn_$$8__1();
    // Get instance field reference: private VROSC.SynthsDataController/VROSC.<>c__DisplayClass6_2 <>8__2
    [[deprecated("Use field access instead!")]] ::VROSC::SynthsDataController::$$c__DisplayClass6_2*& dyn_$$8__2();
    // Get instance field reference: private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<VROSC.SynthData> <>7__wrap1
    [[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::List_1<::VROSC::SynthData*>::Enumerator& dyn_$$7__wrap1();
    // Get instance field reference: private System.Int32 <i>5__3
    [[deprecated("Use field access instead!")]] int& dyn_$i$5__3();
    // Get instance field reference: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
    [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& dyn_$$u__1();
    // private System.Void MoveNext()
    // Offset: 0xE8C2E4
    void MoveNext();
    // private System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)
    // Offset: 0xE8CA2C
    void SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine);
  }; // VROSC.SynthsDataController/VROSC.<>c__DisplayClass6_0/VROSC.<<LoadData>b__0>d
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::SynthsDataController::$$c__DisplayClass6_0::$$LoadData$b__0$d::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::$$c__DisplayClass6_0::$$LoadData$b__0$d::*)()>(&VROSC::SynthsDataController::$$c__DisplayClass6_0::$$LoadData$b__0$d::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController::$$c__DisplayClass6_0::$$LoadData$b__0$d), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::$$c__DisplayClass6_0::$$LoadData$b__0$d::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::$$c__DisplayClass6_0::$$LoadData$b__0$d::*)(::System::Runtime::CompilerServices::IAsyncStateMachine*)>(&VROSC::SynthsDataController::$$c__DisplayClass6_0::$$LoadData$b__0$d::SetStateMachine)> {
  static const MethodInfo* get() {
    static auto* stateMachine = &::il2cpp_utils::GetClassFromName("System.Runtime.CompilerServices", "IAsyncStateMachine")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController::$$c__DisplayClass6_0::$$LoadData$b__0$d), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateMachine});
  }
};
