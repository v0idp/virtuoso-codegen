// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.ToolDataModel
#include "VROSC/ToolDataModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: MicrophoneDataModel
  class MicrophoneDataModel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::MicrophoneDataModel);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::MicrophoneDataModel*, "VROSC", "MicrophoneDataModel");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x49
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.MicrophoneDataModel
  // [TokenAttribute] Offset: FFFFFFFF
  class MicrophoneDataModel : public ::VROSC::ToolDataModel {
    public:
    public:
    // public System.Boolean MicrophoneIsAttached
    // Size: 0x1
    // Offset: 0x21
    bool MicrophoneIsAttached;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: MicrophoneIsAttached and: MicrophonePosition
    char __padding0[0x6] = {};
    // public System.Single[] MicrophonePosition
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<float> MicrophonePosition;
    // Field size check
    static_assert(sizeof(::ArrayW<float>) == 0x8);
    // public System.Single[] MicrophoneRotation
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<float> MicrophoneRotation;
    // Field size check
    static_assert(sizeof(::ArrayW<float>) == 0x8);
    // public System.Single[] MicrophoneScale
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<float> MicrophoneScale;
    // Field size check
    static_assert(sizeof(::ArrayW<float>) == 0x8);
    // public System.Single PreampVolume
    // Size: 0x4
    // Offset: 0x40
    float PreampVolume;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single PreampReverb
    // Size: 0x4
    // Offset: 0x44
    float PreampReverb;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Boolean UseProximity
    // Size: 0x1
    // Offset: 0x48
    bool UseProximity;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public System.Boolean MicrophoneIsAttached
    [[deprecated]] bool& dyn_MicrophoneIsAttached();
    // Get instance field reference: public System.Single[] MicrophonePosition
    [[deprecated]] ::ArrayW<float>& dyn_MicrophonePosition();
    // Get instance field reference: public System.Single[] MicrophoneRotation
    [[deprecated]] ::ArrayW<float>& dyn_MicrophoneRotation();
    // Get instance field reference: public System.Single[] MicrophoneScale
    [[deprecated]] ::ArrayW<float>& dyn_MicrophoneScale();
    // Get instance field reference: public System.Single PreampVolume
    [[deprecated]] float& dyn_PreampVolume();
    // Get instance field reference: public System.Single PreampReverb
    [[deprecated]] float& dyn_PreampReverb();
    // Get instance field reference: public System.Boolean UseProximity
    [[deprecated]] bool& dyn_UseProximity();
    // public override System.String get_Key()
    // Offset: 0xAC637C
    // Implemented from: VROSC.BaseDataModel
    // Base method: System.String BaseDataModel::get_Key()
    ::StringW get_Key();
    // public override System.Int32 get_Version()
    // Offset: 0xAC63C0
    // Implemented from: VROSC.BaseDataModel
    // Base method: System.Int32 BaseDataModel::get_Version()
    int get_Version();
    // public System.Void .ctor()
    // Offset: 0xAC6088
    // Implemented from: VROSC.ToolDataModel
    // Base method: System.Void ToolDataModel::.ctor()
    // Base method: System.Void BaseDataModel::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MicrophoneDataModel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneDataModel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MicrophoneDataModel*, creationType>()));
    }
  }; // VROSC.MicrophoneDataModel
  #pragma pack(pop)
  static check_size<sizeof(MicrophoneDataModel), 72 + sizeof(bool)> __VROSC_MicrophoneDataModelSizeCheck;
  static_assert(sizeof(MicrophoneDataModel) == 0x49);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::MicrophoneDataModel::get_Key
// Il2CppName: get_Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::MicrophoneDataModel::*)()>(&VROSC::MicrophoneDataModel::get_Key)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::MicrophoneDataModel*), "get_Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::MicrophoneDataModel::get_Version
// Il2CppName: get_Version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::MicrophoneDataModel::*)()>(&VROSC::MicrophoneDataModel::get_Version)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::MicrophoneDataModel*), "get_Version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::MicrophoneDataModel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
