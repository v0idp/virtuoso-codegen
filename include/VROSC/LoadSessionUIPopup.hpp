// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: UIButton
  class UIButton;
  // Forward declaring type: Error
  struct Error;
}
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshPro
  class TextMeshPro;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: LoadSessionUIPopup
  class LoadSessionUIPopup;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::LoadSessionUIPopup);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::LoadSessionUIPopup*, "VROSC", "LoadSessionUIPopup");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.LoadSessionUIPopup
  // [TokenAttribute] Offset: FFFFFFFF
  class LoadSessionUIPopup : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private VROSC.UIButton _closeButton
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::UIButton* closeButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIButton*) == 0x8);
    // private TMPro.TextMeshPro _loadingStateText
    // Size: 0x8
    // Offset: 0x20
    ::TMPro::TextMeshPro* loadingStateText;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshPro*) == 0x8);
    // public System.Action OnClose
    // Size: 0x8
    // Offset: 0x28
    ::System::Action* OnClose;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.UIButton _closeButton
    [[deprecated]] ::VROSC::UIButton*& dyn__closeButton();
    // Get instance field reference: private TMPro.TextMeshPro _loadingStateText
    [[deprecated]] ::TMPro::TextMeshPro*& dyn__loadingStateText();
    // Get instance field reference: public System.Action OnClose
    [[deprecated]] ::System::Action*& dyn_OnClose();
    // private System.Void Awake()
    // Offset: 0x19512E0
    void Awake();
    // private System.Void OnDestroy()
    // Offset: 0x19513A0
    void OnDestroy();
    // public System.Void SetActive(System.Boolean isActive)
    // Offset: 0x1951460
    void SetActive(bool isActive);
    // public System.Void UpdateLoadingState(VROSC.Error error)
    // Offset: 0x195151C
    void UpdateLoadingState(::VROSC::Error error);
    // public System.Void UpdateLoadingState(System.Single progress)
    // Offset: 0x19515F8
    void UpdateLoadingState(float progress);
    // public System.Void UpdateDownloadingState(System.Single progress)
    // Offset: 0x195172C
    void UpdateDownloadingState(float progress);
    // private System.Int32 GetProgressPercent(System.Single progress)
    // Offset: 0x19516E0
    int GetProgressPercent(float progress);
    // private System.Void Close()
    // Offset: 0x1951814
    void Close();
    // public System.Void .ctor()
    // Offset: 0x1951850
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoadSessionUIPopup* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoadSessionUIPopup::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoadSessionUIPopup*, creationType>()));
    }
  }; // VROSC.LoadSessionUIPopup
  #pragma pack(pop)
  static check_size<sizeof(LoadSessionUIPopup), 40 + sizeof(::System::Action*)> __VROSC_LoadSessionUIPopupSizeCheck;
  static_assert(sizeof(LoadSessionUIPopup) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::LoadSessionUIPopup::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoadSessionUIPopup::*)()>(&VROSC::LoadSessionUIPopup::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoadSessionUIPopup*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoadSessionUIPopup::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoadSessionUIPopup::*)()>(&VROSC::LoadSessionUIPopup::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoadSessionUIPopup*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoadSessionUIPopup::SetActive
// Il2CppName: SetActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoadSessionUIPopup::*)(bool)>(&VROSC::LoadSessionUIPopup::SetActive)> {
  static const MethodInfo* get() {
    static auto* isActive = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoadSessionUIPopup*), "SetActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isActive});
  }
};
// Writing MetadataGetter for method: VROSC::LoadSessionUIPopup::UpdateLoadingState
// Il2CppName: UpdateLoadingState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoadSessionUIPopup::*)(::VROSC::Error)>(&VROSC::LoadSessionUIPopup::UpdateLoadingState)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoadSessionUIPopup*), "UpdateLoadingState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: VROSC::LoadSessionUIPopup::UpdateLoadingState
// Il2CppName: UpdateLoadingState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoadSessionUIPopup::*)(float)>(&VROSC::LoadSessionUIPopup::UpdateLoadingState)> {
  static const MethodInfo* get() {
    static auto* progress = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoadSessionUIPopup*), "UpdateLoadingState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{progress});
  }
};
// Writing MetadataGetter for method: VROSC::LoadSessionUIPopup::UpdateDownloadingState
// Il2CppName: UpdateDownloadingState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoadSessionUIPopup::*)(float)>(&VROSC::LoadSessionUIPopup::UpdateDownloadingState)> {
  static const MethodInfo* get() {
    static auto* progress = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoadSessionUIPopup*), "UpdateDownloadingState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{progress});
  }
};
// Writing MetadataGetter for method: VROSC::LoadSessionUIPopup::GetProgressPercent
// Il2CppName: GetProgressPercent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::LoadSessionUIPopup::*)(float)>(&VROSC::LoadSessionUIPopup::GetProgressPercent)> {
  static const MethodInfo* get() {
    static auto* progress = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoadSessionUIPopup*), "GetProgressPercent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{progress});
  }
};
// Writing MetadataGetter for method: VROSC::LoadSessionUIPopup::Close
// Il2CppName: Close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoadSessionUIPopup::*)()>(&VROSC::LoadSessionUIPopup::Close)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoadSessionUIPopup*), "Close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoadSessionUIPopup::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
