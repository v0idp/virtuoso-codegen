// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.MidiManager
#include "VROSC/MidiManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::MidiManager::$$c__DisplayClass23_0);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::MidiManager::$$c__DisplayClass23_0*, "VROSC", "MidiManager/<>c__DisplayClass23_0");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.MidiManager/VROSC.<>c__DisplayClass23_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class MidiManager::$$c__DisplayClass23_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Object patch
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppObject* patch;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // public System.Int32 channel
    // Size: 0x4
    // Offset: 0x18
    int channel;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public System.Object patch
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_patch();
    // Get instance field reference: public System.Int32 channel
    [[deprecated("Use field access instead!")]] int& dyn_channel();
    // public System.Void .ctor()
    // Offset: 0x1963198
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MidiManager::$$c__DisplayClass23_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiManager::$$c__DisplayClass23_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MidiManager::$$c__DisplayClass23_0*, creationType>()));
    }
    // System.Boolean <IsPlaying>b__0(VROSC.MidiManager/VROSC.ActiveNote a)
    // Offset: 0x19631A0
    bool $IsPlaying$b__0(::VROSC::MidiManager::ActiveNote* a);
  }; // VROSC.MidiManager/VROSC.<>c__DisplayClass23_0
  #pragma pack(pop)
  static check_size<sizeof(MidiManager::$$c__DisplayClass23_0), 24 + sizeof(int)> __VROSC_MidiManager_$$c__DisplayClass23_0SizeCheck;
  static_assert(sizeof(MidiManager::$$c__DisplayClass23_0) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::MidiManager::$$c__DisplayClass23_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::MidiManager::$$c__DisplayClass23_0::$IsPlaying$b__0
// Il2CppName: <IsPlaying>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::MidiManager::$$c__DisplayClass23_0::*)(::VROSC::MidiManager::ActiveNote*)>(&VROSC::MidiManager::$$c__DisplayClass23_0::$IsPlaying$b__0)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("VROSC", "MidiManager/ActiveNote")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::MidiManager::$$c__DisplayClass23_0*), "<IsPlaying>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a});
  }
};
