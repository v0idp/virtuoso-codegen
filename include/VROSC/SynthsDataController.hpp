// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.InstrumentsDataController
#include "VROSC/InstrumentsDataController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: Scale
  struct Scale;
  // Forward declaring type: Note
  struct Note;
  // Forward declaring type: SynthData
  class SynthData;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
  // Skipping declaration: Quaternion because it is already included!
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: SynthsDataController
  class SynthsDataController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::SynthsDataController);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::SynthsDataController*, "VROSC", "SynthsDataController");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.SynthsDataController
  // [TokenAttribute] Offset: FFFFFFFF
  // [ObsoleteAttribute] Offset: 77EB94
  class SynthsDataController : public ::VROSC::InstrumentsDataController {
    public:
    // Nested type: ::VROSC::SynthsDataController::$$c__DisplayClass5_0
    class $$c__DisplayClass5_0;
    // Nested type: ::VROSC::SynthsDataController::$SaveData$d__5
    struct $SaveData$d__5;
    // Nested type: ::VROSC::SynthsDataController::$$c__DisplayClass6_0
    class $$c__DisplayClass6_0;
    // Nested type: ::VROSC::SynthsDataController::$$c__DisplayClass6_1
    class $$c__DisplayClass6_1;
    // Nested type: ::VROSC::SynthsDataController::$$c__DisplayClass6_2
    class $$c__DisplayClass6_2;
    public:
    // private System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<VROSC.InstrumentsDataController/VROSC.PatchSettings>> _instrumentsPatches
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::VROSC::InstrumentsDataController::PatchSettings*>*>* instrumentsPatches;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::VROSC::InstrumentsDataController::PatchSettings*>*>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.String,System.Int32> _selectedPatchesIndexes
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::Dictionary_2<::StringW, int>* selectedPatchesIndexes;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, int>*) == 0x8);
    public:
    // Get static field: static public System.Action`1<VROSC.SynthsDataController> OnDataLoaded
    static ::System::Action_1<::VROSC::SynthsDataController*>* _get_OnDataLoaded();
    // Set static field: static public System.Action`1<VROSC.SynthsDataController> OnDataLoaded
    static void _set_OnDataLoaded(::System::Action_1<::VROSC::SynthsDataController*>* value);
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<VROSC.InstrumentsDataController/VROSC.PatchSettings>> _instrumentsPatches
    [[deprecated]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::VROSC::InstrumentsDataController::PatchSettings*>*>*& dyn__instrumentsPatches();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,System.Int32> _selectedPatchesIndexes
    [[deprecated]] ::System::Collections::Generic::Dictionary_2<::StringW, int>*& dyn__selectedPatchesIndexes();
    // public System.Void AddPatch(VROSC.WidgetSettings/VROSC.Identifier id, System.Object patch)
    // Offset: 0x1935EE4
    void AddPatch(::VROSC::WidgetSettings::Identifier id, ::Il2CppObject* patch);
    // public System.Boolean HasPatch(VROSC.WidgetSettings/VROSC.Identifier id, System.String patchName)
    // Offset: 0x19367B8
    bool HasPatch(::VROSC::WidgetSettings::Identifier id, ::StringW patchName);
    // public VROSC.InstrumentsDataController/VROSC.PatchSettings GetSelectedPatchSettings(VROSC.WidgetSettings/VROSC.Identifier id)
    // Offset: 0x19369C0
    ::VROSC::InstrumentsDataController::PatchSettings* GetSelectedPatchSettings(::VROSC::WidgetSettings::Identifier id);
    // public System.Collections.Generic.List`1<VROSC.InstrumentsDataController/VROSC.PatchSettings> GetInstrumentPatches(VROSC.WidgetSettings/VROSC.Identifier id)
    // Offset: 0x1936B84
    ::System::Collections::Generic::List_1<::VROSC::InstrumentsDataController::PatchSettings*>* GetInstrumentPatches(::VROSC::WidgetSettings::Identifier id);
    // public System.Void SelectPatch(VROSC.WidgetSettings/VROSC.Identifier id, System.Int32 index)
    // Offset: 0x1936CE4
    void SelectPatch(::VROSC::WidgetSettings::Identifier id, int index);
    // public System.Int32 GetSelectedMidiChannel(VROSC.WidgetSettings/VROSC.Identifier id)
    // Offset: 0x1937120
    int GetSelectedMidiChannel(::VROSC::WidgetSettings::Identifier id);
    // public System.Void SelectMidiChannel(VROSC.WidgetSettings/VROSC.Identifier id, System.Int32 channel)
    // Offset: 0x1937284
    void SelectMidiChannel(::VROSC::WidgetSettings::Identifier id, int channel);
    // public System.Int32 GetMinOctave(VROSC.WidgetSettings/VROSC.Identifier id)
    // Offset: 0x1937490
    int GetMinOctave(::VROSC::WidgetSettings::Identifier id);
    // public System.Int32 GetMinMidiChannel(VROSC.WidgetSettings/VROSC.Identifier id)
    // Offset: 0x19375F4
    int GetMinMidiChannel(::VROSC::WidgetSettings::Identifier id);
    // public System.Int32 GetMaxMidiChannel(VROSC.WidgetSettings/VROSC.Identifier id)
    // Offset: 0x1937758
    int GetMaxMidiChannel(::VROSC::WidgetSettings::Identifier id);
    // public System.Int32 GetSelectedOctave(VROSC.WidgetSettings/VROSC.Identifier id)
    // Offset: 0x19378BC
    int GetSelectedOctave(::VROSC::WidgetSettings::Identifier id);
    // public System.Void SelectNextOctave(VROSC.WidgetSettings/VROSC.Identifier id)
    // Offset: 0x1937A20
    void SelectNextOctave(::VROSC::WidgetSettings::Identifier id);
    // public System.Void SelectPreviousOctave(VROSC.WidgetSettings/VROSC.Identifier id)
    // Offset: 0x1937BA0
    void SelectPreviousOctave(::VROSC::WidgetSettings::Identifier id);
    // public System.Void SetScale(VROSC.WidgetSettings/VROSC.Identifier id, System.Int32 scaleIndex, VROSC.Scale scale)
    // Offset: 0x1937D1C
    void SetScale(::VROSC::WidgetSettings::Identifier id, int scaleIndex, ::VROSC::Scale scale);
    // public VROSC.Scale GetScale(VROSC.WidgetSettings/VROSC.Identifier id, System.Int32 scaleIndex)
    // Offset: 0x1937F14
    ::VROSC::Scale GetScale(::VROSC::WidgetSettings::Identifier id, int scaleIndex);
    // public System.Void SetStartNote(VROSC.WidgetSettings/VROSC.Identifier id, System.Int32 scaleIndex, VROSC.Note startNote)
    // Offset: 0x19380F8
    void SetStartNote(::VROSC::WidgetSettings::Identifier id, int scaleIndex, ::VROSC::Note startNote);
    // public VROSC.Note GetStartNote(VROSC.WidgetSettings/VROSC.Identifier id, System.Int32 scaleIndex)
    // Offset: 0x19382F0
    ::VROSC::Note GetStartNote(::VROSC::WidgetSettings::Identifier id, int scaleIndex);
    // public System.Void SetScaleRowLocked(VROSC.WidgetSettings/VROSC.Identifier id, System.Int32 scaleIndex, System.Boolean locked)
    // Offset: 0x19384D4
    void SetScaleRowLocked(::VROSC::WidgetSettings::Identifier id, int scaleIndex, bool locked);
    // public System.Boolean GetScaleRowLocked(VROSC.WidgetSettings/VROSC.Identifier id, System.Int32 scaleIndex)
    // Offset: 0x19386D0
    bool GetScaleRowLocked(::VROSC::WidgetSettings::Identifier id, int scaleIndex);
    // public System.Void SetScaleRowCustomized(VROSC.WidgetSettings/VROSC.Identifier id, System.Int32 scaleIndex, System.Boolean customized)
    // Offset: 0x19388BC
    void SetScaleRowCustomized(::VROSC::WidgetSettings::Identifier id, int scaleIndex, bool customized);
    // public System.Boolean GetScaleRowCustomized(VROSC.WidgetSettings/VROSC.Identifier id, System.Int32 scaleIndex)
    // Offset: 0x1938AB8
    bool GetScaleRowCustomized(::VROSC::WidgetSettings::Identifier id, int scaleIndex);
    // public VROSC.SynthData GetInstrumentData(System.String instrumentId)
    // Offset: 0x1935D40
    ::VROSC::SynthData* GetInstrumentData(::StringW instrumentId);
    // public System.Void .ctor()
    // Offset: 0x19353DC
    // Implemented from: VROSC.InstrumentsDataController
    // Base method: System.Void InstrumentsDataController::.ctor()
    // Base method: System.Void BaseDataController::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SynthsDataController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SynthsDataController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SynthsDataController*, creationType>()));
    }
    // public override System.Void ApplyDefaults(VROSC.WidgetSettings widgetDefaultSettings)
    // Offset: 0x1935538
    // Implemented from: VROSC.InstrumentsDataController
    // Base method: System.Void InstrumentsDataController::ApplyDefaults(VROSC.WidgetSettings widgetDefaultSettings)
    void ApplyDefaults(::VROSC::WidgetSettings* widgetDefaultSettings);
    // public override System.Void SaveData(System.String sessionName, System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x193628C
    // Implemented from: VROSC.BaseDataController
    // Base method: System.Void BaseDataController::SaveData(System.String sessionName, System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    void SaveData(::StringW sessionName, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public override System.Void LoadData(System.String sessionId, System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x1936374
    // Implemented from: VROSC.BaseDataController
    // Base method: System.Void BaseDataController::LoadData(System.String sessionId, System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    void LoadData(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public override System.Int32 GetLoadSteps()
    // Offset: 0x19364B0
    // Implemented from: VROSC.BaseDataController
    // Base method: System.Int32 BaseDataController::GetLoadSteps()
    int GetLoadSteps();
    // public override System.Int32 GetSaveSteps()
    // Offset: 0x1936634
    // Implemented from: VROSC.BaseDataController
    // Base method: System.Int32 BaseDataController::GetSaveSteps()
    int GetSaveSteps();
    // public override System.Boolean IsOpen(VROSC.WidgetSettings/VROSC.Identifier id)
    // Offset: 0x1938CA4
    // Implemented from: VROSC.InstrumentsDataController
    // Base method: System.Boolean InstrumentsDataController::IsOpen(VROSC.WidgetSettings/VROSC.Identifier id)
    bool IsOpen(::VROSC::WidgetSettings::Identifier id);
    // public override UnityEngine.Vector3 GetPosition(VROSC.WidgetSettings/VROSC.Identifier id)
    // Offset: 0x1938E10
    // Implemented from: VROSC.InstrumentsDataController
    // Base method: UnityEngine.Vector3 InstrumentsDataController::GetPosition(VROSC.WidgetSettings/VROSC.Identifier id)
    ::UnityEngine::Vector3 GetPosition(::VROSC::WidgetSettings::Identifier id);
    // public override UnityEngine.Quaternion GetRotation(VROSC.WidgetSettings/VROSC.Identifier id)
    // Offset: 0x1938F7C
    // Implemented from: VROSC.InstrumentsDataController
    // Base method: UnityEngine.Quaternion InstrumentsDataController::GetRotation(VROSC.WidgetSettings/VROSC.Identifier id)
    ::UnityEngine::Quaternion GetRotation(::VROSC::WidgetSettings::Identifier id);
    // public override UnityEngine.Vector3 GetScale(VROSC.WidgetSettings/VROSC.Identifier id)
    // Offset: 0x19390E8
    // Implemented from: VROSC.InstrumentsDataController
    // Base method: UnityEngine.Vector3 InstrumentsDataController::GetScale(VROSC.WidgetSettings/VROSC.Identifier id)
    ::UnityEngine::Vector3 GetScale(::VROSC::WidgetSettings::Identifier id);
    // public override System.Void SetOpen(VROSC.WidgetSettings/VROSC.Identifier id, System.Boolean isOpen)
    // Offset: 0x1939254
    // Implemented from: VROSC.InstrumentsDataController
    // Base method: System.Void InstrumentsDataController::SetOpen(VROSC.WidgetSettings/VROSC.Identifier id, System.Boolean isOpen)
    void SetOpen(::VROSC::WidgetSettings::Identifier id, bool isOpen);
    // public override System.Void SetPosition(VROSC.WidgetSettings/VROSC.Identifier id, UnityEngine.Vector3 position)
    // Offset: 0x19393C8
    // Implemented from: VROSC.InstrumentsDataController
    // Base method: System.Void InstrumentsDataController::SetPosition(VROSC.WidgetSettings/VROSC.Identifier id, UnityEngine.Vector3 position)
    void SetPosition(::VROSC::WidgetSettings::Identifier id, ::UnityEngine::Vector3 position);
    // public override System.Void SetRotation(VROSC.WidgetSettings/VROSC.Identifier id, UnityEngine.Quaternion rotation)
    // Offset: 0x1939558
    // Implemented from: VROSC.InstrumentsDataController
    // Base method: System.Void InstrumentsDataController::SetRotation(VROSC.WidgetSettings/VROSC.Identifier id, UnityEngine.Quaternion rotation)
    void SetRotation(::VROSC::WidgetSettings::Identifier id, ::UnityEngine::Quaternion rotation);
    // public override System.Void SetScale(VROSC.WidgetSettings/VROSC.Identifier id, UnityEngine.Vector3 scale)
    // Offset: 0x19396F8
    // Implemented from: VROSC.InstrumentsDataController
    // Base method: System.Void InstrumentsDataController::SetScale(VROSC.WidgetSettings/VROSC.Identifier id, UnityEngine.Vector3 scale)
    void SetScale(::VROSC::WidgetSettings::Identifier id, ::UnityEngine::Vector3 scale);
    // public override System.Void SetQuantize(VROSC.WidgetSettings/VROSC.Identifier id, System.Boolean quantize)
    // Offset: 0x1939888
    // Implemented from: VROSC.InstrumentsDataController
    // Base method: System.Void InstrumentsDataController::SetQuantize(VROSC.WidgetSettings/VROSC.Identifier id, System.Boolean quantize)
    void SetQuantize(::VROSC::WidgetSettings::Identifier id, bool quantize);
    // public override System.Void SetQuantizeTolerance(VROSC.WidgetSettings/VROSC.Identifier id, System.Single tolerance)
    // Offset: 0x19399F4
    // Implemented from: VROSC.InstrumentsDataController
    // Base method: System.Void InstrumentsDataController::SetQuantizeTolerance(VROSC.WidgetSettings/VROSC.Identifier id, System.Single tolerance)
    void SetQuantizeTolerance(::VROSC::WidgetSettings::Identifier id, float tolerance);
    // public override System.Void SetQuantizeBeatDivision(VROSC.WidgetSettings/VROSC.Identifier id, System.Int32 division)
    // Offset: 0x1939B5C
    // Implemented from: VROSC.InstrumentsDataController
    // Base method: System.Void InstrumentsDataController::SetQuantizeBeatDivision(VROSC.WidgetSettings/VROSC.Identifier id, System.Int32 division)
    void SetQuantizeBeatDivision(::VROSC::WidgetSettings::Identifier id, int division);
    // public override System.Boolean GetQuantize(VROSC.WidgetSettings/VROSC.Identifier id)
    // Offset: 0x1939CC4
    // Implemented from: VROSC.InstrumentsDataController
    // Base method: System.Boolean InstrumentsDataController::GetQuantize(VROSC.WidgetSettings/VROSC.Identifier id)
    bool GetQuantize(::VROSC::WidgetSettings::Identifier id);
    // public override System.Single GetQuantizeTolerance(VROSC.WidgetSettings/VROSC.Identifier id)
    // Offset: 0x1939E28
    // Implemented from: VROSC.InstrumentsDataController
    // Base method: System.Single InstrumentsDataController::GetQuantizeTolerance(VROSC.WidgetSettings/VROSC.Identifier id)
    float GetQuantizeTolerance(::VROSC::WidgetSettings::Identifier id);
    // public override System.Int32 GetQuantizeBeatDivision(VROSC.WidgetSettings/VROSC.Identifier id)
    // Offset: 0x1939F84
    // Implemented from: VROSC.InstrumentsDataController
    // Base method: System.Int32 InstrumentsDataController::GetQuantizeBeatDivision(VROSC.WidgetSettings/VROSC.Identifier id)
    int GetQuantizeBeatDivision(::VROSC::WidgetSettings::Identifier id);
  }; // VROSC.SynthsDataController
  #pragma pack(pop)
  static check_size<sizeof(SynthsDataController), 48 + sizeof(::System::Collections::Generic::Dictionary_2<::StringW, int>*)> __VROSC_SynthsDataControllerSizeCheck;
  static_assert(sizeof(SynthsDataController) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::SynthsDataController::AddPatch
// Il2CppName: AddPatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, ::Il2CppObject*)>(&VROSC::SynthsDataController::AddPatch)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* patch = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "AddPatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, patch});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::HasPatch
// Il2CppName: HasPatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, ::StringW)>(&VROSC::SynthsDataController::HasPatch)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* patchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "HasPatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, patchName});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetSelectedPatchSettings
// Il2CppName: GetSelectedPatchSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::InstrumentsDataController::PatchSettings* (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::SynthsDataController::GetSelectedPatchSettings)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetSelectedPatchSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetInstrumentPatches
// Il2CppName: GetInstrumentPatches
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::VROSC::InstrumentsDataController::PatchSettings*>* (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::SynthsDataController::GetInstrumentPatches)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetInstrumentPatches", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::SelectPatch
// Il2CppName: SelectPatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, int)>(&VROSC::SynthsDataController::SelectPatch)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "SelectPatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, index});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetSelectedMidiChannel
// Il2CppName: GetSelectedMidiChannel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::SynthsDataController::GetSelectedMidiChannel)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetSelectedMidiChannel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::SelectMidiChannel
// Il2CppName: SelectMidiChannel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, int)>(&VROSC::SynthsDataController::SelectMidiChannel)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "SelectMidiChannel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, channel});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetMinOctave
// Il2CppName: GetMinOctave
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::SynthsDataController::GetMinOctave)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetMinOctave", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetMinMidiChannel
// Il2CppName: GetMinMidiChannel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::SynthsDataController::GetMinMidiChannel)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetMinMidiChannel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetMaxMidiChannel
// Il2CppName: GetMaxMidiChannel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::SynthsDataController::GetMaxMidiChannel)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetMaxMidiChannel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetSelectedOctave
// Il2CppName: GetSelectedOctave
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::SynthsDataController::GetSelectedOctave)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetSelectedOctave", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::SelectNextOctave
// Il2CppName: SelectNextOctave
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::SynthsDataController::SelectNextOctave)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "SelectNextOctave", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::SelectPreviousOctave
// Il2CppName: SelectPreviousOctave
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::SynthsDataController::SelectPreviousOctave)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "SelectPreviousOctave", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::SetScale
// Il2CppName: SetScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, int, ::VROSC::Scale)>(&VROSC::SynthsDataController::SetScale)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* scaleIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("VROSC", "Scale")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "SetScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, scaleIndex, scale});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetScale
// Il2CppName: GetScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::Scale (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, int)>(&VROSC::SynthsDataController::GetScale)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* scaleIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, scaleIndex});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::SetStartNote
// Il2CppName: SetStartNote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, int, ::VROSC::Note)>(&VROSC::SynthsDataController::SetStartNote)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* scaleIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* startNote = &::il2cpp_utils::GetClassFromName("VROSC", "Note")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "SetStartNote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, scaleIndex, startNote});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetStartNote
// Il2CppName: GetStartNote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::Note (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, int)>(&VROSC::SynthsDataController::GetStartNote)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* scaleIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetStartNote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, scaleIndex});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::SetScaleRowLocked
// Il2CppName: SetScaleRowLocked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, int, bool)>(&VROSC::SynthsDataController::SetScaleRowLocked)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* scaleIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* locked = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "SetScaleRowLocked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, scaleIndex, locked});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetScaleRowLocked
// Il2CppName: GetScaleRowLocked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, int)>(&VROSC::SynthsDataController::GetScaleRowLocked)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* scaleIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetScaleRowLocked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, scaleIndex});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::SetScaleRowCustomized
// Il2CppName: SetScaleRowCustomized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, int, bool)>(&VROSC::SynthsDataController::SetScaleRowCustomized)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* scaleIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* customized = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "SetScaleRowCustomized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, scaleIndex, customized});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetScaleRowCustomized
// Il2CppName: GetScaleRowCustomized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, int)>(&VROSC::SynthsDataController::GetScaleRowCustomized)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* scaleIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetScaleRowCustomized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, scaleIndex});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetInstrumentData
// Il2CppName: GetInstrumentData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::SynthData* (VROSC::SynthsDataController::*)(::StringW)>(&VROSC::SynthsDataController::GetInstrumentData)> {
  static const MethodInfo* get() {
    static auto* instrumentId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetInstrumentData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instrumentId});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::SynthsDataController::ApplyDefaults
// Il2CppName: ApplyDefaults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings*)>(&VROSC::SynthsDataController::ApplyDefaults)> {
  static const MethodInfo* get() {
    static auto* widgetDefaultSettings = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "ApplyDefaults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{widgetDefaultSettings});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::SaveData
// Il2CppName: SaveData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::StringW, ::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::SynthsDataController::SaveData)> {
  static const MethodInfo* get() {
    static auto* sessionName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "SaveData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionName, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::LoadData
// Il2CppName: LoadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::StringW, ::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::SynthsDataController::LoadData)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "LoadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetLoadSteps
// Il2CppName: GetLoadSteps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::SynthsDataController::*)()>(&VROSC::SynthsDataController::GetLoadSteps)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetLoadSteps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetSaveSteps
// Il2CppName: GetSaveSteps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::SynthsDataController::*)()>(&VROSC::SynthsDataController::GetSaveSteps)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetSaveSteps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::IsOpen
// Il2CppName: IsOpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::SynthsDataController::IsOpen)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "IsOpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetPosition
// Il2CppName: GetPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::SynthsDataController::GetPosition)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetRotation
// Il2CppName: GetRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::SynthsDataController::GetRotation)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetScale
// Il2CppName: GetScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::SynthsDataController::GetScale)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::SetOpen
// Il2CppName: SetOpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, bool)>(&VROSC::SynthsDataController::SetOpen)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* isOpen = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "SetOpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, isOpen});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::SetPosition
// Il2CppName: SetPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, ::UnityEngine::Vector3)>(&VROSC::SynthsDataController::SetPosition)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "SetPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, position});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::SetRotation
// Il2CppName: SetRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, ::UnityEngine::Quaternion)>(&VROSC::SynthsDataController::SetRotation)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "SetRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, rotation});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::SetScale
// Il2CppName: SetScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, ::UnityEngine::Vector3)>(&VROSC::SynthsDataController::SetScale)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "SetScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, scale});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::SetQuantize
// Il2CppName: SetQuantize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, bool)>(&VROSC::SynthsDataController::SetQuantize)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* quantize = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "SetQuantize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, quantize});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::SetQuantizeTolerance
// Il2CppName: SetQuantizeTolerance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, float)>(&VROSC::SynthsDataController::SetQuantizeTolerance)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* tolerance = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "SetQuantizeTolerance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, tolerance});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::SetQuantizeBeatDivision
// Il2CppName: SetQuantizeBeatDivision
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier, int)>(&VROSC::SynthsDataController::SetQuantizeBeatDivision)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    static auto* division = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "SetQuantizeBeatDivision", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, division});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetQuantize
// Il2CppName: GetQuantize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::SynthsDataController::GetQuantize)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetQuantize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetQuantizeTolerance
// Il2CppName: GetQuantizeTolerance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::SynthsDataController::GetQuantizeTolerance)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetQuantizeTolerance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: VROSC::SynthsDataController::GetQuantizeBeatDivision
// Il2CppName: GetQuantizeBeatDivision
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::SynthsDataController::*)(::VROSC::WidgetSettings::Identifier)>(&VROSC::SynthsDataController::GetQuantizeBeatDivision)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetSettings/Identifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthsDataController*), "GetQuantizeBeatDivision", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
