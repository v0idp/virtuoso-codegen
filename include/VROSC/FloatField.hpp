// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: FloatNode
  class FloatNode;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: FloatField
  class FloatField;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::FloatField);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::FloatField*, "VROSC", "FloatField");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.FloatField
  // [TokenAttribute] Offset: FFFFFFFF
  class FloatField : public ::Il2CppObject {
    public:
    public:
    // protected System.Single EnteredValue
    // Size: 0x4
    // Offset: 0x10
    float EnteredValue;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: EnteredValue and: ConnectedValue
    char __padding0[0x4] = {};
    // protected VROSC.FloatNode ConnectedValue
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::FloatNode* ConnectedValue;
    // Field size check
    static_assert(sizeof(::VROSC::FloatNode*) == 0x8);
    public:
    // Get instance field reference: protected System.Single EnteredValue
    [[deprecated]] float& dyn_EnteredValue();
    // Get instance field reference: protected VROSC.FloatNode ConnectedValue
    [[deprecated]] ::VROSC::FloatNode*& dyn_ConnectedValue();
    // public System.Single get_Value()
    // Offset: 0x199F858
    float get_Value();
    // public System.Void .ctor(System.Single enteredValue)
    // Offset: 0x199F814
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FloatField* New_ctor(float enteredValue) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatField::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FloatField*, creationType>(enteredValue)));
    }
    // public VROSC.FloatNode GetNode()
    // Offset: 0x199F848
    ::VROSC::FloatNode* GetNode();
    // public System.Void SetNode(VROSC.FloatNode floatNode)
    // Offset: 0x199F850
    void SetNode(::VROSC::FloatNode* floatNode);
  }; // VROSC.FloatField
  #pragma pack(pop)
  static check_size<sizeof(FloatField), 24 + sizeof(::VROSC::FloatNode*)> __VROSC_FloatFieldSizeCheck;
  static_assert(sizeof(FloatField) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::FloatField::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (VROSC::FloatField::*)()>(&VROSC::FloatField::get_Value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::FloatField*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::FloatField::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::FloatField::GetNode
// Il2CppName: GetNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::FloatNode* (VROSC::FloatField::*)()>(&VROSC::FloatField::GetNode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::FloatField*), "GetNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::FloatField::SetNode
// Il2CppName: SetNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::FloatField::*)(::VROSC::FloatNode*)>(&VROSC::FloatField::SetNode)> {
  static const MethodInfo* get() {
    static auto* floatNode = &::il2cpp_utils::GetClassFromName("VROSC", "FloatNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::FloatField*), "SetNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{floatNode});
  }
};
