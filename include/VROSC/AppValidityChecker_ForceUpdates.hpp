// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.AppValidityChecker
#include "VROSC/AppValidityChecker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::AppValidityChecker::ForceUpdates);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::AppValidityChecker::ForceUpdates*, "VROSC", "AppValidityChecker/ForceUpdates");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.AppValidityChecker/VROSC.ForceUpdates
  // [TokenAttribute] Offset: FFFFFFFF
  class AppValidityChecker::ForceUpdates : public ::Il2CppObject {
    public:
    public:
    // public System.String EULATermsVersion
    // Size: 0x8
    // Offset: 0x10
    ::StringW EULATermsVersion;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String MinVersionForApp
    // Size: 0x8
    // Offset: 0x18
    ::StringW MinVersionForApp;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String MinVersionForLibrary
    // Size: 0x8
    // Offset: 0x20
    ::StringW MinVersionForLibrary;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.String EULATermsVersion
    [[deprecated("Use field access instead!")]] ::StringW& dyn_EULATermsVersion();
    // Get instance field reference: public System.String MinVersionForApp
    [[deprecated("Use field access instead!")]] ::StringW& dyn_MinVersionForApp();
    // Get instance field reference: public System.String MinVersionForLibrary
    [[deprecated("Use field access instead!")]] ::StringW& dyn_MinVersionForLibrary();
    // public System.Void .ctor()
    // Offset: 0x956B3C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AppValidityChecker::ForceUpdates* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AppValidityChecker::ForceUpdates::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AppValidityChecker::ForceUpdates*, creationType>()));
    }
  }; // VROSC.AppValidityChecker/VROSC.ForceUpdates
  #pragma pack(pop)
  static check_size<sizeof(AppValidityChecker::ForceUpdates), 32 + sizeof(::StringW)> __VROSC_AppValidityChecker_ForceUpdatesSizeCheck;
  static_assert(sizeof(AppValidityChecker::ForceUpdates) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::AppValidityChecker::ForceUpdates::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
