// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: NoteBoardNote
  class NoteBoardNote;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: NoteBoardNoteVisualController
  class NoteBoardNoteVisualController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::NoteBoardNoteVisualController);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::NoteBoardNoteVisualController*, "VROSC", "NoteBoardNoteVisualController");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.NoteBoardNoteVisualController
  // [TokenAttribute] Offset: FFFFFFFF
  class NoteBoardNoteVisualController : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // protected VROSC.NoteBoardNote _noteBoardNote
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::NoteBoardNote* noteBoardNote;
    // Field size check
    static_assert(sizeof(::VROSC::NoteBoardNote*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: protected VROSC.NoteBoardNote _noteBoardNote
    [[deprecated("Use field access instead!")]] ::VROSC::NoteBoardNote*& dyn__noteBoardNote();
    // public System.Void .ctor()
    // Offset: 0xC57460
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NoteBoardNoteVisualController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardNoteVisualController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NoteBoardNoteVisualController*, creationType>()));
    }
    // public System.Void Setup(VROSC.NoteBoardNote noteBoardNote, System.Boolean octave, System.Boolean isOdd)
    // Offset: 0xC5744C
    void Setup(::VROSC::NoteBoardNote* noteBoardNote, bool octave, bool isOdd);
    // public System.Void UpdateVisuals()
    // Offset: 0xC57454
    void UpdateVisuals();
    // public System.Void SetPlaying(System.Boolean isPlaying)
    // Offset: 0xC57458
    void SetPlaying(bool isPlaying);
    // public System.Void SetRestingColor(UnityEngine.Color color)
    // Offset: 0xC5745C
    void SetRestingColor(::UnityEngine::Color color);
  }; // VROSC.NoteBoardNoteVisualController
  #pragma pack(pop)
  static check_size<sizeof(NoteBoardNoteVisualController), 24 + sizeof(::VROSC::NoteBoardNote*)> __VROSC_NoteBoardNoteVisualControllerSizeCheck;
  static_assert(sizeof(NoteBoardNoteVisualController) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::NoteBoardNoteVisualController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::NoteBoardNoteVisualController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::NoteBoardNoteVisualController::*)(::VROSC::NoteBoardNote*, bool, bool)>(&VROSC::NoteBoardNoteVisualController::Setup)> {
  static const MethodInfo* get() {
    static auto* noteBoardNote = &::il2cpp_utils::GetClassFromName("VROSC", "NoteBoardNote")->byval_arg;
    static auto* octave = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isOdd = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::NoteBoardNoteVisualController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{noteBoardNote, octave, isOdd});
  }
};
// Writing MetadataGetter for method: VROSC::NoteBoardNoteVisualController::UpdateVisuals
// Il2CppName: UpdateVisuals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::NoteBoardNoteVisualController::*)()>(&VROSC::NoteBoardNoteVisualController::UpdateVisuals)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::NoteBoardNoteVisualController*), "UpdateVisuals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::NoteBoardNoteVisualController::SetPlaying
// Il2CppName: SetPlaying
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::NoteBoardNoteVisualController::*)(bool)>(&VROSC::NoteBoardNoteVisualController::SetPlaying)> {
  static const MethodInfo* get() {
    static auto* isPlaying = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::NoteBoardNoteVisualController*), "SetPlaying", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isPlaying});
  }
};
// Writing MetadataGetter for method: VROSC::NoteBoardNoteVisualController::SetRestingColor
// Il2CppName: SetRestingColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::NoteBoardNoteVisualController::*)(::UnityEngine::Color)>(&VROSC::NoteBoardNoteVisualController::SetRestingColor)> {
  static const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::NoteBoardNoteVisualController*), "SetRestingColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color});
  }
};
