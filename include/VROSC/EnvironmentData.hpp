// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: Environment
  class Environment;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture2D
  class Texture2D;
  // Forward declaring type: Material
  class Material;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: EnvironmentData
  class EnvironmentData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::EnvironmentData);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::EnvironmentData*, "VROSC", "EnvironmentData");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x4C
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.EnvironmentData
  // [TokenAttribute] Offset: FFFFFFFF
  // [CreateAssetMenuAttribute] Offset: 77FB60
  class EnvironmentData : public ::UnityEngine::ScriptableObject {
    public:
    public:
    // private VROSC.Environment _prefab
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::Environment* prefab;
    // Field size check
    static_assert(sizeof(::VROSC::Environment*) == 0x8);
    // [HeaderAttribute] Offset: 0x786534
    // private UnityEngine.Texture2D _previewImage
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Texture2D* previewImage;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // private System.String _displayName
    // Size: 0x8
    // Offset: 0x28
    ::StringW displayName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _id
    // Size: 0x8
    // Offset: 0x30
    ::StringW id;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [HeaderAttribute] Offset: 0x7865A0
    // private UnityEngine.Material _skyboxMaterial
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Material* skyboxMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // [HeaderAttribute] Offset: 0x7865EC
    // private System.Single _bass
    // Size: 0x4
    // Offset: 0x40
    float bass;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _mid
    // Size: 0x4
    // Offset: 0x44
    float mid;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _top
    // Size: 0x4
    // Offset: 0x48
    float top;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.Environment _prefab
    [[deprecated]] ::VROSC::Environment*& dyn__prefab();
    // Get instance field reference: private UnityEngine.Texture2D _previewImage
    [[deprecated]] ::UnityEngine::Texture2D*& dyn__previewImage();
    // Get instance field reference: private System.String _displayName
    [[deprecated]] ::StringW& dyn__displayName();
    // Get instance field reference: private System.String _id
    [[deprecated]] ::StringW& dyn__id();
    // Get instance field reference: private UnityEngine.Material _skyboxMaterial
    [[deprecated]] ::UnityEngine::Material*& dyn__skyboxMaterial();
    // Get instance field reference: private System.Single _bass
    [[deprecated]] float& dyn__bass();
    // Get instance field reference: private System.Single _mid
    [[deprecated]] float& dyn__mid();
    // Get instance field reference: private System.Single _top
    [[deprecated]] float& dyn__top();
    // public VROSC.Environment get_Prefab()
    // Offset: 0x8EEADC
    ::VROSC::Environment* get_Prefab();
    // public UnityEngine.Texture2D get_PreviewImage()
    // Offset: 0x8EEAE4
    ::UnityEngine::Texture2D* get_PreviewImage();
    // public System.String get_DisplayName()
    // Offset: 0x8EEAEC
    ::StringW get_DisplayName();
    // public System.String get_ID()
    // Offset: 0x8EEAF4
    ::StringW get_ID();
    // public UnityEngine.Material get_SkyboxMaterial()
    // Offset: 0x8EEAFC
    ::UnityEngine::Material* get_SkyboxMaterial();
    // public System.Single get_BassEffect()
    // Offset: 0x8EEB04
    float get_BassEffect();
    // public System.Single get_MidEffect()
    // Offset: 0x8EEB0C
    float get_MidEffect();
    // public System.Single get_TopEffect()
    // Offset: 0x8EEB14
    float get_TopEffect();
    // public System.Void .ctor()
    // Offset: 0x8EEB1C
    // Implemented from: UnityEngine.ScriptableObject
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EnvironmentData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EnvironmentData*, creationType>()));
    }
  }; // VROSC.EnvironmentData
  #pragma pack(pop)
  static check_size<sizeof(EnvironmentData), 72 + sizeof(float)> __VROSC_EnvironmentDataSizeCheck;
  static_assert(sizeof(EnvironmentData) == 0x4C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::EnvironmentData::get_Prefab
// Il2CppName: get_Prefab
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::Environment* (VROSC::EnvironmentData::*)()>(&VROSC::EnvironmentData::get_Prefab)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentData*), "get_Prefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentData::get_PreviewImage
// Il2CppName: get_PreviewImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (VROSC::EnvironmentData::*)()>(&VROSC::EnvironmentData::get_PreviewImage)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentData*), "get_PreviewImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentData::get_DisplayName
// Il2CppName: get_DisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::EnvironmentData::*)()>(&VROSC::EnvironmentData::get_DisplayName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentData*), "get_DisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentData::get_ID
// Il2CppName: get_ID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::EnvironmentData::*)()>(&VROSC::EnvironmentData::get_ID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentData*), "get_ID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentData::get_SkyboxMaterial
// Il2CppName: get_SkyboxMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (VROSC::EnvironmentData::*)()>(&VROSC::EnvironmentData::get_SkyboxMaterial)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentData*), "get_SkyboxMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentData::get_BassEffect
// Il2CppName: get_BassEffect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (VROSC::EnvironmentData::*)()>(&VROSC::EnvironmentData::get_BassEffect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentData*), "get_BassEffect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentData::get_MidEffect
// Il2CppName: get_MidEffect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (VROSC::EnvironmentData::*)()>(&VROSC::EnvironmentData::get_MidEffect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentData*), "get_MidEffect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentData::get_TopEffect
// Il2CppName: get_TopEffect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (VROSC::EnvironmentData::*)()>(&VROSC::EnvironmentData::get_TopEffect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EnvironmentData*), "get_TopEffect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EnvironmentData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
