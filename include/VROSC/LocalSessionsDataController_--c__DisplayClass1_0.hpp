// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.LocalSessionsDataController
#include "VROSC/LocalSessionsDataController.hpp"
// Including type: VROSC.Error
#include "VROSC/Error.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::LocalSessionsDataController::$$c__DisplayClass1_0);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::LocalSessionsDataController::$$c__DisplayClass1_0*, "VROSC", "LocalSessionsDataController/<>c__DisplayClass1_0");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.LocalSessionsDataController/VROSC.<>c__DisplayClass1_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class LocalSessionsDataController::$$c__DisplayClass1_0 : public ::Il2CppObject {
    public:
    public:
    // public VROSC.LocalSessionsDataController <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::VROSC::LocalSessionsDataController* $$4__this;
    // Field size check
    static_assert(sizeof(::VROSC::LocalSessionsDataController*) == 0x8);
    // public System.Action onSuccess
    // Size: 0x8
    // Offset: 0x18
    ::System::Action* onSuccess;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // public System.Action`1<VROSC.Error> onFailure
    // Size: 0x8
    // Offset: 0x20
    ::System::Action_1<::VROSC::Error>* onFailure;
    // Field size check
    static_assert(sizeof(::System::Action_1<::VROSC::Error>*) == 0x8);
    // public System.Action`1<System.String> <>9__2
    // Size: 0x8
    // Offset: 0x28
    ::System::Action_1<::StringW>* $$9__2;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    public:
    // Get instance field reference: public VROSC.LocalSessionsDataController <>4__this
    [[deprecated("Use field access instead!")]] ::VROSC::LocalSessionsDataController*& dyn_$$4__this();
    // Get instance field reference: public System.Action onSuccess
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_onSuccess();
    // Get instance field reference: public System.Action`1<VROSC.Error> onFailure
    [[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& dyn_onFailure();
    // Get instance field reference: public System.Action`1<System.String> <>9__2
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_$$9__2();
    // public System.Void .ctor()
    // Offset: 0x195C9C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LocalSessionsDataController::$$c__DisplayClass1_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LocalSessionsDataController::$$c__DisplayClass1_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LocalSessionsDataController::$$c__DisplayClass1_0*, creationType>()));
    }
    // System.Void <LoadLocalData>b__0(System.String data)
    // Offset: 0x195C9D0
    void $LoadLocalData$b__0(::StringW data);
    // System.Void <LoadLocalData>b__1(VROSC.Error error)
    // Offset: 0x195CC58
    void $LoadLocalData$b__1(::VROSC::Error error);
    // System.Void <LoadLocalData>b__2(System.String data)
    // Offset: 0x195CD94
    void $LoadLocalData$b__2(::StringW data);
  }; // VROSC.LocalSessionsDataController/VROSC.<>c__DisplayClass1_0
  #pragma pack(pop)
  static check_size<sizeof(LocalSessionsDataController::$$c__DisplayClass1_0), 40 + sizeof(::System::Action_1<::StringW>*)> __VROSC_LocalSessionsDataController_$$c__DisplayClass1_0SizeCheck;
  static_assert(sizeof(LocalSessionsDataController::$$c__DisplayClass1_0) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::LocalSessionsDataController::$$c__DisplayClass1_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::LocalSessionsDataController::$$c__DisplayClass1_0::$LoadLocalData$b__0
// Il2CppName: <LoadLocalData>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LocalSessionsDataController::$$c__DisplayClass1_0::*)(::StringW)>(&VROSC::LocalSessionsDataController::$$c__DisplayClass1_0::$LoadLocalData$b__0)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LocalSessionsDataController::$$c__DisplayClass1_0*), "<LoadLocalData>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: VROSC::LocalSessionsDataController::$$c__DisplayClass1_0::$LoadLocalData$b__1
// Il2CppName: <LoadLocalData>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LocalSessionsDataController::$$c__DisplayClass1_0::*)(::VROSC::Error)>(&VROSC::LocalSessionsDataController::$$c__DisplayClass1_0::$LoadLocalData$b__1)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LocalSessionsDataController::$$c__DisplayClass1_0*), "<LoadLocalData>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: VROSC::LocalSessionsDataController::$$c__DisplayClass1_0::$LoadLocalData$b__2
// Il2CppName: <LoadLocalData>b__2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LocalSessionsDataController::$$c__DisplayClass1_0::*)(::StringW)>(&VROSC::LocalSessionsDataController::$$c__DisplayClass1_0::$LoadLocalData$b__2)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LocalSessionsDataController::$$c__DisplayClass1_0*), "<LoadLocalData>b__2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
