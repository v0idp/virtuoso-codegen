// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.SignalNode
#include "VROSC/SignalNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: SynthController
  class SynthController;
  // Forward declaring type: Signal
  class Signal;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: SynthParameterController
  class SynthParameterController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::SynthParameterController);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::SynthParameterController*, "VROSC", "SynthParameterController");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.SynthParameterController
  // [TokenAttribute] Offset: FFFFFFFF
  class SynthParameterController : public ::VROSC::SignalNode {
    public:
    // Nested type: ::VROSC::SynthParameterController::TargetParameter
    struct TargetParameter;
    public:
    // private VROSC.SynthController _synthController
    // Size: 0x8
    // Offset: 0x40
    ::VROSC::SynthController* synthController;
    // Field size check
    static_assert(sizeof(::VROSC::SynthController*) == 0x8);
    public:
    // Get instance field reference: private VROSC.SynthController _synthController
    [[deprecated("Use field access instead!")]] ::VROSC::SynthController*& dyn__synthController();
    // public System.Void .ctor()
    // Offset: 0x19353D4
    // Implemented from: VROSC.SignalNode
    // Base method: System.Void SignalNode::.ctor()
    // Base method: System.Void Node::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SynthParameterController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SynthParameterController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SynthParameterController*, creationType>()));
    }
    // protected override System.Void NodeBegin(VROSC.Signal signal)
    // Offset: 0x19353A4
    // Implemented from: VROSC.SignalNode
    // Base method: System.Void SignalNode::NodeBegin(VROSC.Signal signal)
    void NodeBegin(::VROSC::Signal* signal);
    // protected override System.Void NodeStay(VROSC.Signal signal)
    // Offset: 0x19353BC
    // Implemented from: VROSC.SignalNode
    // Base method: System.Void SignalNode::NodeStay(VROSC.Signal signal)
    void NodeStay(::VROSC::Signal* signal);
  }; // VROSC.SynthParameterController
  #pragma pack(pop)
  static check_size<sizeof(SynthParameterController), 64 + sizeof(::VROSC::SynthController*)> __VROSC_SynthParameterControllerSizeCheck;
  static_assert(sizeof(SynthParameterController) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::SynthParameterController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::SynthParameterController::NodeBegin
// Il2CppName: NodeBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthParameterController::*)(::VROSC::Signal*)>(&VROSC::SynthParameterController::NodeBegin)> {
  static const MethodInfo* get() {
    static auto* signal = &::il2cpp_utils::GetClassFromName("VROSC", "Signal")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthParameterController*), "NodeBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{signal});
  }
};
// Writing MetadataGetter for method: VROSC::SynthParameterController::NodeStay
// Il2CppName: NodeStay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthParameterController::*)(::VROSC::Signal*)>(&VROSC::SynthParameterController::NodeStay)> {
  static const MethodInfo* get() {
    static auto* signal = &::il2cpp_utils::GetClassFromName("VROSC", "Signal")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthParameterController*), "NodeStay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{signal});
  }
};
