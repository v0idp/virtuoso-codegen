// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.ToneGenerator
#include "VROSC/ToneGenerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::ToneGenerator::GeneratedTone);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::ToneGenerator::GeneratedTone*, "VROSC", "ToneGenerator/GeneratedTone");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.ToneGenerator/VROSC.GeneratedTone
  // [TokenAttribute] Offset: FFFFFFFF
  class ToneGenerator::GeneratedTone : public ::Il2CppObject {
    public:
    public:
    // public System.Double Frequency
    // Size: 0x8
    // Offset: 0x10
    double Frequency;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    // public System.Double Increment
    // Size: 0x8
    // Offset: 0x18
    double Increment;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    // public System.Double Phase
    // Size: 0x8
    // Offset: 0x20
    double Phase;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    public:
    // Get instance field reference: public System.Double Frequency
    [[deprecated("Use field access instead!")]] double& dyn_Frequency();
    // Get instance field reference: public System.Double Increment
    [[deprecated("Use field access instead!")]] double& dyn_Increment();
    // Get instance field reference: public System.Double Phase
    [[deprecated("Use field access instead!")]] double& dyn_Phase();
    // public System.Void .ctor(System.Int32 midiNumber)
    // Offset: 0x8DD1C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ToneGenerator::GeneratedTone* New_ctor(int midiNumber) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ToneGenerator::GeneratedTone::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ToneGenerator::GeneratedTone*, creationType>(midiNumber)));
    }
  }; // VROSC.ToneGenerator/VROSC.GeneratedTone
  #pragma pack(pop)
  static check_size<sizeof(ToneGenerator::GeneratedTone), 32 + sizeof(double)> __VROSC_ToneGenerator_GeneratedToneSizeCheck;
  static_assert(sizeof(ToneGenerator::GeneratedTone) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::ToneGenerator::GeneratedTone::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
