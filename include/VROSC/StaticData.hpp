// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: SampleDatabase
  class SampleDatabase;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: StaticData
  class StaticData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::StaticData);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::StaticData*, "VROSC", "StaticData");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.StaticData
  // [TokenAttribute] Offset: FFFFFFFF
  class StaticData : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private VROSC.SampleDatabase _drumsSamplesDatabase
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::SampleDatabase* drumsSamplesDatabase;
    // Field size check
    static_assert(sizeof(::VROSC::SampleDatabase*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.SampleDatabase _drumsSamplesDatabase
    [[deprecated("Use field access instead!")]] ::VROSC::SampleDatabase*& dyn__drumsSamplesDatabase();
    // public VROSC.SampleDatabase get_DrumSamples()
    // Offset: 0x1930E2C
    ::VROSC::SampleDatabase* get_DrumSamples();
    // public System.Void .ctor()
    // Offset: 0x1930E34
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StaticData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::StaticData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StaticData*, creationType>()));
    }
  }; // VROSC.StaticData
  #pragma pack(pop)
  static check_size<sizeof(StaticData), 24 + sizeof(::VROSC::SampleDatabase*)> __VROSC_StaticDataSizeCheck;
  static_assert(sizeof(StaticData) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::StaticData::get_DrumSamples
// Il2CppName: get_DrumSamples
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::SampleDatabase* (VROSC::StaticData::*)()>(&VROSC::StaticData::get_DrumSamples)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::StaticData*), "get_DrumSamples", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::StaticData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
