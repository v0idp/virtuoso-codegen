// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Skipping declaration: Identifier because it is already included!
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: WidgetSettings
  class WidgetSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::WidgetSettings);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::WidgetSettings*, "VROSC", "WidgetSettings");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.WidgetSettings
  // [TokenAttribute] Offset: FFFFFFFF
  class WidgetSettings : public ::UnityEngine::ScriptableObject {
    public:
    // Nested type: ::VROSC::WidgetSettings::Identifier
    struct Identifier;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: VROSC.WidgetSettings/VROSC.Identifier
    // [TokenAttribute] Offset: FFFFFFFF
    struct Identifier/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: Identifier
      constexpr Identifier(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public VROSC.WidgetSettings/VROSC.Identifier Organ
      static constexpr const int Organ = 0;
      // Get static field: static public VROSC.WidgetSettings/VROSC.Identifier Organ
      static ::VROSC::WidgetSettings::Identifier _get_Organ();
      // Set static field: static public VROSC.WidgetSettings/VROSC.Identifier Organ
      static void _set_Organ(::VROSC::WidgetSettings::Identifier value);
      // static field const value: static public VROSC.WidgetSettings/VROSC.Identifier Board
      static constexpr const int Board = 1;
      // Get static field: static public VROSC.WidgetSettings/VROSC.Identifier Board
      static ::VROSC::WidgetSettings::Identifier _get_Board();
      // Set static field: static public VROSC.WidgetSettings/VROSC.Identifier Board
      static void _set_Board(::VROSC::WidgetSettings::Identifier value);
      // static field const value: static public VROSC.WidgetSettings/VROSC.Identifier Harp
      static constexpr const int Harp = 2;
      // Get static field: static public VROSC.WidgetSettings/VROSC.Identifier Harp
      static ::VROSC::WidgetSettings::Identifier _get_Harp();
      // Set static field: static public VROSC.WidgetSettings/VROSC.Identifier Harp
      static void _set_Harp(::VROSC::WidgetSettings::Identifier value);
      // static field const value: static public VROSC.WidgetSettings/VROSC.Identifier Clustr
      static constexpr const int Clustr = 3;
      // Get static field: static public VROSC.WidgetSettings/VROSC.Identifier Clustr
      static ::VROSC::WidgetSettings::Identifier _get_Clustr();
      // Set static field: static public VROSC.WidgetSettings/VROSC.Identifier Clustr
      static void _set_Clustr(::VROSC::WidgetSettings::Identifier value);
      // static field const value: static public VROSC.WidgetSettings/VROSC.Identifier Wavemin
      static constexpr const int Wavemin = 4;
      // Get static field: static public VROSC.WidgetSettings/VROSC.Identifier Wavemin
      static ::VROSC::WidgetSettings::Identifier _get_Wavemin();
      // Set static field: static public VROSC.WidgetSettings/VROSC.Identifier Wavemin
      static void _set_Wavemin(::VROSC::WidgetSettings::Identifier value);
      // static field const value: static public VROSC.WidgetSettings/VROSC.Identifier Drumkit
      static constexpr const int Drumkit = 5;
      // Get static field: static public VROSC.WidgetSettings/VROSC.Identifier Drumkit
      static ::VROSC::WidgetSettings::Identifier _get_Drumkit();
      // Set static field: static public VROSC.WidgetSettings/VROSC.Identifier Drumkit
      static void _set_Drumkit(::VROSC::WidgetSettings::Identifier value);
      // static field const value: static public VROSC.WidgetSettings/VROSC.Identifier Empads
      static constexpr const int Empads = 6;
      // Get static field: static public VROSC.WidgetSettings/VROSC.Identifier Empads
      static ::VROSC::WidgetSettings::Identifier _get_Empads();
      // Set static field: static public VROSC.WidgetSettings/VROSC.Identifier Empads
      static void _set_Empads(::VROSC::WidgetSettings::Identifier value);
      // static field const value: static public VROSC.WidgetSettings/VROSC.Identifier Effects
      static constexpr const int Effects = 7;
      // Get static field: static public VROSC.WidgetSettings/VROSC.Identifier Effects
      static ::VROSC::WidgetSettings::Identifier _get_Effects();
      // Set static field: static public VROSC.WidgetSettings/VROSC.Identifier Effects
      static void _set_Effects(::VROSC::WidgetSettings::Identifier value);
      // static field const value: static public VROSC.WidgetSettings/VROSC.Identifier Looper
      static constexpr const int Looper = 8;
      // Get static field: static public VROSC.WidgetSettings/VROSC.Identifier Looper
      static ::VROSC::WidgetSettings::Identifier _get_Looper();
      // Set static field: static public VROSC.WidgetSettings/VROSC.Identifier Looper
      static void _set_Looper(::VROSC::WidgetSettings::Identifier value);
      // static field const value: static public VROSC.WidgetSettings/VROSC.Identifier Microphone
      static constexpr const int Microphone = 9;
      // Get static field: static public VROSC.WidgetSettings/VROSC.Identifier Microphone
      static ::VROSC::WidgetSettings::Identifier _get_Microphone();
      // Set static field: static public VROSC.WidgetSettings/VROSC.Identifier Microphone
      static void _set_Microphone(::VROSC::WidgetSettings::Identifier value);
      // static field const value: static public VROSC.WidgetSettings/VROSC.Identifier TapeRecorder
      static constexpr const int TapeRecorder = 10;
      // Get static field: static public VROSC.WidgetSettings/VROSC.Identifier TapeRecorder
      static ::VROSC::WidgetSettings::Identifier _get_TapeRecorder();
      // Set static field: static public VROSC.WidgetSettings/VROSC.Identifier TapeRecorder
      static void _set_TapeRecorder(::VROSC::WidgetSettings::Identifier value);
      // Get instance field reference: public System.Int32 value__
      int& dyn_value__();
    }; // VROSC.WidgetSettings/VROSC.Identifier
    #pragma pack(pop)
    static check_size<sizeof(WidgetSettings::Identifier), 0 + sizeof(int)> __VROSC_WidgetSettings_IdentifierSizeCheck;
    static_assert(sizeof(WidgetSettings::Identifier) == 0x4);
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private System.Single _spawnHeightModifier
    // Size: 0x4
    // Offset: 0x18
    float spawnHeightModifier;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private VROSC.WidgetSettings/VROSC.Identifier _id
    // Size: 0x4
    // Offset: 0x1C
    ::VROSC::WidgetSettings::Identifier id;
    // Field size check
    static_assert(sizeof(::VROSC::WidgetSettings::Identifier) == 0x4);
    // private System.String _displayName
    // Size: 0x8
    // Offset: 0x20
    ::StringW displayName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Single _spawnHeightModifier
    float& dyn__spawnHeightModifier();
    // Get instance field reference: private VROSC.WidgetSettings/VROSC.Identifier _id
    ::VROSC::WidgetSettings::Identifier& dyn__id();
    // Get instance field reference: private System.String _displayName
    ::StringW& dyn__displayName();
    // public VROSC.WidgetSettings/VROSC.Identifier get_ID()
    // Offset: 0x1356154
    ::VROSC::WidgetSettings::Identifier get_ID();
    // public System.Single get_SpawnHeightModifier()
    // Offset: 0x135615C
    float get_SpawnHeightModifier();
    // public System.String get_DisplayName()
    // Offset: 0x1356164
    ::StringW get_DisplayName();
    // public System.Void .ctor()
    // Offset: 0x135616C
    // Implemented from: UnityEngine.ScriptableObject
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WidgetSettings* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::WidgetSettings::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WidgetSettings*, creationType>()));
    }
  }; // VROSC.WidgetSettings
  #pragma pack(pop)
  static check_size<sizeof(WidgetSettings), 32 + sizeof(::StringW)> __VROSC_WidgetSettingsSizeCheck;
  static_assert(sizeof(WidgetSettings) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::VROSC::WidgetSettings::Identifier, "VROSC", "WidgetSettings/Identifier");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::WidgetSettings::get_ID
// Il2CppName: get_ID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::WidgetSettings::Identifier (VROSC::WidgetSettings::*)()>(&VROSC::WidgetSettings::get_ID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetSettings*), "get_ID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetSettings::get_SpawnHeightModifier
// Il2CppName: get_SpawnHeightModifier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (VROSC::WidgetSettings::*)()>(&VROSC::WidgetSettings::get_SpawnHeightModifier)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetSettings*), "get_SpawnHeightModifier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetSettings::get_DisplayName
// Il2CppName: get_DisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::WidgetSettings::*)()>(&VROSC::WidgetSettings::get_DisplayName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::WidgetSettings*), "get_DisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::WidgetSettings::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
