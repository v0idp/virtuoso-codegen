// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.UI.Meshes.AdjustableMeshData
#include "VROSC/UI/Meshes/AdjustableMeshData.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::UI::Meshes::AdjustableMeshData::$$c);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::UI::Meshes::AdjustableMeshData::$$c*, "VROSC.UI.Meshes", "AdjustableMeshData/<>c");
// Type namespace: VROSC.UI.Meshes
namespace VROSC::UI::Meshes {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.UI.Meshes.AdjustableMeshData/VROSC.UI.Meshes.<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class AdjustableMeshData::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly VROSC.UI.Meshes.AdjustableMeshData/VROSC.UI.Meshes.<>c <>9
    static ::VROSC::UI::Meshes::AdjustableMeshData::$$c* _get_$$9();
    // Set static field: static public readonly VROSC.UI.Meshes.AdjustableMeshData/VROSC.UI.Meshes.<>c <>9
    static void _set_$$9(::VROSC::UI::Meshes::AdjustableMeshData::$$c* value);
    // Get static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__24_0
    static ::System::Func_2<::UnityEngine::Vector3, float>* _get_$$9__24_0();
    // Set static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__24_0
    static void _set_$$9__24_0(::System::Func_2<::UnityEngine::Vector3, float>* value);
    // Get static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__24_1
    static ::System::Func_2<::UnityEngine::Vector3, float>* _get_$$9__24_1();
    // Set static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__24_1
    static void _set_$$9__24_1(::System::Func_2<::UnityEngine::Vector3, float>* value);
    // Get static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__24_2
    static ::System::Func_2<::UnityEngine::Vector3, float>* _get_$$9__24_2();
    // Set static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__24_2
    static void _set_$$9__24_2(::System::Func_2<::UnityEngine::Vector3, float>* value);
    // Get static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__24_3
    static ::System::Func_2<::UnityEngine::Vector3, float>* _get_$$9__24_3();
    // Set static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__24_3
    static void _set_$$9__24_3(::System::Func_2<::UnityEngine::Vector3, float>* value);
    // static private System.Void .cctor()
    // Offset: 0x956298
    static void _cctor();
    // System.Single <GetDimensions>b__24_0(UnityEngine.Vector3 o)
    // Offset: 0x956300
    float $GetDimensions$b__24_0(::UnityEngine::Vector3 o);
    // System.Single <GetDimensions>b__24_1(UnityEngine.Vector3 o)
    // Offset: 0x956304
    float $GetDimensions$b__24_1(::UnityEngine::Vector3 o);
    // System.Single <GetDimensions>b__24_2(UnityEngine.Vector3 o)
    // Offset: 0x956308
    float $GetDimensions$b__24_2(::UnityEngine::Vector3 o);
    // System.Single <GetDimensions>b__24_3(UnityEngine.Vector3 o)
    // Offset: 0x956310
    float $GetDimensions$b__24_3(::UnityEngine::Vector3 o);
    // public System.Void .ctor()
    // Offset: 0x9562F8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AdjustableMeshData::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::UI::Meshes::AdjustableMeshData::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AdjustableMeshData::$$c*, creationType>()));
    }
  }; // VROSC.UI.Meshes.AdjustableMeshData/VROSC.UI.Meshes.<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::UI::Meshes::AdjustableMeshData::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&VROSC::UI::Meshes::AdjustableMeshData::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::Meshes::AdjustableMeshData::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UI::Meshes::AdjustableMeshData::$$c::$GetDimensions$b__24_0
// Il2CppName: <GetDimensions>b__24_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (VROSC::UI::Meshes::AdjustableMeshData::$$c::*)(::UnityEngine::Vector3)>(&VROSC::UI::Meshes::AdjustableMeshData::$$c::$GetDimensions$b__24_0)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::Meshes::AdjustableMeshData::$$c*), "<GetDimensions>b__24_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o});
  }
};
// Writing MetadataGetter for method: VROSC::UI::Meshes::AdjustableMeshData::$$c::$GetDimensions$b__24_1
// Il2CppName: <GetDimensions>b__24_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (VROSC::UI::Meshes::AdjustableMeshData::$$c::*)(::UnityEngine::Vector3)>(&VROSC::UI::Meshes::AdjustableMeshData::$$c::$GetDimensions$b__24_1)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::Meshes::AdjustableMeshData::$$c*), "<GetDimensions>b__24_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o});
  }
};
// Writing MetadataGetter for method: VROSC::UI::Meshes::AdjustableMeshData::$$c::$GetDimensions$b__24_2
// Il2CppName: <GetDimensions>b__24_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (VROSC::UI::Meshes::AdjustableMeshData::$$c::*)(::UnityEngine::Vector3)>(&VROSC::UI::Meshes::AdjustableMeshData::$$c::$GetDimensions$b__24_2)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::Meshes::AdjustableMeshData::$$c*), "<GetDimensions>b__24_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o});
  }
};
// Writing MetadataGetter for method: VROSC::UI::Meshes::AdjustableMeshData::$$c::$GetDimensions$b__24_3
// Il2CppName: <GetDimensions>b__24_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (VROSC::UI::Meshes::AdjustableMeshData::$$c::*)(::UnityEngine::Vector3)>(&VROSC::UI::Meshes::AdjustableMeshData::$$c::$GetDimensions$b__24_3)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::Meshes::AdjustableMeshData::$$c*), "<GetDimensions>b__24_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o});
  }
};
// Writing MetadataGetter for method: VROSC::UI::Meshes::AdjustableMeshData::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
