// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.UI.UIInteractableColoring
#include "VROSC/UI/UIInteractableColoring.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Renderer
  class Renderer;
  // Forward declaring type: MaterialPropertyBlock
  class MaterialPropertyBlock;
}
// Completed forward declares
// Type namespace: VROSC.UI
namespace VROSC::UI {
  // Forward declaring type: UIScalePanelButtonColoring
  class UIScalePanelButtonColoring;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::UI::UIScalePanelButtonColoring);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::UI::UIScalePanelButtonColoring*, "VROSC.UI", "UIScalePanelButtonColoring");
// Type namespace: VROSC.UI
namespace VROSC::UI {
  // WARNING Size may be invalid!
  // Autogenerated type: VROSC.UI.UIScalePanelButtonColoring
  // [TokenAttribute] Offset: FFFFFFFF
  class UIScalePanelButtonColoring : public ::VROSC::UI::UIInteractableColoring {
    public:
    public:
    // private UnityEngine.Renderer _renderer
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Renderer* renderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::Renderer*) == 0x8);
    // private System.Boolean _natural
    // Size: 0x1
    // Offset: 0x50
    bool natural;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.MaterialPropertyBlock _materialBlock
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::MaterialPropertyBlock* materialBlock;
    // Field size check
    static_assert(sizeof(::UnityEngine::MaterialPropertyBlock*) == 0x8);
    // private System.Boolean _toggled
    // Size: 0x1
    // Offset: 0x60
    bool toggled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Int32 _axis
    // Size: 0x4
    // Offset: 0x64
    int axis;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private UnityEngine.Renderer _renderer
    [[deprecated]] ::UnityEngine::Renderer*& dyn__renderer();
    // Get instance field reference: private System.Boolean _natural
    [[deprecated]] bool& dyn__natural();
    // Get instance field reference: private UnityEngine.MaterialPropertyBlock _materialBlock
    [[deprecated]] ::UnityEngine::MaterialPropertyBlock*& dyn__materialBlock();
    // Get instance field reference: private System.Boolean _toggled
    [[deprecated]] bool& dyn__toggled();
    // Get instance field reference: private System.Int32 _axis
    [[deprecated]] int& dyn__axis();
    // private System.Void Awake()
    // Offset: 0x19131E4
    void Awake();
    // public System.Void SetAxis(System.Int32 axis)
    // Offset: 0x1913254
    void SetAxis(int axis);
    // public System.Void SetToggled(System.Boolean toggled)
    // Offset: 0x191325C
    void SetToggled(bool toggled);
    // private System.Void GetValues()
    // Offset: 0x19133D8
    void GetValues();
    // public System.Void .ctor()
    // Offset: 0x1913524
    // Implemented from: VROSC.UI.UIInteractableColoring
    // Base method: System.Void UIInteractableColoring::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UIScalePanelButtonColoring* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::UI::UIScalePanelButtonColoring::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UIScalePanelButtonColoring*, creationType>()));
    }
    // public override System.Void UpdateColor()
    // Offset: 0x1913268
    // Implemented from: VROSC.UI.UIInteractableColoring
    // Base method: System.Void UIInteractableColoring::UpdateColor()
    void UpdateColor();
  }; // VROSC.UI.UIScalePanelButtonColoring
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::UI::UIScalePanelButtonColoring::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UI::UIScalePanelButtonColoring::*)()>(&VROSC::UI::UIScalePanelButtonColoring::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::UIScalePanelButtonColoring*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UI::UIScalePanelButtonColoring::SetAxis
// Il2CppName: SetAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UI::UIScalePanelButtonColoring::*)(int)>(&VROSC::UI::UIScalePanelButtonColoring::SetAxis)> {
  static const MethodInfo* get() {
    static auto* axis = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::UIScalePanelButtonColoring*), "SetAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{axis});
  }
};
// Writing MetadataGetter for method: VROSC::UI::UIScalePanelButtonColoring::SetToggled
// Il2CppName: SetToggled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UI::UIScalePanelButtonColoring::*)(bool)>(&VROSC::UI::UIScalePanelButtonColoring::SetToggled)> {
  static const MethodInfo* get() {
    static auto* toggled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::UIScalePanelButtonColoring*), "SetToggled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{toggled});
  }
};
// Writing MetadataGetter for method: VROSC::UI::UIScalePanelButtonColoring::GetValues
// Il2CppName: GetValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UI::UIScalePanelButtonColoring::*)()>(&VROSC::UI::UIScalePanelButtonColoring::GetValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::UIScalePanelButtonColoring*), "GetValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UI::UIScalePanelButtonColoring::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::UI::UIScalePanelButtonColoring::UpdateColor
// Il2CppName: UpdateColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UI::UIScalePanelButtonColoring::*)()>(&VROSC::UI::UIScalePanelButtonColoring::UpdateColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::UIScalePanelButtonColoring*), "UpdateColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
