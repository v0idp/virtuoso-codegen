// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: VROSC.PointingLaser/VROSC.DisablingReason
#include "VROSC/PointingLaser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
}
// Completed forward declares
// Type namespace: VROSC.UI
namespace VROSC::UI {
  // Forward declaring type: DisablePointingTrigger
  class DisablePointingTrigger;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::UI::DisablePointingTrigger);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::UI::DisablePointingTrigger*, "VROSC.UI", "DisablePointingTrigger");
// Type namespace: VROSC.UI
namespace VROSC::UI {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.UI.DisablePointingTrigger
  // [TokenAttribute] Offset: FFFFFFFF
  class DisablePointingTrigger : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private VROSC.PointingLaser/VROSC.DisablingReason _disablingReason
    // Size: 0x4
    // Offset: 0x18
    ::VROSC::PointingLaser::DisablingReason disablingReason;
    // Field size check
    static_assert(sizeof(::VROSC::PointingLaser::DisablingReason) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.PointingLaser/VROSC.DisablingReason _disablingReason
    [[deprecated("Use field access instead!")]] ::VROSC::PointingLaser::DisablingReason& dyn__disablingReason();
    // public System.Void .ctor()
    // Offset: 0x8E506C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DisablePointingTrigger* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::UI::DisablePointingTrigger::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DisablePointingTrigger*, creationType>()));
    }
    // private System.Void OnTriggerEnter(UnityEngine.Collider other)
    // Offset: 0x8E4EC4
    void OnTriggerEnter(::UnityEngine::Collider* other);
    // private System.Void OnTriggerExit(UnityEngine.Collider other)
    // Offset: 0x8E4F98
    void OnTriggerExit(::UnityEngine::Collider* other);
  }; // VROSC.UI.DisablePointingTrigger
  #pragma pack(pop)
  static check_size<sizeof(DisablePointingTrigger), 24 + sizeof(::VROSC::PointingLaser::DisablingReason)> __VROSC_UI_DisablePointingTriggerSizeCheck;
  static_assert(sizeof(DisablePointingTrigger) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::UI::DisablePointingTrigger::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::UI::DisablePointingTrigger::OnTriggerEnter
// Il2CppName: OnTriggerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UI::DisablePointingTrigger::*)(::UnityEngine::Collider*)>(&VROSC::UI::DisablePointingTrigger::OnTriggerEnter)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::DisablePointingTrigger*), "OnTriggerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: VROSC::UI::DisablePointingTrigger::OnTriggerExit
// Il2CppName: OnTriggerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UI::DisablePointingTrigger::*)(::UnityEngine::Collider*)>(&VROSC::UI::DisablePointingTrigger::OnTriggerExit)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::DisablePointingTrigger*), "OnTriggerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
