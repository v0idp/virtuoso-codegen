// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: UIButton
  class UIButton;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: VROSC.UI
namespace VROSC::UI {
  // Forward declaring type: TabButton
  class TabButton;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::UI::TabButton);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::UI::TabButton*, "VROSC.UI", "TabButton");
// Type namespace: VROSC.UI
namespace VROSC::UI {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.UI.TabButton
  // [TokenAttribute] Offset: FFFFFFFF
  class TabButton : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private System.String _tabId
    // Size: 0x8
    // Offset: 0x18
    ::StringW tabId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private VROSC.UIButton _button
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::UIButton* button;
    // Field size check
    static_assert(sizeof(::VROSC::UIButton*) == 0x8);
    // private UnityEngine.GameObject _activeBackground
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* activeBackground;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject _tabTarget
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* tabTarget;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Boolean _isActive
    // Size: 0x1
    // Offset: 0x38
    bool isActive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _isEnabled
    // Size: 0x1
    // Offset: 0x39
    bool isEnabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isEnabled and: OnTabActivated
    char __padding5[0x6] = {};
    // public System.Action`1<VROSC.UI.TabButton> OnTabActivated
    // Size: 0x8
    // Offset: 0x40
    ::System::Action_1<::VROSC::UI::TabButton*>* OnTabActivated;
    // Field size check
    static_assert(sizeof(::System::Action_1<::VROSC::UI::TabButton*>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.String _tabId
    [[deprecated]] ::StringW& dyn__tabId();
    // Get instance field reference: private VROSC.UIButton _button
    [[deprecated]] ::VROSC::UIButton*& dyn__button();
    // Get instance field reference: private UnityEngine.GameObject _activeBackground
    [[deprecated]] ::UnityEngine::GameObject*& dyn__activeBackground();
    // Get instance field reference: private UnityEngine.GameObject _tabTarget
    [[deprecated]] ::UnityEngine::GameObject*& dyn__tabTarget();
    // Get instance field reference: private System.Boolean _isActive
    [[deprecated]] bool& dyn__isActive();
    // Get instance field reference: private System.Boolean _isEnabled
    [[deprecated]] bool& dyn__isEnabled();
    // Get instance field reference: public System.Action`1<VROSC.UI.TabButton> OnTabActivated
    [[deprecated]] ::System::Action_1<::VROSC::UI::TabButton*>*& dyn_OnTabActivated();
    // public System.String get_Id()
    // Offset: 0x193A368
    ::StringW get_Id();
    // public UnityEngine.GameObject get_Target()
    // Offset: 0x193A370
    ::UnityEngine::GameObject* get_Target();
    // private System.Void Awake()
    // Offset: 0x193A378
    void Awake();
    // private System.Void Clicked()
    // Offset: 0x193A438
    void Clicked();
    // public System.Void SetEnabled(System.Boolean enabled)
    // Offset: 0x193A4A8
    void SetEnabled(bool enabled);
    // public System.Void SetActive(System.Boolean active)
    // Offset: 0x193A4B4
    void SetActive(bool active);
    // public System.Void .ctor()
    // Offset: 0x193A514
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TabButton* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::UI::TabButton::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TabButton*, creationType>()));
    }
  }; // VROSC.UI.TabButton
  #pragma pack(pop)
  static check_size<sizeof(TabButton), 64 + sizeof(::System::Action_1<::VROSC::UI::TabButton*>*)> __VROSC_UI_TabButtonSizeCheck;
  static_assert(sizeof(TabButton) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::UI::TabButton::get_Id
// Il2CppName: get_Id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::UI::TabButton::*)()>(&VROSC::UI::TabButton::get_Id)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::TabButton*), "get_Id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UI::TabButton::get_Target
// Il2CppName: get_Target
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (VROSC::UI::TabButton::*)()>(&VROSC::UI::TabButton::get_Target)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::TabButton*), "get_Target", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UI::TabButton::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UI::TabButton::*)()>(&VROSC::UI::TabButton::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::TabButton*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UI::TabButton::Clicked
// Il2CppName: Clicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UI::TabButton::*)()>(&VROSC::UI::TabButton::Clicked)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::TabButton*), "Clicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UI::TabButton::SetEnabled
// Il2CppName: SetEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UI::TabButton::*)(bool)>(&VROSC::UI::TabButton::SetEnabled)> {
  static const MethodInfo* get() {
    static auto* enabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::TabButton*), "SetEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{enabled});
  }
};
// Writing MetadataGetter for method: VROSC::UI::TabButton::SetActive
// Il2CppName: SetActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UI::TabButton::*)(bool)>(&VROSC::UI::TabButton::SetActive)> {
  static const MethodInfo* get() {
    static auto* active = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::TabButton*), "SetActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{active});
  }
};
// Writing MetadataGetter for method: VROSC::UI::TabButton::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
