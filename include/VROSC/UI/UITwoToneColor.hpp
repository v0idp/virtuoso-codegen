// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: VROSC.UI
namespace VROSC::UI {
  // Forward declaring type: UITwoToneColor
  class UITwoToneColor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::UI::UITwoToneColor);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::UI::UITwoToneColor*, "VROSC.UI", "UITwoToneColor");
// Type namespace: VROSC.UI
namespace VROSC::UI {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.UI.UITwoToneColor
  // [TokenAttribute] Offset: FFFFFFFF
  class UITwoToneColor : public ::Il2CppObject {
    public:
    public:
    // protected UnityEngine.Color _startColor
    // Size: 0x10
    // Offset: 0x10
    ::UnityEngine::Color startColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // protected UnityEngine.Color _endColor
    // Size: 0x10
    // Offset: 0x20
    ::UnityEngine::Color endColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    public:
    // Get instance field reference: protected UnityEngine.Color _startColor
    [[deprecated]] ::UnityEngine::Color& dyn__startColor();
    // Get instance field reference: protected UnityEngine.Color _endColor
    [[deprecated]] ::UnityEngine::Color& dyn__endColor();
    // public UnityEngine.Color get_StartColor()
    // Offset: 0x1919AB8
    ::UnityEngine::Color get_StartColor();
    // public UnityEngine.Color get_EndColor()
    // Offset: 0x1919AC4
    ::UnityEngine::Color get_EndColor();
    // public System.Void .ctor(UnityEngine.Color startColor, UnityEngine.Color endColor)
    // Offset: 0x1919A20
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UITwoToneColor* New_ctor(::UnityEngine::Color startColor, ::UnityEngine::Color endColor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::UI::UITwoToneColor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UITwoToneColor*, creationType>(startColor, endColor)));
    }
    // static public VROSC.UI.UITwoToneColor MultiplyColor(VROSC.UI.UITwoToneColor color, System.Single multiplier)
    // Offset: 0x190EF60
    static ::VROSC::UI::UITwoToneColor* MultiplyColor(::VROSC::UI::UITwoToneColor* color, float multiplier);
    // static public VROSC.UI.UITwoToneColor DesaturateColor(VROSC.UI.UITwoToneColor color, System.Single desaturation, System.Single darken)
    // Offset: 0x190F050
    static ::VROSC::UI::UITwoToneColor* DesaturateColor(::VROSC::UI::UITwoToneColor* color, float desaturation, float darken);
    // static public UnityEngine.Color DesaturateColor(UnityEngine.Color color, System.Single desaturation, System.Single darken)
    // Offset: 0x1919AD0
    static ::UnityEngine::Color DesaturateColor(::UnityEngine::Color color, float desaturation, float darken);
  }; // VROSC.UI.UITwoToneColor
  #pragma pack(pop)
  static check_size<sizeof(UITwoToneColor), 32 + sizeof(::UnityEngine::Color)> __VROSC_UI_UITwoToneColorSizeCheck;
  static_assert(sizeof(UITwoToneColor) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::UI::UITwoToneColor::get_StartColor
// Il2CppName: get_StartColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (VROSC::UI::UITwoToneColor::*)()>(&VROSC::UI::UITwoToneColor::get_StartColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::UITwoToneColor*), "get_StartColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UI::UITwoToneColor::get_EndColor
// Il2CppName: get_EndColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (VROSC::UI::UITwoToneColor::*)()>(&VROSC::UI::UITwoToneColor::get_EndColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::UITwoToneColor*), "get_EndColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UI::UITwoToneColor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::UI::UITwoToneColor::MultiplyColor
// Il2CppName: MultiplyColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::UI::UITwoToneColor* (*)(::VROSC::UI::UITwoToneColor*, float)>(&VROSC::UI::UITwoToneColor::MultiplyColor)> {
  static const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("VROSC.UI", "UITwoToneColor")->byval_arg;
    static auto* multiplier = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::UITwoToneColor*), "MultiplyColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color, multiplier});
  }
};
// Writing MetadataGetter for method: VROSC::UI::UITwoToneColor::DesaturateColor
// Il2CppName: DesaturateColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::UI::UITwoToneColor* (*)(::VROSC::UI::UITwoToneColor*, float, float)>(&VROSC::UI::UITwoToneColor::DesaturateColor)> {
  static const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("VROSC.UI", "UITwoToneColor")->byval_arg;
    static auto* desaturation = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* darken = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::UITwoToneColor*), "DesaturateColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color, desaturation, darken});
  }
};
// Writing MetadataGetter for method: VROSC::UI::UITwoToneColor::DesaturateColor
// Il2CppName: DesaturateColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (*)(::UnityEngine::Color, float, float)>(&VROSC::UI::UITwoToneColor::DesaturateColor)> {
  static const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* desaturation = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* darken = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::UITwoToneColor*), "DesaturateColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color, desaturation, darken});
  }
};
