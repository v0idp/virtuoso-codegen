// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: Rect
  struct Rect;
}
// Completed forward declares
// Type namespace: VROSC.UI
namespace VROSC::UI {
  // Forward declaring type: IconData
  class IconData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::UI::IconData);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::UI::IconData*, "VROSC.UI", "IconData");
// Type namespace: VROSC.UI
namespace VROSC::UI {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.UI.IconData
  // [TokenAttribute] Offset: FFFFFFFF
  // [CreateAssetMenuAttribute] Offset: 7810CC
  class IconData : public ::UnityEngine::ScriptableObject {
    public:
    public:
    // private UnityEngine.Mesh _mesh
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Mesh* mesh;
    // Field size check
    static_assert(sizeof(::UnityEngine::Mesh*) == 0x8);
    // private System.Boolean _colorized
    // Size: 0x1
    // Offset: 0x20
    bool colorized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.Mesh _mesh
    [[deprecated]] ::UnityEngine::Mesh*& dyn__mesh();
    // Get instance field reference: private System.Boolean _colorized
    [[deprecated]] bool& dyn__colorized();
    // public UnityEngine.Mesh get_Mesh()
    // Offset: 0x1942604
    ::UnityEngine::Mesh* get_Mesh();
    // public System.Void Resize(UnityEngine.Mesh mesh, UnityEngine.Rect rect, System.Single scale)
    // Offset: 0x194260C
    void Resize(::UnityEngine::Mesh* mesh, ::UnityEngine::Rect rect, float scale);
    // public System.Void .ctor()
    // Offset: 0x19427A4
    // Implemented from: UnityEngine.ScriptableObject
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static IconData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::UI::IconData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<IconData*, creationType>()));
    }
  }; // VROSC.UI.IconData
  #pragma pack(pop)
  static check_size<sizeof(IconData), 32 + sizeof(bool)> __VROSC_UI_IconDataSizeCheck;
  static_assert(sizeof(IconData) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::UI::IconData::get_Mesh
// Il2CppName: get_Mesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Mesh* (VROSC::UI::IconData::*)()>(&VROSC::UI::IconData::get_Mesh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::IconData*), "get_Mesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UI::IconData::Resize
// Il2CppName: Resize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UI::IconData::*)(::UnityEngine::Mesh*, ::UnityEngine::Rect, float)>(&VROSC::UI::IconData::Resize)> {
  static const MethodInfo* get() {
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* rect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UI::IconData*), "Resize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mesh, rect, scale});
  }
};
// Writing MetadataGetter for method: VROSC::UI::IconData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
