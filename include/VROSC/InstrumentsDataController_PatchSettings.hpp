// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.InstrumentsDataController
#include "VROSC/InstrumentsDataController.hpp"
// Including type: VROSC.WidgetSettings/VROSC.Identifier
#include "VROSC/WidgetSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::InstrumentsDataController::PatchSettings);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::InstrumentsDataController::PatchSettings*, "VROSC", "InstrumentsDataController/PatchSettings");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.InstrumentsDataController/VROSC.PatchSettings
  // [TokenAttribute] Offset: FFFFFFFF
  class InstrumentsDataController::PatchSettings : public ::Il2CppObject {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // public VROSC.WidgetSettings/VROSC.Identifier InstrumentId
    // Size: 0x4
    // Offset: 0x10
    ::VROSC::WidgetSettings::Identifier InstrumentId;
    // Field size check
    static_assert(sizeof(::VROSC::WidgetSettings::Identifier) == 0x4);
    // Padding between fields: InstrumentId and: Patch
    char __padding0[0x4] = {};
    // public System.Object Patch
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppObject* Patch;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    public:
    // Get instance field reference: public VROSC.WidgetSettings/VROSC.Identifier InstrumentId
    ::VROSC::WidgetSettings::Identifier& dyn_InstrumentId();
    // Get instance field reference: public System.Object Patch
    ::Il2CppObject*& dyn_Patch();
    // public System.Void .ctor()
    // Offset: 0x13D0DD8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InstrumentsDataController::PatchSettings* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::PatchSettings::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InstrumentsDataController::PatchSettings*, creationType>()));
    }
  }; // VROSC.InstrumentsDataController/VROSC.PatchSettings
  #pragma pack(pop)
  static check_size<sizeof(InstrumentsDataController::PatchSettings), 24 + sizeof(::Il2CppObject*)> __VROSC_InstrumentsDataController_PatchSettingsSizeCheck;
  static_assert(sizeof(InstrumentsDataController::PatchSettings) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::InstrumentsDataController::PatchSettings::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
