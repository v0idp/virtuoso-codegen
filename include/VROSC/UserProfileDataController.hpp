// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.BaseDataController
#include "VROSC/BaseDataController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: UserProfileDataModel
  class UserProfileDataModel;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: UserProfileDataController
  class UserProfileDataController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::UserProfileDataController);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::UserProfileDataController*, "VROSC", "UserProfileDataController");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.UserProfileDataController
  // [TokenAttribute] Offset: FFFFFFFF
  class UserProfileDataController : public ::VROSC::BaseDataController {
    public:
    // Nested type: ::VROSC::UserProfileDataController::$$c__DisplayClass29_0
    class $$c__DisplayClass29_0;
    // protected VROSC.UserProfileDataModel get_DataModel()
    // Offset: 0x191F1DC
    ::VROSC::UserProfileDataModel* get_DataModel();
    // public System.String get_Username()
    // Offset: 0x191F2FC
    ::StringW get_Username();
    // public System.Void set_Username(System.String value)
    // Offset: 0x191F31C
    void set_Username(::StringW value);
    // public System.String get_Email()
    // Offset: 0x191F354
    ::StringW get_Email();
    // public System.Void set_Email(System.String value)
    // Offset: 0x191F374
    void set_Email(::StringW value);
    // public System.Void set_OculusId(System.String value)
    // Offset: 0x191F3AC
    void set_OculusId(::StringW value);
    // public System.Void set_OculusUsername(System.String value)
    // Offset: 0x191F3E4
    void set_OculusUsername(::StringW value);
    // public System.String get_SteamId()
    // Offset: 0x191F444
    ::StringW get_SteamId();
    // public System.Void set_SteamId(System.String value)
    // Offset: 0x191F464
    void set_SteamId(::StringW value);
    // public System.String get_SteamUsername()
    // Offset: 0x191F49C
    ::StringW get_SteamUsername();
    // public System.Void set_SteamUsername(System.String value)
    // Offset: 0x191F4BC
    void set_SteamUsername(::StringW value);
    // public System.String get_LastLogin()
    // Offset: 0x191F51C
    ::StringW get_LastLogin();
    // public System.Void set_LastLogin(System.String value)
    // Offset: 0x191F53C
    void set_LastLogin(::StringW value);
    // public System.String get_CreationDate()
    // Offset: 0x191F574
    ::StringW get_CreationDate();
    // public System.Void set_CreationDate(System.String value)
    // Offset: 0x191F594
    void set_CreationDate(::StringW value);
    // public System.String get_AcceptedEULAVersion()
    // Offset: 0x191F5CC
    ::StringW get_AcceptedEULAVersion();
    // public System.Void set_AcceptedEULAVersion(System.String value)
    // Offset: 0x191F5EC
    void set_AcceptedEULAVersion(::StringW value);
    // public System.Void .ctor()
    // Offset: 0x191A2CC
    // Implemented from: VROSC.BaseDataController
    // Base method: System.Void BaseDataController::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UserProfileDataController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::UserProfileDataController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UserProfileDataController*, creationType>()));
    }
    // public override System.Void SaveCloudData(System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x191F624
    // Implemented from: VROSC.BaseDataController
    // Base method: System.Void BaseDataController::SaveCloudData(System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    void SaveCloudData(::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
    // public override System.Void LoadCloudData(System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    // Offset: 0x191F968
    // Implemented from: VROSC.BaseDataController
    // Base method: System.Void BaseDataController::LoadCloudData(System.Action onSuccess, System.Action`1<VROSC.Error> onFailure)
    void LoadCloudData(::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure);
  }; // VROSC.UserProfileDataController
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::UserProfileDataController::get_DataModel
// Il2CppName: get_DataModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::UserProfileDataModel* (VROSC::UserProfileDataController::*)()>(&VROSC::UserProfileDataController::get_DataModel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "get_DataModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::get_Username
// Il2CppName: get_Username
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::UserProfileDataController::*)()>(&VROSC::UserProfileDataController::get_Username)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "get_Username", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::set_Username
// Il2CppName: set_Username
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserProfileDataController::*)(::StringW)>(&VROSC::UserProfileDataController::set_Username)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "set_Username", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::get_Email
// Il2CppName: get_Email
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::UserProfileDataController::*)()>(&VROSC::UserProfileDataController::get_Email)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "get_Email", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::set_Email
// Il2CppName: set_Email
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserProfileDataController::*)(::StringW)>(&VROSC::UserProfileDataController::set_Email)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "set_Email", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::set_OculusId
// Il2CppName: set_OculusId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserProfileDataController::*)(::StringW)>(&VROSC::UserProfileDataController::set_OculusId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "set_OculusId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::set_OculusUsername
// Il2CppName: set_OculusUsername
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserProfileDataController::*)(::StringW)>(&VROSC::UserProfileDataController::set_OculusUsername)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "set_OculusUsername", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::get_SteamId
// Il2CppName: get_SteamId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::UserProfileDataController::*)()>(&VROSC::UserProfileDataController::get_SteamId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "get_SteamId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::set_SteamId
// Il2CppName: set_SteamId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserProfileDataController::*)(::StringW)>(&VROSC::UserProfileDataController::set_SteamId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "set_SteamId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::get_SteamUsername
// Il2CppName: get_SteamUsername
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::UserProfileDataController::*)()>(&VROSC::UserProfileDataController::get_SteamUsername)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "get_SteamUsername", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::set_SteamUsername
// Il2CppName: set_SteamUsername
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserProfileDataController::*)(::StringW)>(&VROSC::UserProfileDataController::set_SteamUsername)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "set_SteamUsername", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::get_LastLogin
// Il2CppName: get_LastLogin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::UserProfileDataController::*)()>(&VROSC::UserProfileDataController::get_LastLogin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "get_LastLogin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::set_LastLogin
// Il2CppName: set_LastLogin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserProfileDataController::*)(::StringW)>(&VROSC::UserProfileDataController::set_LastLogin)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "set_LastLogin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::get_CreationDate
// Il2CppName: get_CreationDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::UserProfileDataController::*)()>(&VROSC::UserProfileDataController::get_CreationDate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "get_CreationDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::set_CreationDate
// Il2CppName: set_CreationDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserProfileDataController::*)(::StringW)>(&VROSC::UserProfileDataController::set_CreationDate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "set_CreationDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::get_AcceptedEULAVersion
// Il2CppName: get_AcceptedEULAVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::UserProfileDataController::*)()>(&VROSC::UserProfileDataController::get_AcceptedEULAVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "get_AcceptedEULAVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::set_AcceptedEULAVersion
// Il2CppName: set_AcceptedEULAVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserProfileDataController::*)(::StringW)>(&VROSC::UserProfileDataController::set_AcceptedEULAVersion)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "set_AcceptedEULAVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::UserProfileDataController::SaveCloudData
// Il2CppName: SaveCloudData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserProfileDataController::*)(::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::UserProfileDataController::SaveCloudData)> {
  static const MethodInfo* get() {
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "SaveCloudData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::UserProfileDataController::LoadCloudData
// Il2CppName: LoadCloudData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UserProfileDataController::*)(::System::Action*, ::System::Action_1<::VROSC::Error>*)>(&VROSC::UserProfileDataController::LoadCloudData)> {
  static const MethodInfo* get() {
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UserProfileDataController*), "LoadCloudData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{onSuccess, onFailure});
  }
};
