// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.AuthenticationManager
#include "VROSC/AuthenticationManager.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::AuthenticationManager::LocalUserData);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::AuthenticationManager::LocalUserData*, "VROSC", "AuthenticationManager/LocalUserData");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x2A
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.AuthenticationManager/VROSC.LocalUserData
  // [TokenAttribute] Offset: FFFFFFFF
  class AuthenticationManager::LocalUserData : public ::Il2CppObject {
    public:
    public:
    // public System.String Email
    // Size: 0x8
    // Offset: 0x10
    ::StringW Email;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String Password
    // Size: 0x8
    // Offset: 0x18
    ::StringW Password;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.DateTime LastLoginDate
    // Size: 0x8
    // Offset: 0x20
    ::System::DateTime LastLoginDate;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    // public System.Boolean RememberMe
    // Size: 0x1
    // Offset: 0x28
    bool RememberMe;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean SentVerificationEmail
    // Size: 0x1
    // Offset: 0x29
    bool SentVerificationEmail;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public System.String Email
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Email();
    // Get instance field reference: public System.String Password
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Password();
    // Get instance field reference: public System.DateTime LastLoginDate
    [[deprecated("Use field access instead!")]] ::System::DateTime& dyn_LastLoginDate();
    // Get instance field reference: public System.Boolean RememberMe
    [[deprecated("Use field access instead!")]] bool& dyn_RememberMe();
    // Get instance field reference: public System.Boolean SentVerificationEmail
    [[deprecated("Use field access instead!")]] bool& dyn_SentVerificationEmail();
    // public System.Boolean get_HasData()
    // Offset: 0x957B2C
    bool get_HasData();
    // public System.Void .ctor()
    // Offset: 0x957B50
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AuthenticationManager::LocalUserData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::LocalUserData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AuthenticationManager::LocalUserData*, creationType>()));
    }
  }; // VROSC.AuthenticationManager/VROSC.LocalUserData
  #pragma pack(pop)
  static check_size<sizeof(AuthenticationManager::LocalUserData), 41 + sizeof(bool)> __VROSC_AuthenticationManager_LocalUserDataSizeCheck;
  static_assert(sizeof(AuthenticationManager::LocalUserData) == 0x2A);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::AuthenticationManager::LocalUserData::get_HasData
// Il2CppName: get_HasData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::AuthenticationManager::LocalUserData::*)()>(&VROSC::AuthenticationManager::LocalUserData::get_HasData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager::LocalUserData*), "get_HasData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::LocalUserData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
