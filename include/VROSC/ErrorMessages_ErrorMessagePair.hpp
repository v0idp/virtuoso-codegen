// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.ErrorMessages
#include "VROSC/ErrorMessages.hpp"
// Including type: VROSC.Error
#include "VROSC/Error.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::ErrorMessages::ErrorMessagePair);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::ErrorMessages::ErrorMessagePair*, "VROSC", "ErrorMessages/ErrorMessagePair");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.ErrorMessages/VROSC.ErrorMessagePair
  // [TokenAttribute] Offset: FFFFFFFF
  class ErrorMessages::ErrorMessagePair : public ::Il2CppObject {
    public:
    public:
    // public VROSC.Error Id
    // Size: 0x4
    // Offset: 0x10
    ::VROSC::Error Id;
    // Field size check
    static_assert(sizeof(::VROSC::Error) == 0x4);
    // Padding between fields: Id and: Message
    char __padding0[0x4] = {};
    // public System.String Message
    // Size: 0x8
    // Offset: 0x18
    ::StringW Message;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public VROSC.Error Id
    [[deprecated("Use field access instead!")]] ::VROSC::Error& dyn_Id();
    // Get instance field reference: public System.String Message
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Message();
    // public System.Void .ctor()
    // Offset: 0x95F77C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ErrorMessages::ErrorMessagePair* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ErrorMessages::ErrorMessagePair::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ErrorMessages::ErrorMessagePair*, creationType>()));
    }
  }; // VROSC.ErrorMessages/VROSC.ErrorMessagePair
  #pragma pack(pop)
  static check_size<sizeof(ErrorMessages::ErrorMessagePair), 24 + sizeof(::StringW)> __VROSC_ErrorMessages_ErrorMessagePairSizeCheck;
  static_assert(sizeof(ErrorMessages::ErrorMessagePair) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::ErrorMessages::ErrorMessagePair::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
