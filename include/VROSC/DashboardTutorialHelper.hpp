// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: TutorialBlinkingUIElement
  class TutorialBlinkingUIElement;
  // Forward declaring type: Interactable
  class Interactable;
  // Forward declaring type: TutorialEvent
  struct TutorialEvent;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: DashboardTutorialHelper
  class DashboardTutorialHelper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::DashboardTutorialHelper);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::DashboardTutorialHelper*, "VROSC", "DashboardTutorialHelper");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.DashboardTutorialHelper
  // [TokenAttribute] Offset: FFFFFFFF
  class DashboardTutorialHelper : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.GameObject _interactablesParent
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::GameObject* interactablesParent;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private VROSC.TutorialBlinkingUIElement _boardButtonBlink
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::TutorialBlinkingUIElement* boardButtonBlink;
    // Field size check
    static_assert(sizeof(::VROSC::TutorialBlinkingUIElement*) == 0x8);
    // private VROSC.Interactable _boardButtonInteractable
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::Interactable* boardButtonInteractable;
    // Field size check
    static_assert(sizeof(::VROSC::Interactable*) == 0x8);
    // private VROSC.TutorialBlinkingUIElement _empadsButtonBlink
    // Size: 0x8
    // Offset: 0x30
    ::VROSC::TutorialBlinkingUIElement* empadsButtonBlink;
    // Field size check
    static_assert(sizeof(::VROSC::TutorialBlinkingUIElement*) == 0x8);
    // private VROSC.Interactable _empadsButtonInteractable
    // Size: 0x8
    // Offset: 0x38
    ::VROSC::Interactable* empadsButtonInteractable;
    // Field size check
    static_assert(sizeof(::VROSC::Interactable*) == 0x8);
    // private VROSC.TutorialBlinkingUIElement _looperButtonBlink
    // Size: 0x8
    // Offset: 0x40
    ::VROSC::TutorialBlinkingUIElement* looperButtonBlink;
    // Field size check
    static_assert(sizeof(::VROSC::TutorialBlinkingUIElement*) == 0x8);
    // private VROSC.Interactable _looperButtonInteractable
    // Size: 0x8
    // Offset: 0x48
    ::VROSC::Interactable* looperButtonInteractable;
    // Field size check
    static_assert(sizeof(::VROSC::Interactable*) == 0x8);
    // private VROSC.TutorialBlinkingUIElement _libraryButtonBlink
    // Size: 0x8
    // Offset: 0x50
    ::VROSC::TutorialBlinkingUIElement* libraryButtonBlink;
    // Field size check
    static_assert(sizeof(::VROSC::TutorialBlinkingUIElement*) == 0x8);
    // private VROSC.Interactable _libraryButtonInteractable
    // Size: 0x8
    // Offset: 0x58
    ::VROSC::Interactable* libraryButtonInteractable;
    // Field size check
    static_assert(sizeof(::VROSC::Interactable*) == 0x8);
    // private System.Collections.Generic.List`1<VROSC.Interactable> _disabledInteractables
    // Size: 0x8
    // Offset: 0x60
    ::System::Collections::Generic::List_1<::VROSC::Interactable*>* disabledInteractables;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::VROSC::Interactable*>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.GameObject _interactablesParent
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn__interactablesParent();
    // Get instance field reference: private VROSC.TutorialBlinkingUIElement _boardButtonBlink
    [[deprecated("Use field access instead!")]] ::VROSC::TutorialBlinkingUIElement*& dyn__boardButtonBlink();
    // Get instance field reference: private VROSC.Interactable _boardButtonInteractable
    [[deprecated("Use field access instead!")]] ::VROSC::Interactable*& dyn__boardButtonInteractable();
    // Get instance field reference: private VROSC.TutorialBlinkingUIElement _empadsButtonBlink
    [[deprecated("Use field access instead!")]] ::VROSC::TutorialBlinkingUIElement*& dyn__empadsButtonBlink();
    // Get instance field reference: private VROSC.Interactable _empadsButtonInteractable
    [[deprecated("Use field access instead!")]] ::VROSC::Interactable*& dyn__empadsButtonInteractable();
    // Get instance field reference: private VROSC.TutorialBlinkingUIElement _looperButtonBlink
    [[deprecated("Use field access instead!")]] ::VROSC::TutorialBlinkingUIElement*& dyn__looperButtonBlink();
    // Get instance field reference: private VROSC.Interactable _looperButtonInteractable
    [[deprecated("Use field access instead!")]] ::VROSC::Interactable*& dyn__looperButtonInteractable();
    // Get instance field reference: private VROSC.TutorialBlinkingUIElement _libraryButtonBlink
    [[deprecated("Use field access instead!")]] ::VROSC::TutorialBlinkingUIElement*& dyn__libraryButtonBlink();
    // Get instance field reference: private VROSC.Interactable _libraryButtonInteractable
    [[deprecated("Use field access instead!")]] ::VROSC::Interactable*& dyn__libraryButtonInteractable();
    // Get instance field reference: private System.Collections.Generic.List`1<VROSC.Interactable> _disabledInteractables
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VROSC::Interactable*>*& dyn__disabledInteractables();
    // public System.Void .ctor()
    // Offset: 0x8E2944
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DashboardTutorialHelper* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DashboardTutorialHelper::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DashboardTutorialHelper*, creationType>()));
    }
    // protected System.Void Start()
    // Offset: 0x8E1728
    void Start();
    // private System.Void TutorialEventTriggered(VROSC.TutorialEvent tutorialEvent)
    // Offset: 0x8E18A4
    void TutorialEventTriggered(::VROSC::TutorialEvent tutorialEvent);
    // private System.Void BoardButtonClicked(System.Boolean clicked)
    // Offset: 0x8E22CC
    void BoardButtonClicked(bool clicked);
    // private System.Void DisableAllInteractables()
    // Offset: 0x8E1B30
    void DisableAllInteractables();
    // private System.Void DisableBoardButton()
    // Offset: 0x8E1EC0
    void DisableBoardButton();
    // private System.Void EnableBoardButton()
    // Offset: 0x8E1C44
    void EnableBoardButton();
    // private System.Void EnableEmpadsButton()
    // Offset: 0x8E1F34
    void EnableEmpadsButton();
    // private System.Void StartBoardButtonBlinking()
    // Offset: 0x8E1CB8
    void StartBoardButtonBlinking();
    // private System.Void EnableLooperButton()
    // Offset: 0x8E1FA8
    void EnableLooperButton();
    // private System.Void EnableLibraryButton()
    // Offset: 0x8E214C
    void EnableLibraryButton();
    // private System.Void StartLibraryButtonBlinking()
    // Offset: 0x8E223C
    void StartLibraryButtonBlinking();
    // private System.Void LooperButtonPressed(System.Boolean enabled)
    // Offset: 0x8E23FC
    void LooperButtonPressed(bool enabled);
    // private System.Void StartLooperButtonBlinking()
    // Offset: 0x8E20BC
    void StartLooperButtonBlinking();
    // private System.Void StopBoardButtonBlinking()
    // Offset: 0x8E1D48
    void StopBoardButtonBlinking();
    // private System.Void EmpadsButtonPressed(System.Boolean enabled)
    // Offset: 0x8E2554
    void EmpadsButtonPressed(bool enabled);
    // private System.Void LibraryButtonPressed(System.Boolean enabled)
    // Offset: 0x8E26AC
    void LibraryButtonPressed(bool enabled);
    // private System.Void BoardOpenedAgain(System.Boolean enabled)
    // Offset: 0x8E2804
    void BoardOpenedAgain(bool enabled);
    // private System.Void ResetAll()
    // Offset: 0x8E1D94
    void ResetAll();
  }; // VROSC.DashboardTutorialHelper
  #pragma pack(pop)
  static check_size<sizeof(DashboardTutorialHelper), 96 + sizeof(::System::Collections::Generic::List_1<::VROSC::Interactable*>*)> __VROSC_DashboardTutorialHelperSizeCheck;
  static_assert(sizeof(DashboardTutorialHelper) == 0x68);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)()>(&VROSC::DashboardTutorialHelper::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::TutorialEventTriggered
// Il2CppName: TutorialEventTriggered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)(::VROSC::TutorialEvent)>(&VROSC::DashboardTutorialHelper::TutorialEventTriggered)> {
  static const MethodInfo* get() {
    static auto* tutorialEvent = &::il2cpp_utils::GetClassFromName("VROSC", "TutorialEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "TutorialEventTriggered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tutorialEvent});
  }
};
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::BoardButtonClicked
// Il2CppName: BoardButtonClicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)(bool)>(&VROSC::DashboardTutorialHelper::BoardButtonClicked)> {
  static const MethodInfo* get() {
    static auto* clicked = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "BoardButtonClicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clicked});
  }
};
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::DisableAllInteractables
// Il2CppName: DisableAllInteractables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)()>(&VROSC::DashboardTutorialHelper::DisableAllInteractables)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "DisableAllInteractables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::DisableBoardButton
// Il2CppName: DisableBoardButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)()>(&VROSC::DashboardTutorialHelper::DisableBoardButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "DisableBoardButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::EnableBoardButton
// Il2CppName: EnableBoardButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)()>(&VROSC::DashboardTutorialHelper::EnableBoardButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "EnableBoardButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::EnableEmpadsButton
// Il2CppName: EnableEmpadsButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)()>(&VROSC::DashboardTutorialHelper::EnableEmpadsButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "EnableEmpadsButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::StartBoardButtonBlinking
// Il2CppName: StartBoardButtonBlinking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)()>(&VROSC::DashboardTutorialHelper::StartBoardButtonBlinking)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "StartBoardButtonBlinking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::EnableLooperButton
// Il2CppName: EnableLooperButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)()>(&VROSC::DashboardTutorialHelper::EnableLooperButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "EnableLooperButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::EnableLibraryButton
// Il2CppName: EnableLibraryButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)()>(&VROSC::DashboardTutorialHelper::EnableLibraryButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "EnableLibraryButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::StartLibraryButtonBlinking
// Il2CppName: StartLibraryButtonBlinking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)()>(&VROSC::DashboardTutorialHelper::StartLibraryButtonBlinking)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "StartLibraryButtonBlinking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::LooperButtonPressed
// Il2CppName: LooperButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)(bool)>(&VROSC::DashboardTutorialHelper::LooperButtonPressed)> {
  static const MethodInfo* get() {
    static auto* enabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "LooperButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{enabled});
  }
};
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::StartLooperButtonBlinking
// Il2CppName: StartLooperButtonBlinking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)()>(&VROSC::DashboardTutorialHelper::StartLooperButtonBlinking)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "StartLooperButtonBlinking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::StopBoardButtonBlinking
// Il2CppName: StopBoardButtonBlinking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)()>(&VROSC::DashboardTutorialHelper::StopBoardButtonBlinking)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "StopBoardButtonBlinking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::EmpadsButtonPressed
// Il2CppName: EmpadsButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)(bool)>(&VROSC::DashboardTutorialHelper::EmpadsButtonPressed)> {
  static const MethodInfo* get() {
    static auto* enabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "EmpadsButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{enabled});
  }
};
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::LibraryButtonPressed
// Il2CppName: LibraryButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)(bool)>(&VROSC::DashboardTutorialHelper::LibraryButtonPressed)> {
  static const MethodInfo* get() {
    static auto* enabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "LibraryButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{enabled});
  }
};
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::BoardOpenedAgain
// Il2CppName: BoardOpenedAgain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)(bool)>(&VROSC::DashboardTutorialHelper::BoardOpenedAgain)> {
  static const MethodInfo* get() {
    static auto* enabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "BoardOpenedAgain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{enabled});
  }
};
// Writing MetadataGetter for method: VROSC::DashboardTutorialHelper::ResetAll
// Il2CppName: ResetAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::DashboardTutorialHelper::*)()>(&VROSC::DashboardTutorialHelper::ResetAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::DashboardTutorialHelper*), "ResetAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
