// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: TooltipData
  class TooltipData;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: SetTooltipsOnInteractable
  class SetTooltipsOnInteractable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::SetTooltipsOnInteractable);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::SetTooltipsOnInteractable*, "VROSC", "SetTooltipsOnInteractable");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.SetTooltipsOnInteractable
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: 77F460
  class SetTooltipsOnInteractable : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private System.Collections.Generic.List`1<VROSC.TooltipData> _tooltipDatas
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::VROSC::TooltipData*>* tooltipDatas;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::VROSC::TooltipData*>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Collections.Generic.List`1<VROSC.TooltipData> _tooltipDatas
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VROSC::TooltipData*>*& dyn__tooltipDatas();
    // public System.Void .ctor()
    // Offset: 0x1925CF4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SetTooltipsOnInteractable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SetTooltipsOnInteractable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SetTooltipsOnInteractable*, creationType>()));
    }
    // private System.Void Start()
    // Offset: 0x1925C94
    void Start();
  }; // VROSC.SetTooltipsOnInteractable
  #pragma pack(pop)
  static check_size<sizeof(SetTooltipsOnInteractable), 24 + sizeof(::System::Collections::Generic::List_1<::VROSC::TooltipData*>*)> __VROSC_SetTooltipsOnInteractableSizeCheck;
  static_assert(sizeof(SetTooltipsOnInteractable) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::SetTooltipsOnInteractable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::SetTooltipsOnInteractable::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SetTooltipsOnInteractable::*)()>(&VROSC::SetTooltipsOnInteractable::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SetTooltipsOnInteractable*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
