// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.BaseDataModel
#include "VROSC/BaseDataModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: Session
  class Session;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: SessionsDataModel
  class SessionsDataModel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::SessionsDataModel);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::SessionsDataModel*, "VROSC", "SessionsDataModel");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.SessionsDataModel
  // [TokenAttribute] Offset: FFFFFFFF
  class SessionsDataModel : public ::VROSC::BaseDataModel {
    public:
    public:
    // public System.Collections.Generic.Dictionary`2<System.String,VROSC.Session> NewSessions
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::Dictionary_2<::StringW, ::VROSC::Session*>* NewSessions;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::VROSC::Session*>*) == 0x8);
    // public System.Collections.Generic.List`1<VROSC.Session> Sessions
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::VROSC::Session*>* Sessions;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::VROSC::Session*>*) == 0x8);
    public:
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,VROSC.Session> NewSessions
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::VROSC::Session*>*& dyn_NewSessions();
    // Get instance field reference: public System.Collections.Generic.List`1<VROSC.Session> Sessions
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VROSC::Session*>*& dyn_Sessions();
    // public System.Void .ctor()
    // Offset: 0x1989D5C
    // Implemented from: VROSC.BaseDataModel
    // Base method: System.Void BaseDataModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SessionsDataModel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SessionsDataModel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SessionsDataModel*, creationType>()));
    }
  }; // VROSC.SessionsDataModel
  #pragma pack(pop)
  static check_size<sizeof(SessionsDataModel), 32 + sizeof(::System::Collections::Generic::List_1<::VROSC::Session*>*)> __VROSC_SessionsDataModelSizeCheck;
  static_assert(sizeof(SessionsDataModel) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::SessionsDataModel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
