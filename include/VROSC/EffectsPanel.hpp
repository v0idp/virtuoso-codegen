// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: ArpeggiatorWrapper
  class ArpeggiatorWrapper;
  // Forward declaring type: AnimatedPanel
  class AnimatedPanel;
  // Forward declaring type: ParameterController
  class ParameterController;
  // Forward declaring type: ParametricPositionSignalGenerator
  class ParametricPositionSignalGenerator;
  // Forward declaring type: SynthController
  class SynthController;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: EffectsPanel
  class EffectsPanel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::EffectsPanel);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::EffectsPanel*, "VROSC", "EffectsPanel");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.EffectsPanel
  // [TokenAttribute] Offset: FFFFFFFF
  class EffectsPanel : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private VROSC.ArpeggiatorWrapper _arpeggiatorWrapper
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::ArpeggiatorWrapper* arpeggiatorWrapper;
    // Field size check
    static_assert(sizeof(::VROSC::ArpeggiatorWrapper*) == 0x8);
    // private VROSC.AnimatedPanel _animation
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::AnimatedPanel* animation;
    // Field size check
    static_assert(sizeof(::VROSC::AnimatedPanel*) == 0x8);
    // private VROSC.ParameterController[] _parameterControllers
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::VROSC::ParameterController*> parameterControllers;
    // Field size check
    static_assert(sizeof(::ArrayW<::VROSC::ParameterController*>) == 0x8);
    // private VROSC.ParametricPositionSignalGenerator[] _parametricPositionSignalGenerators
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<::VROSC::ParametricPositionSignalGenerator*> parametricPositionSignalGenerators;
    // Field size check
    static_assert(sizeof(::ArrayW<::VROSC::ParametricPositionSignalGenerator*>) == 0x8);
    // private VROSC.SynthController _instrument
    // Size: 0x8
    // Offset: 0x38
    ::VROSC::SynthController* instrument;
    // Field size check
    static_assert(sizeof(::VROSC::SynthController*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.ArpeggiatorWrapper _arpeggiatorWrapper
    [[deprecated("Use field access instead!")]] ::VROSC::ArpeggiatorWrapper*& dyn__arpeggiatorWrapper();
    // Get instance field reference: private VROSC.AnimatedPanel _animation
    [[deprecated("Use field access instead!")]] ::VROSC::AnimatedPanel*& dyn__animation();
    // Get instance field reference: private VROSC.ParameterController[] _parameterControllers
    [[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::ParameterController*>& dyn__parameterControllers();
    // Get instance field reference: private VROSC.ParametricPositionSignalGenerator[] _parametricPositionSignalGenerators
    [[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::ParametricPositionSignalGenerator*>& dyn__parametricPositionSignalGenerators();
    // Get instance field reference: private VROSC.SynthController _instrument
    [[deprecated("Use field access instead!")]] ::VROSC::SynthController*& dyn__instrument();
    // public System.Void .ctor()
    // Offset: 0x8EB2C0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EffectsPanel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EffectsPanel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EffectsPanel*, creationType>()));
    }
    // public System.Void Setup(VROSC.SynthController synthController)
    // Offset: 0x8EADA4
    void Setup(::VROSC::SynthController* synthController);
    // private System.Void ResetPanel()
    // Offset: 0x8EB068
    void ResetPanel();
    // private System.Void SynthesizerChanged(System.Boolean useExternal)
    // Offset: 0x8EB0EC
    void SynthesizerChanged(bool useExternal);
    // public System.Void SetActive(System.Boolean shouldBeOpen, System.Boolean animate)
    // Offset: 0x8EB014
    void SetActive(bool shouldBeOpen, bool animate);
    // protected System.Void OnDestroy()
    // Offset: 0x8EB114
    void OnDestroy();
  }; // VROSC.EffectsPanel
  #pragma pack(pop)
  static check_size<sizeof(EffectsPanel), 56 + sizeof(::VROSC::SynthController*)> __VROSC_EffectsPanelSizeCheck;
  static_assert(sizeof(EffectsPanel) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::EffectsPanel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::EffectsPanel::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EffectsPanel::*)(::VROSC::SynthController*)>(&VROSC::EffectsPanel::Setup)> {
  static const MethodInfo* get() {
    static auto* synthController = &::il2cpp_utils::GetClassFromName("VROSC", "SynthController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::EffectsPanel*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{synthController});
  }
};
// Writing MetadataGetter for method: VROSC::EffectsPanel::ResetPanel
// Il2CppName: ResetPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EffectsPanel::*)()>(&VROSC::EffectsPanel::ResetPanel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EffectsPanel*), "ResetPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::EffectsPanel::SynthesizerChanged
// Il2CppName: SynthesizerChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EffectsPanel::*)(bool)>(&VROSC::EffectsPanel::SynthesizerChanged)> {
  static const MethodInfo* get() {
    static auto* useExternal = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::EffectsPanel*), "SynthesizerChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{useExternal});
  }
};
// Writing MetadataGetter for method: VROSC::EffectsPanel::SetActive
// Il2CppName: SetActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EffectsPanel::*)(bool, bool)>(&VROSC::EffectsPanel::SetActive)> {
  static const MethodInfo* get() {
    static auto* shouldBeOpen = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* animate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::EffectsPanel*), "SetActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shouldBeOpen, animate});
  }
};
// Writing MetadataGetter for method: VROSC::EffectsPanel::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::EffectsPanel::*)()>(&VROSC::EffectsPanel::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::EffectsPanel*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
