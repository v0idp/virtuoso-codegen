// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: VROSC.LoopStationGroup
#include "VROSC/LoopStationGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: GroupArranger
  class GroupArranger;
  // Forward declaring type: LoopStation
  class LoopStation;
  // Forward declaring type: LoopStationLoopHandler
  class LoopStationLoopHandler;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: LoopStationGroupHandler
  class LoopStationGroupHandler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::LoopStationGroupHandler);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::LoopStationGroupHandler*, "VROSC", "LoopStationGroupHandler");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.LoopStationGroupHandler
  // [TokenAttribute] Offset: FFFFFFFF
  class LoopStationGroupHandler : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // protected System.Collections.Generic.List`1<VROSC.LoopStationGroup> _groups
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>* groups;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>*) == 0x8);
    // protected VROSC.LoopStationGroup _groupPrefab
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::LoopStationGroup* groupPrefab;
    // Field size check
    static_assert(sizeof(::VROSC::LoopStationGroup*) == 0x8);
    // protected UnityEngine.Transform _groupParent
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Transform* groupParent;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // protected VROSC.GroupArranger _arranger
    // Size: 0x8
    // Offset: 0x30
    ::VROSC::GroupArranger* arranger;
    // Field size check
    static_assert(sizeof(::VROSC::GroupArranger*) == 0x8);
    // protected System.Boolean _autoSorted
    // Size: 0x1
    // Offset: 0x38
    bool autoSorted;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _needsSorting
    // Size: 0x1
    // Offset: 0x39
    bool needsSorting;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: needsSorting and: loopStation
    char __padding5[0x6] = {};
    // protected VROSC.LoopStation _loopStation
    // Size: 0x8
    // Offset: 0x40
    ::VROSC::LoopStation* loopStation;
    // Field size check
    static_assert(sizeof(::VROSC::LoopStation*) == 0x8);
    // protected VROSC.LoopStationLoopHandler _loopHandler
    // Size: 0x8
    // Offset: 0x48
    ::VROSC::LoopStationLoopHandler* loopHandler;
    // Field size check
    static_assert(sizeof(::VROSC::LoopStationLoopHandler*) == 0x8);
    // public System.Action`1<VROSC.LoopStationGroup> OnGroupCreated
    // Size: 0x8
    // Offset: 0x50
    ::System::Action_1<::VROSC::LoopStationGroup*>* OnGroupCreated;
    // Field size check
    static_assert(sizeof(::System::Action_1<::VROSC::LoopStationGroup*>*) == 0x8);
    // public System.Action`1<VROSC.LoopStationGroup> OnGroupRemoved
    // Size: 0x8
    // Offset: 0x58
    ::System::Action_1<::VROSC::LoopStationGroup*>* OnGroupRemoved;
    // Field size check
    static_assert(sizeof(::System::Action_1<::VROSC::LoopStationGroup*>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: protected System.Collections.Generic.List`1<VROSC.LoopStationGroup> _groups
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>*& dyn__groups();
    // Get instance field reference: protected VROSC.LoopStationGroup _groupPrefab
    [[deprecated("Use field access instead!")]] ::VROSC::LoopStationGroup*& dyn__groupPrefab();
    // Get instance field reference: protected UnityEngine.Transform _groupParent
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__groupParent();
    // Get instance field reference: protected VROSC.GroupArranger _arranger
    [[deprecated("Use field access instead!")]] ::VROSC::GroupArranger*& dyn__arranger();
    // Get instance field reference: protected System.Boolean _autoSorted
    [[deprecated("Use field access instead!")]] bool& dyn__autoSorted();
    // Get instance field reference: private System.Boolean _needsSorting
    [[deprecated("Use field access instead!")]] bool& dyn__needsSorting();
    // Get instance field reference: protected VROSC.LoopStation _loopStation
    [[deprecated("Use field access instead!")]] ::VROSC::LoopStation*& dyn__loopStation();
    // Get instance field reference: protected VROSC.LoopStationLoopHandler _loopHandler
    [[deprecated("Use field access instead!")]] ::VROSC::LoopStationLoopHandler*& dyn__loopHandler();
    // Get instance field reference: public System.Action`1<VROSC.LoopStationGroup> OnGroupCreated
    [[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::LoopStationGroup*>*& dyn_OnGroupCreated();
    // Get instance field reference: public System.Action`1<VROSC.LoopStationGroup> OnGroupRemoved
    [[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::LoopStationGroup*>*& dyn_OnGroupRemoved();
    // public System.Collections.Generic.List`1<VROSC.LoopStationGroup> get_Groups()
    // Offset: 0x1970204
    ::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>* get_Groups();
    // protected System.Void .ctor()
    // Offset: 0x19697E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoopStationGroupHandler* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationGroupHandler::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoopStationGroupHandler*, creationType>()));
    }
    // public System.Void Setup(VROSC.LoopStation loopStation, VROSC.LoopStationLoopHandler loopHandler)
    // Offset: 0x1968160
    void Setup(::VROSC::LoopStation* loopStation, ::VROSC::LoopStationLoopHandler* loopHandler);
    // protected VROSC.LoopStationGroup CreateGroup(VROSC.LoopStationGroup/VROSC.SetupVariables vars)
    // Offset: 0x1968E20
    ::VROSC::LoopStationGroup* CreateGroup(::VROSC::LoopStationGroup::SetupVariables vars);
    // protected System.Void RemoveGroup(VROSC.LoopStationGroup group, System.Boolean fromReset)
    // Offset: 0x19690C4
    void RemoveGroup(::VROSC::LoopStationGroup* group, bool fromReset);
    // private System.Void OnLoopCountChanged()
    // Offset: 0x197020C
    void OnLoopCountChanged();
    // private System.Void LateUpdate()
    // Offset: 0x1970218
    void LateUpdate();
    // public VROSC.LoopStationGroup GetGroupByID(System.String groupID)
    // Offset: 0x196FD20
    ::VROSC::LoopStationGroup* GetGroupByID(::StringW groupID);
    // public System.Void SortGroups()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SortGroups();
    // public System.Void RemoveAllGroups()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RemoveAllGroups();
  }; // VROSC.LoopStationGroupHandler
  #pragma pack(pop)
  static check_size<sizeof(LoopStationGroupHandler), 88 + sizeof(::System::Action_1<::VROSC::LoopStationGroup*>*)> __VROSC_LoopStationGroupHandlerSizeCheck;
  static_assert(sizeof(LoopStationGroupHandler) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::LoopStationGroupHandler::get_Groups
// Il2CppName: get_Groups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::VROSC::LoopStationGroup*>* (VROSC::LoopStationGroupHandler::*)()>(&VROSC::LoopStationGroupHandler::get_Groups)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupHandler*), "get_Groups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupHandler::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::LoopStationGroupHandler::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationGroupHandler::*)(::VROSC::LoopStation*, ::VROSC::LoopStationLoopHandler*)>(&VROSC::LoopStationGroupHandler::Setup)> {
  static const MethodInfo* get() {
    static auto* loopStation = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStation")->byval_arg;
    static auto* loopHandler = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStationLoopHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupHandler*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{loopStation, loopHandler});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupHandler::CreateGroup
// Il2CppName: CreateGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::LoopStationGroup* (VROSC::LoopStationGroupHandler::*)(::VROSC::LoopStationGroup::SetupVariables)>(&VROSC::LoopStationGroupHandler::CreateGroup)> {
  static const MethodInfo* get() {
    static auto* vars = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStationGroup/SetupVariables")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupHandler*), "CreateGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vars});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupHandler::RemoveGroup
// Il2CppName: RemoveGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationGroupHandler::*)(::VROSC::LoopStationGroup*, bool)>(&VROSC::LoopStationGroupHandler::RemoveGroup)> {
  static const MethodInfo* get() {
    static auto* group = &::il2cpp_utils::GetClassFromName("VROSC", "LoopStationGroup")->byval_arg;
    static auto* fromReset = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupHandler*), "RemoveGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{group, fromReset});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupHandler::OnLoopCountChanged
// Il2CppName: OnLoopCountChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationGroupHandler::*)()>(&VROSC::LoopStationGroupHandler::OnLoopCountChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupHandler*), "OnLoopCountChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupHandler::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationGroupHandler::*)()>(&VROSC::LoopStationGroupHandler::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupHandler*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupHandler::GetGroupByID
// Il2CppName: GetGroupByID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::LoopStationGroup* (VROSC::LoopStationGroupHandler::*)(::StringW)>(&VROSC::LoopStationGroupHandler::GetGroupByID)> {
  static const MethodInfo* get() {
    static auto* groupID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupHandler*), "GetGroupByID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupID});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupHandler::SortGroups
// Il2CppName: SortGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationGroupHandler::*)()>(&VROSC::LoopStationGroupHandler::SortGroups)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupHandler*), "SortGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationGroupHandler::RemoveAllGroups
// Il2CppName: RemoveAllGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LoopStationGroupHandler::*)()>(&VROSC::LoopStationGroupHandler::RemoveAllGroups)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationGroupHandler*), "RemoveAllGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
