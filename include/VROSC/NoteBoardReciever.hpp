// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: NotePlayer
  class NotePlayer;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: NoteBoardReciever
  class NoteBoardReciever;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::NoteBoardReciever);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::NoteBoardReciever*, "VROSC", "NoteBoardReciever");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.NoteBoardReciever
  // [TokenAttribute] Offset: FFFFFFFF
  class NoteBoardReciever : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::VROSC::NoteBoardReciever::Player
    class Player;
    public:
    // private System.Collections.Generic.List`1<VROSC.NoteBoardReciever/VROSC.Player> _players
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::VROSC::NoteBoardReciever::Player*>* players;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::VROSC::NoteBoardReciever::Player*>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Collections.Generic.List`1<VROSC.NoteBoardReciever/VROSC.Player> _players
    [[deprecated]] ::System::Collections::Generic::List_1<::VROSC::NoteBoardReciever::Player*>*& dyn__players();
    // public System.Void RegisterPlayer(VROSC.NotePlayer source)
    // Offset: 0xC581A4
    void RegisterPlayer(::VROSC::NotePlayer* source);
    // private System.Boolean PlayerRegistered(VROSC.NotePlayer source)
    // Offset: 0xC58258
    bool PlayerRegistered(::VROSC::NotePlayer* source);
    // public System.Void .ctor()
    // Offset: 0xC583E0
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NoteBoardReciever* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardReciever::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NoteBoardReciever*, creationType>()));
    }
  }; // VROSC.NoteBoardReciever
  #pragma pack(pop)
  static check_size<sizeof(NoteBoardReciever), 24 + sizeof(::System::Collections::Generic::List_1<::VROSC::NoteBoardReciever::Player*>*)> __VROSC_NoteBoardRecieverSizeCheck;
  static_assert(sizeof(NoteBoardReciever) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::NoteBoardReciever::RegisterPlayer
// Il2CppName: RegisterPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::NoteBoardReciever::*)(::VROSC::NotePlayer*)>(&VROSC::NoteBoardReciever::RegisterPlayer)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("VROSC", "NotePlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::NoteBoardReciever*), "RegisterPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: VROSC::NoteBoardReciever::PlayerRegistered
// Il2CppName: PlayerRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::NoteBoardReciever::*)(::VROSC::NotePlayer*)>(&VROSC::NoteBoardReciever::PlayerRegistered)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("VROSC", "NotePlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::NoteBoardReciever*), "PlayerRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: VROSC::NoteBoardReciever::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
