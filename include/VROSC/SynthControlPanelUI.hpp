// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.InstrumentControlPanelUI
#include "VROSC/InstrumentControlPanelUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: ChannelControlUI
  class ChannelControlUI;
  // Forward declaring type: OctaveControlUI
  class OctaveControlUI;
  // Forward declaring type: EffectsPanel
  class EffectsPanel;
  // Forward declaring type: ScalePanelUI
  class ScalePanelUI;
  // Forward declaring type: UIToggle
  class UIToggle;
  // Forward declaring type: InputDevice
  class InputDevice;
  // Forward declaring type: WidgetController
  class WidgetController;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: SynthControlPanelUI
  class SynthControlPanelUI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::SynthControlPanelUI);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::SynthControlPanelUI*, "VROSC", "SynthControlPanelUI");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x88
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.SynthControlPanelUI
  // [TokenAttribute] Offset: FFFFFFFF
  class SynthControlPanelUI : public ::VROSC::InstrumentControlPanelUI {
    public:
    public:
    // private VROSC.ChannelControlUI _chanelControllUI
    // Size: 0x8
    // Offset: 0x58
    ::VROSC::ChannelControlUI* chanelControllUI;
    // Field size check
    static_assert(sizeof(::VROSC::ChannelControlUI*) == 0x8);
    // private VROSC.OctaveControlUI _octaveControlUI
    // Size: 0x8
    // Offset: 0x60
    ::VROSC::OctaveControlUI* octaveControlUI;
    // Field size check
    static_assert(sizeof(::VROSC::OctaveControlUI*) == 0x8);
    // private VROSC.EffectsPanel _effectsPanelUI
    // Size: 0x8
    // Offset: 0x68
    ::VROSC::EffectsPanel* effectsPanelUI;
    // Field size check
    static_assert(sizeof(::VROSC::EffectsPanel*) == 0x8);
    // private VROSC.ScalePanelUI _scalePanelUI
    // Size: 0x8
    // Offset: 0x70
    ::VROSC::ScalePanelUI* scalePanelUI;
    // Field size check
    static_assert(sizeof(::VROSC::ScalePanelUI*) == 0x8);
    // private VROSC.UIToggle _scalePanelButton
    // Size: 0x8
    // Offset: 0x78
    ::VROSC::UIToggle* scalePanelButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIToggle*) == 0x8);
    // private VROSC.UIToggle _effectsPanelButton
    // Size: 0x8
    // Offset: 0x80
    ::VROSC::UIToggle* effectsPanelButton;
    // Field size check
    static_assert(sizeof(::VROSC::UIToggle*) == 0x8);
    public:
    // Get instance field reference: private VROSC.ChannelControlUI _chanelControllUI
    [[deprecated("Use field access instead!")]] ::VROSC::ChannelControlUI*& dyn__chanelControllUI();
    // Get instance field reference: private VROSC.OctaveControlUI _octaveControlUI
    [[deprecated("Use field access instead!")]] ::VROSC::OctaveControlUI*& dyn__octaveControlUI();
    // Get instance field reference: private VROSC.EffectsPanel _effectsPanelUI
    [[deprecated("Use field access instead!")]] ::VROSC::EffectsPanel*& dyn__effectsPanelUI();
    // Get instance field reference: private VROSC.ScalePanelUI _scalePanelUI
    [[deprecated("Use field access instead!")]] ::VROSC::ScalePanelUI*& dyn__scalePanelUI();
    // Get instance field reference: private VROSC.UIToggle _scalePanelButton
    [[deprecated("Use field access instead!")]] ::VROSC::UIToggle*& dyn__scalePanelButton();
    // Get instance field reference: private VROSC.UIToggle _effectsPanelButton
    [[deprecated("Use field access instead!")]] ::VROSC::UIToggle*& dyn__effectsPanelButton();
    // private System.Void SynthesizerChanged(System.Boolean useExternal)
    // Offset: 0x1931F08
    void SynthesizerChanged(bool useExternal);
    // private System.Void ScalePanelButtonToggled(VROSC.InputDevice device, System.Boolean isOn)
    // Offset: 0x1931F54
    void ScalePanelButtonToggled(::VROSC::InputDevice* device, bool isOn);
    // private System.Void EffectsPanelButtonToggled(VROSC.InputDevice device, System.Boolean isOn)
    // Offset: 0x1931F78
    void EffectsPanelButtonToggled(::VROSC::InputDevice* device, bool isOn);
    // public System.Void .ctor()
    // Offset: 0x1931F9C
    // Implemented from: VROSC.InstrumentControlPanelUI
    // Base method: System.Void InstrumentControlPanelUI::.ctor()
    // Base method: System.Void ControlPanelUI::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SynthControlPanelUI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SynthControlPanelUI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SynthControlPanelUI*, creationType>()));
    }
    // public override System.Void Setup(VROSC.WidgetController widgetController)
    // Offset: 0x1931830
    // Implemented from: VROSC.InstrumentControlPanelUI
    // Base method: System.Void InstrumentControlPanelUI::Setup(VROSC.WidgetController widgetController)
    void Setup(::VROSC::WidgetController* widgetController);
    // protected override System.Void Awake()
    // Offset: 0x1931AE0
    // Implemented from: VROSC.ControlPanelUI
    // Base method: System.Void ControlPanelUI::Awake()
    void Awake();
    // protected override System.Void OnDestroy()
    // Offset: 0x1931CA0
    // Implemented from: VROSC.ControlPanelUI
    // Base method: System.Void ControlPanelUI::OnDestroy()
    void OnDestroy();
  }; // VROSC.SynthControlPanelUI
  #pragma pack(pop)
  static check_size<sizeof(SynthControlPanelUI), 128 + sizeof(::VROSC::UIToggle*)> __VROSC_SynthControlPanelUISizeCheck;
  static_assert(sizeof(SynthControlPanelUI) == 0x88);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::SynthControlPanelUI::SynthesizerChanged
// Il2CppName: SynthesizerChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthControlPanelUI::*)(bool)>(&VROSC::SynthControlPanelUI::SynthesizerChanged)> {
  static const MethodInfo* get() {
    static auto* useExternal = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthControlPanelUI*), "SynthesizerChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{useExternal});
  }
};
// Writing MetadataGetter for method: VROSC::SynthControlPanelUI::ScalePanelButtonToggled
// Il2CppName: ScalePanelButtonToggled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthControlPanelUI::*)(::VROSC::InputDevice*, bool)>(&VROSC::SynthControlPanelUI::ScalePanelButtonToggled)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* isOn = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthControlPanelUI*), "ScalePanelButtonToggled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, isOn});
  }
};
// Writing MetadataGetter for method: VROSC::SynthControlPanelUI::EffectsPanelButtonToggled
// Il2CppName: EffectsPanelButtonToggled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthControlPanelUI::*)(::VROSC::InputDevice*, bool)>(&VROSC::SynthControlPanelUI::EffectsPanelButtonToggled)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* isOn = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthControlPanelUI*), "EffectsPanelButtonToggled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, isOn});
  }
};
// Writing MetadataGetter for method: VROSC::SynthControlPanelUI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::SynthControlPanelUI::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthControlPanelUI::*)(::VROSC::WidgetController*)>(&VROSC::SynthControlPanelUI::Setup)> {
  static const MethodInfo* get() {
    static auto* widgetController = &::il2cpp_utils::GetClassFromName("VROSC", "WidgetController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthControlPanelUI*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{widgetController});
  }
};
// Writing MetadataGetter for method: VROSC::SynthControlPanelUI::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthControlPanelUI::*)()>(&VROSC::SynthControlPanelUI::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthControlPanelUI*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::SynthControlPanelUI::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::SynthControlPanelUI::*)()>(&VROSC::SynthControlPanelUI::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::SynthControlPanelUI*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
