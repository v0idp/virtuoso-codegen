// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: UIToggle
  class UIToggle;
  // Forward declaring type: InputDevice
  class InputDevice;
}
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshPro
  class TextMeshPro;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: PaginatedListPageButton
  class PaginatedListPageButton;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::PaginatedListPageButton);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::PaginatedListPageButton*, "VROSC", "PaginatedListPageButton");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.PaginatedListPageButton
  // [TokenAttribute] Offset: FFFFFFFF
  class PaginatedListPageButton : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private VROSC.UIToggle _button
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::UIToggle* button;
    // Field size check
    static_assert(sizeof(::VROSC::UIToggle*) == 0x8);
    // private TMPro.TextMeshPro _text
    // Size: 0x8
    // Offset: 0x20
    ::TMPro::TextMeshPro* text;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshPro*) == 0x8);
    // private System.Int32 _targetPage
    // Size: 0x4
    // Offset: 0x28
    int targetPage;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // protected System.Boolean _selected
    // Size: 0x1
    // Offset: 0x2C
    bool selected;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: selected and: OnPageButtonPressed
    char __padding3[0x3] = {};
    // public System.Action`1<System.Int32> OnPageButtonPressed
    // Size: 0x8
    // Offset: 0x30
    ::System::Action_1<int>* OnPageButtonPressed;
    // Field size check
    static_assert(sizeof(::System::Action_1<int>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VROSC.UIToggle _button
    [[deprecated("Use field access instead!")]] ::VROSC::UIToggle*& dyn__button();
    // Get instance field reference: private TMPro.TextMeshPro _text
    [[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& dyn__text();
    // Get instance field reference: private System.Int32 _targetPage
    [[deprecated("Use field access instead!")]] int& dyn__targetPage();
    // Get instance field reference: protected System.Boolean _selected
    [[deprecated("Use field access instead!")]] bool& dyn__selected();
    // Get instance field reference: public System.Action`1<System.Int32> OnPageButtonPressed
    [[deprecated("Use field access instead!")]] ::System::Action_1<int>*& dyn_OnPageButtonPressed();
    // public System.Void .ctor()
    // Offset: 0xADC9D0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PaginatedListPageButton* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PaginatedListPageButton::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PaginatedListPageButton*, creationType>()));
    }
    // private System.Void Awake()
    // Offset: 0xADC7C4
    void Awake();
    // private System.Void OnDestroy()
    // Offset: 0xADC888
    void OnDestroy();
    // public System.Void SetActive(System.Boolean active)
    // Offset: 0xADC3CC
    void SetActive(bool active);
    // public System.Void SetIsSelected(System.Boolean selected)
    // Offset: 0xADC434
    void SetIsSelected(bool selected);
    // public System.Void SetPage(System.Int32 page, System.String text)
    // Offset: 0xADC400
    void SetPage(int page, ::StringW text);
    // protected System.Void SetSelected(VROSC.InputDevice inputDevice, System.Boolean shouldBeSelected)
    // Offset: 0xADC94C
    void SetSelected(::VROSC::InputDevice* inputDevice, bool shouldBeSelected);
  }; // VROSC.PaginatedListPageButton
  #pragma pack(pop)
  static check_size<sizeof(PaginatedListPageButton), 48 + sizeof(::System::Action_1<int>*)> __VROSC_PaginatedListPageButtonSizeCheck;
  static_assert(sizeof(PaginatedListPageButton) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::PaginatedListPageButton::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::PaginatedListPageButton::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PaginatedListPageButton::*)()>(&VROSC::PaginatedListPageButton::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::PaginatedListPageButton*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::PaginatedListPageButton::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PaginatedListPageButton::*)()>(&VROSC::PaginatedListPageButton::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::PaginatedListPageButton*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::PaginatedListPageButton::SetActive
// Il2CppName: SetActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PaginatedListPageButton::*)(bool)>(&VROSC::PaginatedListPageButton::SetActive)> {
  static const MethodInfo* get() {
    static auto* active = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::PaginatedListPageButton*), "SetActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{active});
  }
};
// Writing MetadataGetter for method: VROSC::PaginatedListPageButton::SetIsSelected
// Il2CppName: SetIsSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PaginatedListPageButton::*)(bool)>(&VROSC::PaginatedListPageButton::SetIsSelected)> {
  static const MethodInfo* get() {
    static auto* selected = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::PaginatedListPageButton*), "SetIsSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selected});
  }
};
// Writing MetadataGetter for method: VROSC::PaginatedListPageButton::SetPage
// Il2CppName: SetPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PaginatedListPageButton::*)(int, ::StringW)>(&VROSC::PaginatedListPageButton::SetPage)> {
  static const MethodInfo* get() {
    static auto* page = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::PaginatedListPageButton*), "SetPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{page, text});
  }
};
// Writing MetadataGetter for method: VROSC::PaginatedListPageButton::SetSelected
// Il2CppName: SetSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::PaginatedListPageButton::*)(::VROSC::InputDevice*, bool)>(&VROSC::PaginatedListPageButton::SetSelected)> {
  static const MethodInfo* get() {
    static auto* inputDevice = &::il2cpp_utils::GetClassFromName("VROSC", "InputDevice")->byval_arg;
    static auto* shouldBeSelected = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::PaginatedListPageButton*), "SetSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputDevice, shouldBeSelected});
  }
};
