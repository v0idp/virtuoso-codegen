// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: MaterialPropertyBlock
  class MaterialPropertyBlock;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: FrameVisuals
  class FrameVisuals;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::FrameVisuals);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::FrameVisuals*, "VROSC", "FrameVisuals");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.FrameVisuals
  // [TokenAttribute] Offset: FFFFFFFF
  class FrameVisuals : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // protected UnityEngine.MaterialPropertyBlock _propBlock
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::MaterialPropertyBlock* propBlock;
    // Field size check
    static_assert(sizeof(::UnityEngine::MaterialPropertyBlock*) == 0x8);
    // protected System.Single _createdAmount
    // Size: 0x4
    // Offset: 0x20
    float createdAmount;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: protected UnityEngine.MaterialPropertyBlock _propBlock
    [[deprecated]] ::UnityEngine::MaterialPropertyBlock*& dyn__propBlock();
    // Get instance field reference: protected System.Single _createdAmount
    [[deprecated]] float& dyn__createdAmount();
    // protected System.Void CreateBlock()
    // Offset: 0x19A0DE4
    void CreateBlock();
    // public System.Void UpdateCreationAmount(System.Single createdAmount)
    // Offset: 0x19A0E48
    void UpdateCreationAmount(float createdAmount);
    // public System.Void .ctor()
    // Offset: 0x19A0E50
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FrameVisuals* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FrameVisuals::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FrameVisuals*, creationType>()));
    }
  }; // VROSC.FrameVisuals
  #pragma pack(pop)
  static check_size<sizeof(FrameVisuals), 32 + sizeof(float)> __VROSC_FrameVisualsSizeCheck;
  static_assert(sizeof(FrameVisuals) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::FrameVisuals::CreateBlock
// Il2CppName: CreateBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::FrameVisuals::*)()>(&VROSC::FrameVisuals::CreateBlock)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::FrameVisuals*), "CreateBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::FrameVisuals::UpdateCreationAmount
// Il2CppName: UpdateCreationAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::FrameVisuals::*)(float)>(&VROSC::FrameVisuals::UpdateCreationAmount)> {
  static const MethodInfo* get() {
    static auto* createdAmount = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::FrameVisuals*), "UpdateCreationAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{createdAmount});
  }
};
// Writing MetadataGetter for method: VROSC::FrameVisuals::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
