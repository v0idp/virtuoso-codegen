// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.CallbackHandler
#include "VROSC/CallbackHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Action_3;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::CallbackHandler::UserLoginAnonymouslyCallback);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::CallbackHandler::UserLoginAnonymouslyCallback*, "VROSC", "CallbackHandler/UserLoginAnonymouslyCallback");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.CallbackHandler/VROSC.UserLoginAnonymouslyCallback
  // [TokenAttribute] Offset: FFFFFFFF
  class CallbackHandler::UserLoginAnonymouslyCallback : public ::Il2CppObject {
    public:
    public:
    // public System.Action`3<System.String,System.String,System.String> Action
    // Size: 0x8
    // Offset: 0x10
    ::System::Action_3<::StringW, ::StringW, ::StringW>* Action;
    // Field size check
    static_assert(sizeof(::System::Action_3<::StringW, ::StringW, ::StringW>*) == 0x8);
    // public System.String UserId
    // Size: 0x8
    // Offset: 0x18
    ::StringW UserId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String AccessToken
    // Size: 0x8
    // Offset: 0x20
    ::StringW AccessToken;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String RefreshToken
    // Size: 0x8
    // Offset: 0x28
    ::StringW RefreshToken;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.Action`3<System.String,System.String,System.String> Action
    [[deprecated]] ::System::Action_3<::StringW, ::StringW, ::StringW>*& dyn_Action();
    // Get instance field reference: public System.String UserId
    [[deprecated]] ::StringW& dyn_UserId();
    // Get instance field reference: public System.String AccessToken
    [[deprecated]] ::StringW& dyn_AccessToken();
    // Get instance field reference: public System.String RefreshToken
    [[deprecated]] ::StringW& dyn_RefreshToken();
    // public System.Void .ctor()
    // Offset: 0x9593E0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CallbackHandler::UserLoginAnonymouslyCallback* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::UserLoginAnonymouslyCallback::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CallbackHandler::UserLoginAnonymouslyCallback*, creationType>()));
    }
  }; // VROSC.CallbackHandler/VROSC.UserLoginAnonymouslyCallback
  #pragma pack(pop)
  static check_size<sizeof(CallbackHandler::UserLoginAnonymouslyCallback), 40 + sizeof(::StringW)> __VROSC_CallbackHandler_UserLoginAnonymouslyCallbackSizeCheck;
  static_assert(sizeof(CallbackHandler::UserLoginAnonymouslyCallback) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::CallbackHandler::UserLoginAnonymouslyCallback::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
