// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: TriggerButton
  struct TriggerButton;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::VROSC::TriggerButton, "VROSC", "TriggerButton");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.TriggerButton
  // [TokenAttribute] Offset: FFFFFFFF
  struct TriggerButton/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: TriggerButton
    constexpr TriggerButton(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public VROSC.TriggerButton None
    static constexpr const int None = 0;
    // Get static field: static public VROSC.TriggerButton None
    static ::VROSC::TriggerButton _get_None();
    // Set static field: static public VROSC.TriggerButton None
    static void _set_None(::VROSC::TriggerButton value);
    // static field const value: static public VROSC.TriggerButton Trigger
    static constexpr const int Trigger = 1;
    // Get static field: static public VROSC.TriggerButton Trigger
    static ::VROSC::TriggerButton _get_Trigger();
    // Set static field: static public VROSC.TriggerButton Trigger
    static void _set_Trigger(::VROSC::TriggerButton value);
    // static field const value: static public VROSC.TriggerButton Grip
    static constexpr const int Grip = 2;
    // Get static field: static public VROSC.TriggerButton Grip
    static ::VROSC::TriggerButton _get_Grip();
    // Set static field: static public VROSC.TriggerButton Grip
    static void _set_Grip(::VROSC::TriggerButton value);
    // static field const value: static public VROSC.TriggerButton AppMenuYB
    static constexpr const int AppMenuYB = 4;
    // Get static field: static public VROSC.TriggerButton AppMenuYB
    static ::VROSC::TriggerButton _get_AppMenuYB();
    // Set static field: static public VROSC.TriggerButton AppMenuYB
    static void _set_AppMenuYB(::VROSC::TriggerButton value);
    // static field const value: static public VROSC.TriggerButton TouchpadXA
    static constexpr const int TouchpadXA = 8;
    // Get static field: static public VROSC.TriggerButton TouchpadXA
    static ::VROSC::TriggerButton _get_TouchpadXA();
    // Set static field: static public VROSC.TriggerButton TouchpadXA
    static void _set_TouchpadXA(::VROSC::TriggerButton value);
    // static field const value: static public VROSC.TriggerButton MenuButton
    static constexpr const int MenuButton = 16;
    // Get static field: static public VROSC.TriggerButton MenuButton
    static ::VROSC::TriggerButton _get_MenuButton();
    // Set static field: static public VROSC.TriggerButton MenuButton
    static void _set_MenuButton(::VROSC::TriggerButton value);
    // static field const value: static public VROSC.TriggerButton ThumbStickDown
    static constexpr const int ThumbStickDown = 32;
    // Get static field: static public VROSC.TriggerButton ThumbStickDown
    static ::VROSC::TriggerButton _get_ThumbStickDown();
    // Set static field: static public VROSC.TriggerButton ThumbStickDown
    static void _set_ThumbStickDown(::VROSC::TriggerButton value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated]] int& dyn_value__();
  }; // VROSC.TriggerButton
  #pragma pack(pop)
  static check_size<sizeof(TriggerButton), 0 + sizeof(int)> __VROSC_TriggerButtonSizeCheck;
  static_assert(sizeof(TriggerButton) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
