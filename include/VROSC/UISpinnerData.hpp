// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: UISpinnerData
  class UISpinnerData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::UISpinnerData);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::UISpinnerData*, "VROSC", "UISpinnerData");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.UISpinnerData
  // [TokenAttribute] Offset: FFFFFFFF
  class UISpinnerData : public ::Il2CppObject {
    public:
    public:
    // private System.String _header
    // Size: 0x8
    // Offset: 0x10
    ::StringW header;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Collections.Generic.List`1<System.String> _values
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::StringW>* values;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    public:
    // Get instance field reference: private System.String _header
    [[deprecated]] ::StringW& dyn__header();
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> _values
    [[deprecated]] ::System::Collections::Generic::List_1<::StringW>*& dyn__values();
    // public System.String get_Header()
    // Offset: 0x1918C64
    ::StringW get_Header();
    // public System.Collections.Generic.List`1<System.String> get_Values()
    // Offset: 0x1918C6C
    ::System::Collections::Generic::List_1<::StringW>* get_Values();
    // public System.Void Set(System.String header, System.Collections.Generic.List`1<System.String> values)
    // Offset: 0x1918C74
    void Set(::StringW header, ::System::Collections::Generic::List_1<::StringW>* values);
    // public System.Void .ctor()
    // Offset: 0x1918C7C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UISpinnerData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::UISpinnerData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UISpinnerData*, creationType>()));
    }
  }; // VROSC.UISpinnerData
  #pragma pack(pop)
  static check_size<sizeof(UISpinnerData), 24 + sizeof(::System::Collections::Generic::List_1<::StringW>*)> __VROSC_UISpinnerDataSizeCheck;
  static_assert(sizeof(UISpinnerData) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::UISpinnerData::get_Header
// Il2CppName: get_Header
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::UISpinnerData::*)()>(&VROSC::UISpinnerData::get_Header)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISpinnerData*), "get_Header", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UISpinnerData::get_Values
// Il2CppName: get_Values
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::StringW>* (VROSC::UISpinnerData::*)()>(&VROSC::UISpinnerData::get_Values)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISpinnerData*), "get_Values", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UISpinnerData::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::UISpinnerData::*)(::StringW, ::System::Collections::Generic::List_1<::StringW>*)>(&VROSC::UISpinnerData::Set)> {
  static const MethodInfo* get() {
    static auto* header = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::UISpinnerData*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{header, values});
  }
};
// Writing MetadataGetter for method: VROSC::UISpinnerData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
