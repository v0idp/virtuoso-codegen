// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Playables.PlayableAsset
#include "UnityEngine/Playables/PlayableAsset.hpp"
// Including type: UnityEngine.ExposedReference`1
#include "UnityEngine/ExposedReference_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: GridNoteboardDestructionBehaviour
  class GridNoteboardDestructionBehaviour;
  // Forward declaring type: GridNoteboard
  class GridNoteboard;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: AnimationCurve
  class AnimationCurve;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: UnityEngine::Playables
namespace UnityEngine::Playables {
  // Forward declaring type: Playable
  struct Playable;
  // Forward declaring type: PlayableGraph
  struct PlayableGraph;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: GridNoteboardDestructionAsset
  class GridNoteboardDestructionAsset;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::GridNoteboardDestructionAsset);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::GridNoteboardDestructionAsset*, "VROSC", "GridNoteboardDestructionAsset");
// Type namespace: VROSC
namespace VROSC {
  // WARNING Size may be invalid!
  // Autogenerated type: VROSC.GridNoteboardDestructionAsset
  // [TokenAttribute] Offset: FFFFFFFF
  class GridNoteboardDestructionAsset : public ::UnityEngine::Playables::PlayableAsset {
    public:
    public:
    // public VROSC.GridNoteboardDestructionBehaviour template
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::GridNoteboardDestructionBehaviour* _template;
    // Field size check
    static_assert(sizeof(::VROSC::GridNoteboardDestructionBehaviour*) == 0x8);
    // public UnityEngine.ExposedReference`1<UnityEngine.Transform> _toPoint
    // Size: 0xFFFFFFFF
    // Offset: 0x20
    ::UnityEngine::ExposedReference_1<::UnityEngine::Transform*> toPoint;
    // public UnityEngine.ExposedReference`1<VROSC.GridNoteboard> _noteBoard
    // Size: 0xFFFFFFFF
    // Offset: 0x30
    ::UnityEngine::ExposedReference_1<::VROSC::GridNoteboard*> noteBoard;
    // public UnityEngine.AnimationCurve _curve
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::AnimationCurve* curve;
    // Field size check
    static_assert(sizeof(::UnityEngine::AnimationCurve*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public VROSC.GridNoteboardDestructionBehaviour template
    [[deprecated]] ::VROSC::GridNoteboardDestructionBehaviour*& dyn_template();
    // Get instance field reference: public UnityEngine.ExposedReference`1<UnityEngine.Transform> _toPoint
    [[deprecated]] ::UnityEngine::ExposedReference_1<::UnityEngine::Transform*>& dyn__toPoint();
    // Get instance field reference: public UnityEngine.ExposedReference`1<VROSC.GridNoteboard> _noteBoard
    [[deprecated]] ::UnityEngine::ExposedReference_1<::VROSC::GridNoteboard*>& dyn__noteBoard();
    // Get instance field reference: public UnityEngine.AnimationCurve _curve
    [[deprecated]] ::UnityEngine::AnimationCurve*& dyn__curve();
    // public System.Void .ctor()
    // Offset: 0x19A9110
    // Implemented from: UnityEngine.Playables.PlayableAsset
    // Base method: System.Void PlayableAsset::.ctor()
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GridNoteboardDestructionAsset* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GridNoteboardDestructionAsset::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GridNoteboardDestructionAsset*, creationType>()));
    }
    // public override UnityEngine.Playables.Playable CreatePlayable(UnityEngine.Playables.PlayableGraph graph, UnityEngine.GameObject owner)
    // Offset: 0x19A8D4C
    // Implemented from: UnityEngine.Playables.PlayableAsset
    // Base method: UnityEngine.Playables.Playable PlayableAsset::CreatePlayable(UnityEngine.Playables.PlayableGraph graph, UnityEngine.GameObject owner)
    ::UnityEngine::Playables::Playable CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* owner);
  }; // VROSC.GridNoteboardDestructionAsset
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::GridNoteboardDestructionAsset::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::GridNoteboardDestructionAsset::CreatePlayable
// Il2CppName: CreatePlayable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Playables::Playable (VROSC::GridNoteboardDestructionAsset::*)(::UnityEngine::Playables::PlayableGraph, ::UnityEngine::GameObject*)>(&VROSC::GridNoteboardDestructionAsset::CreatePlayable)> {
  static const MethodInfo* get() {
    static auto* graph = &::il2cpp_utils::GetClassFromName("UnityEngine.Playables", "PlayableGraph")->byval_arg;
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::GridNoteboardDestructionAsset*), "CreatePlayable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{graph, owner});
  }
};
