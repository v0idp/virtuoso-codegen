// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: TransformDataModel
  class TransformDataModel;
  // Forward declaring type: TransformDataController
  class TransformDataController;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: LoopStationLaunchpadData
  class LoopStationLaunchpadData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::LoopStationLaunchpadData);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::LoopStationLaunchpadData*, "VROSC", "LoopStationLaunchpadData");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.LoopStationLaunchpadData
  // [TokenAttribute] Offset: FFFFFFFF
  class LoopStationLaunchpadData : public ::Il2CppObject {
    public:
    public:
    // public System.Boolean IsGroup
    // Size: 0x1
    // Offset: 0x10
    bool IsGroup;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IsGroup and: _ID
    char __padding0[0x7] = {};
    // public System.String ID
    // Size: 0x8
    // Offset: 0x18
    ::StringW _ID;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String TargetID
    // Size: 0x8
    // Offset: 0x20
    ::StringW TargetID;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private VROSC.TransformDataModel TransformData
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::TransformDataModel* TransformData;
    // Field size check
    static_assert(sizeof(::VROSC::TransformDataModel*) == 0x8);
    // private VROSC.TransformDataController _transformController
    // Size: 0x8
    // Offset: 0x30
    ::VROSC::TransformDataController* transformController;
    // Field size check
    static_assert(sizeof(::VROSC::TransformDataController*) == 0x8);
    public:
    // Get instance field reference: public System.Boolean IsGroup
    [[deprecated]] bool& dyn_IsGroup();
    // Get instance field reference: public System.String ID
    [[deprecated]] ::StringW& dyn_ID();
    // Get instance field reference: public System.String TargetID
    [[deprecated]] ::StringW& dyn_TargetID();
    // Get instance field reference: private VROSC.TransformDataModel TransformData
    [[deprecated]] ::VROSC::TransformDataModel*& dyn_TransformData();
    // Get instance field reference: private VROSC.TransformDataController _transformController
    [[deprecated]] ::VROSC::TransformDataController*& dyn__transformController();
    // public VROSC.TransformDataController get_TransformController()
    // Offset: 0x196E2B4
    ::VROSC::TransformDataController* get_TransformController();
    // public System.Void .ctor(System.String iD, System.String targetID, System.Boolean isGroup)
    // Offset: 0x196DF20
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoopStationLaunchpadData* New_ctor(::StringW iD, ::StringW targetID, bool isGroup) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoopStationLaunchpadData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoopStationLaunchpadData*, creationType>(iD, targetID, isGroup)));
    }
  }; // VROSC.LoopStationLaunchpadData
  #pragma pack(pop)
  static check_size<sizeof(LoopStationLaunchpadData), 48 + sizeof(::VROSC::TransformDataController*)> __VROSC_LoopStationLaunchpadDataSizeCheck;
  static_assert(sizeof(LoopStationLaunchpadData) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::LoopStationLaunchpadData::get_TransformController
// Il2CppName: get_TransformController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::TransformDataController* (VROSC::LoopStationLaunchpadData::*)()>(&VROSC::LoopStationLaunchpadData::get_TransformController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LoopStationLaunchpadData*), "get_TransformController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LoopStationLaunchpadData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
