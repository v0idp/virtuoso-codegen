// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.NoteBoardNoteController
#include "VROSC/NoteBoardNoteController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: NoteBoardNote
  class NoteBoardNote;
  // Forward declaring type: NoteFieldParameters
  class NoteFieldParameters;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: NetNoteboard
  class NetNoteboard;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::NetNoteboard);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::NetNoteboard*, "VROSC", "NetNoteboard");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x94
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.NetNoteboard
  // [TokenAttribute] Offset: FFFFFFFF
  class NetNoteboard : public ::VROSC::NoteBoardNoteController {
    public:
    public:
    // private VROSC.NoteBoardNote[,] <XYNotes>k__BackingField
    // Size: 0x8
    // Offset: 0x78
    ::ArrayW<::VROSC::NoteBoardNote*> XYNotes;
    // Field size check
    static_assert(sizeof(::ArrayW<::VROSC::NoteBoardNote*>) == 0x8);
    // private VROSC.NoteBoardNote[,] <XZNotes>k__BackingField
    // Size: 0x8
    // Offset: 0x80
    ::ArrayW<::VROSC::NoteBoardNote*> XZNotes;
    // Field size check
    static_assert(sizeof(::ArrayW<::VROSC::NoteBoardNote*>) == 0x8);
    // private VROSC.NoteBoardNote[,] <YZNotes>k__BackingField
    // Size: 0x8
    // Offset: 0x88
    ::ArrayW<::VROSC::NoteBoardNote*> YZNotes;
    // Field size check
    static_assert(sizeof(::ArrayW<::VROSC::NoteBoardNote*>) == 0x8);
    // private System.Single _stringsize
    // Size: 0x4
    // Offset: 0x90
    float stringsize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: private VROSC.NoteBoardNote[,] <XYNotes>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::NoteBoardNote*>& dyn_$XYNotes$k__BackingField();
    // Get instance field reference: private VROSC.NoteBoardNote[,] <XZNotes>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::NoteBoardNote*>& dyn_$XZNotes$k__BackingField();
    // Get instance field reference: private VROSC.NoteBoardNote[,] <YZNotes>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::NoteBoardNote*>& dyn_$YZNotes$k__BackingField();
    // Get instance field reference: private System.Single _stringsize
    [[deprecated("Use field access instead!")]] float& dyn__stringsize();
    // public VROSC.NoteBoardNote[,] get_XYNotes()
    // Offset: 0xAD293C
    ::ArrayW<::VROSC::NoteBoardNote*> get_XYNotes();
    // private System.Void set_XYNotes(VROSC.NoteBoardNote[,] value)
    // Offset: 0xAD2934
    void set_XYNotes(::ArrayW<::VROSC::NoteBoardNote*> value);
    // public VROSC.NoteBoardNote[,] get_XZNotes()
    // Offset: 0xAD294C
    ::ArrayW<::VROSC::NoteBoardNote*> get_XZNotes();
    // private System.Void set_XZNotes(VROSC.NoteBoardNote[,] value)
    // Offset: 0xAD2944
    void set_XZNotes(::ArrayW<::VROSC::NoteBoardNote*> value);
    // public VROSC.NoteBoardNote[,] get_YZNotes()
    // Offset: 0xAD295C
    ::ArrayW<::VROSC::NoteBoardNote*> get_YZNotes();
    // private System.Void set_YZNotes(VROSC.NoteBoardNote[,] value)
    // Offset: 0xAD2954
    void set_YZNotes(::ArrayW<::VROSC::NoteBoardNote*> value);
    // private System.Int32 UpdateNumberOfFields(VROSC.NoteFieldParameters parameters)
    // Offset: 0xAD2BBC
    int UpdateNumberOfFields(::VROSC::NoteFieldParameters* parameters);
    // private System.Void SetupNoteNeighbours()
    // Offset: 0xAD384C
    void SetupNoteNeighbours();
    // public System.Void .ctor()
    // Offset: 0xAD3A58
    // Implemented from: VROSC.NoteBoardNoteController
    // Base method: System.Void NoteBoardNoteController::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetNoteboard* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NetNoteboard::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetNoteboard*, creationType>()));
    }
    // public override System.Void ClearNotefield()
    // Offset: 0xAD2964
    // Implemented from: VROSC.NoteBoardNoteController
    // Base method: System.Void NoteBoardNoteController::ClearNotefield()
    void ClearNotefield();
    // public override System.Void UpdateNoteboard(VROSC.NoteFieldParameters parameters)
    // Offset: 0xAD2CC4
    // Implemented from: VROSC.NoteBoardNoteController
    // Base method: System.Void NoteBoardNoteController::UpdateNoteboard(VROSC.NoteFieldParameters parameters)
    void UpdateNoteboard(::VROSC::NoteFieldParameters* parameters);
  }; // VROSC.NetNoteboard
  #pragma pack(pop)
  static check_size<sizeof(NetNoteboard), 144 + sizeof(float)> __VROSC_NetNoteboardSizeCheck;
  static_assert(sizeof(NetNoteboard) == 0x94);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::NetNoteboard::get_XYNotes
// Il2CppName: get_XYNotes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::VROSC::NoteBoardNote*> (VROSC::NetNoteboard::*)()>(&VROSC::NetNoteboard::get_XYNotes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::NetNoteboard*), "get_XYNotes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::NetNoteboard::set_XYNotes
// Il2CppName: set_XYNotes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::NetNoteboard::*)(::ArrayW<::VROSC::NoteBoardNote*>)>(&VROSC::NetNoteboard::set_XYNotes)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("VROSC", "NoteBoardNote"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::NetNoteboard*), "set_XYNotes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::NetNoteboard::get_XZNotes
// Il2CppName: get_XZNotes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::VROSC::NoteBoardNote*> (VROSC::NetNoteboard::*)()>(&VROSC::NetNoteboard::get_XZNotes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::NetNoteboard*), "get_XZNotes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::NetNoteboard::set_XZNotes
// Il2CppName: set_XZNotes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::NetNoteboard::*)(::ArrayW<::VROSC::NoteBoardNote*>)>(&VROSC::NetNoteboard::set_XZNotes)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("VROSC", "NoteBoardNote"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::NetNoteboard*), "set_XZNotes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::NetNoteboard::get_YZNotes
// Il2CppName: get_YZNotes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::VROSC::NoteBoardNote*> (VROSC::NetNoteboard::*)()>(&VROSC::NetNoteboard::get_YZNotes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::NetNoteboard*), "get_YZNotes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::NetNoteboard::set_YZNotes
// Il2CppName: set_YZNotes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::NetNoteboard::*)(::ArrayW<::VROSC::NoteBoardNote*>)>(&VROSC::NetNoteboard::set_YZNotes)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("VROSC", "NoteBoardNote"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::NetNoteboard*), "set_YZNotes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::NetNoteboard::UpdateNumberOfFields
// Il2CppName: UpdateNumberOfFields
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::NetNoteboard::*)(::VROSC::NoteFieldParameters*)>(&VROSC::NetNoteboard::UpdateNumberOfFields)> {
  static const MethodInfo* get() {
    static auto* parameters = &::il2cpp_utils::GetClassFromName("VROSC", "NoteFieldParameters")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::NetNoteboard*), "UpdateNumberOfFields", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parameters});
  }
};
// Writing MetadataGetter for method: VROSC::NetNoteboard::SetupNoteNeighbours
// Il2CppName: SetupNoteNeighbours
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::NetNoteboard::*)()>(&VROSC::NetNoteboard::SetupNoteNeighbours)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::NetNoteboard*), "SetupNoteNeighbours", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::NetNoteboard::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::NetNoteboard::ClearNotefield
// Il2CppName: ClearNotefield
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::NetNoteboard::*)()>(&VROSC::NetNoteboard::ClearNotefield)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::NetNoteboard*), "ClearNotefield", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::NetNoteboard::UpdateNoteboard
// Il2CppName: UpdateNoteboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::NetNoteboard::*)(::VROSC::NoteFieldParameters*)>(&VROSC::NetNoteboard::UpdateNoteboard)> {
  static const MethodInfo* get() {
    static auto* parameters = &::il2cpp_utils::GetClassFromName("VROSC", "NoteFieldParameters")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::NetNoteboard*), "UpdateNoteboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parameters});
  }
};
