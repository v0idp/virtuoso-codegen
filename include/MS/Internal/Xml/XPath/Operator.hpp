// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode
#include "MS/Internal/Xml/XPath/AstNode.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::XPath
namespace System::Xml::XPath {
  // Forward declaring type: XPathResultType
  struct XPathResultType;
}
// Completed forward declares
// Type namespace: MS.Internal.Xml.XPath
namespace MS::Internal::Xml::XPath {
  // Forward declaring type: Operator
  class Operator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MS::Internal::Xml::XPath::Operator);
DEFINE_IL2CPP_ARG_TYPE(::MS::Internal::Xml::XPath::Operator*, "MS.Internal.Xml.XPath", "Operator");
// Type namespace: MS.Internal.Xml.XPath
namespace MS::Internal::Xml::XPath {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: MS.Internal.Xml.XPath.Operator
  // [TokenAttribute] Offset: FFFFFFFF
  class Operator : public ::MS::Internal::Xml::XPath::AstNode {
    public:
    // Nested type: ::MS::Internal::Xml::XPath::Operator::Op
    struct Op;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op
    // [TokenAttribute] Offset: FFFFFFFF
    struct Op/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: Op
      constexpr Op(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op INVALID
      static constexpr const int INVALID = 0;
      // Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op INVALID
      static ::MS::Internal::Xml::XPath::Operator::Op _get_INVALID();
      // Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op INVALID
      static void _set_INVALID(::MS::Internal::Xml::XPath::Operator::Op value);
      // static field const value: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op OR
      static constexpr const int OR = 1;
      // Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op OR
      static ::MS::Internal::Xml::XPath::Operator::Op _get_OR();
      // Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op OR
      static void _set_OR(::MS::Internal::Xml::XPath::Operator::Op value);
      // static field const value: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op AND
      static constexpr const int AND = 2;
      // Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op AND
      static ::MS::Internal::Xml::XPath::Operator::Op _get_AND();
      // Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op AND
      static void _set_AND(::MS::Internal::Xml::XPath::Operator::Op value);
      // static field const value: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op EQ
      static constexpr const int EQ = 3;
      // Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op EQ
      static ::MS::Internal::Xml::XPath::Operator::Op _get_EQ();
      // Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op EQ
      static void _set_EQ(::MS::Internal::Xml::XPath::Operator::Op value);
      // static field const value: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op NE
      static constexpr const int NE = 4;
      // Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op NE
      static ::MS::Internal::Xml::XPath::Operator::Op _get_NE();
      // Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op NE
      static void _set_NE(::MS::Internal::Xml::XPath::Operator::Op value);
      // static field const value: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LT
      static constexpr const int LT = 5;
      // Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LT
      static ::MS::Internal::Xml::XPath::Operator::Op _get_LT();
      // Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LT
      static void _set_LT(::MS::Internal::Xml::XPath::Operator::Op value);
      // static field const value: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LE
      static constexpr const int LE = 6;
      // Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LE
      static ::MS::Internal::Xml::XPath::Operator::Op _get_LE();
      // Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LE
      static void _set_LE(::MS::Internal::Xml::XPath::Operator::Op value);
      // static field const value: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GT
      static constexpr const int GT = 7;
      // Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GT
      static ::MS::Internal::Xml::XPath::Operator::Op _get_GT();
      // Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GT
      static void _set_GT(::MS::Internal::Xml::XPath::Operator::Op value);
      // static field const value: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GE
      static constexpr const int GE = 8;
      // Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GE
      static ::MS::Internal::Xml::XPath::Operator::Op _get_GE();
      // Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GE
      static void _set_GE(::MS::Internal::Xml::XPath::Operator::Op value);
      // static field const value: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op PLUS
      static constexpr const int PLUS = 9;
      // Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op PLUS
      static ::MS::Internal::Xml::XPath::Operator::Op _get_PLUS();
      // Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op PLUS
      static void _set_PLUS(::MS::Internal::Xml::XPath::Operator::Op value);
      // static field const value: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MINUS
      static constexpr const int MINUS = 10;
      // Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MINUS
      static ::MS::Internal::Xml::XPath::Operator::Op _get_MINUS();
      // Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MINUS
      static void _set_MINUS(::MS::Internal::Xml::XPath::Operator::Op value);
      // static field const value: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MUL
      static constexpr const int MUL = 11;
      // Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MUL
      static ::MS::Internal::Xml::XPath::Operator::Op _get_MUL();
      // Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MUL
      static void _set_MUL(::MS::Internal::Xml::XPath::Operator::Op value);
      // static field const value: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op DIV
      static constexpr const int DIV = 12;
      // Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op DIV
      static ::MS::Internal::Xml::XPath::Operator::Op _get_DIV();
      // Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op DIV
      static void _set_DIV(::MS::Internal::Xml::XPath::Operator::Op value);
      // static field const value: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MOD
      static constexpr const int MOD = 13;
      // Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MOD
      static ::MS::Internal::Xml::XPath::Operator::Op _get_MOD();
      // Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MOD
      static void _set_MOD(::MS::Internal::Xml::XPath::Operator::Op value);
      // static field const value: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op UNION
      static constexpr const int UNION = 14;
      // Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op UNION
      static ::MS::Internal::Xml::XPath::Operator::Op _get_UNION();
      // Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op UNION
      static void _set_UNION(::MS::Internal::Xml::XPath::Operator::Op value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated]] int& dyn_value__();
    }; // MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op
    #pragma pack(pop)
    static check_size<sizeof(Operator::Op), 0 + sizeof(int)> __MS_Internal_Xml_XPath_Operator_OpSizeCheck;
    static_assert(sizeof(Operator::Op) == 0x4);
    public:
    // private MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op opType
    // Size: 0x4
    // Offset: 0x10
    ::MS::Internal::Xml::XPath::Operator::Op opType;
    // Field size check
    static_assert(sizeof(::MS::Internal::Xml::XPath::Operator::Op) == 0x4);
    // Padding between fields: opType and: opnd1
    char __padding0[0x4] = {};
    // private MS.Internal.Xml.XPath.AstNode opnd1
    // Size: 0x8
    // Offset: 0x18
    ::MS::Internal::Xml::XPath::AstNode* opnd1;
    // Field size check
    static_assert(sizeof(::MS::Internal::Xml::XPath::AstNode*) == 0x8);
    // private MS.Internal.Xml.XPath.AstNode opnd2
    // Size: 0x8
    // Offset: 0x20
    ::MS::Internal::Xml::XPath::AstNode* opnd2;
    // Field size check
    static_assert(sizeof(::MS::Internal::Xml::XPath::AstNode*) == 0x8);
    public:
    // Get static field: static private MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op[] invertOp
    static ::ArrayW<::MS::Internal::Xml::XPath::Operator::Op> _get_invertOp();
    // Set static field: static private MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op[] invertOp
    static void _set_invertOp(::ArrayW<::MS::Internal::Xml::XPath::Operator::Op> value);
    // Get instance field reference: private MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op opType
    [[deprecated]] ::MS::Internal::Xml::XPath::Operator::Op& dyn_opType();
    // Get instance field reference: private MS.Internal.Xml.XPath.AstNode opnd1
    [[deprecated]] ::MS::Internal::Xml::XPath::AstNode*& dyn_opnd1();
    // Get instance field reference: private MS.Internal.Xml.XPath.AstNode opnd2
    [[deprecated]] ::MS::Internal::Xml::XPath::AstNode*& dyn_opnd2();
    // public System.Void .ctor(MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op op, MS.Internal.Xml.XPath.AstNode opnd1, MS.Internal.Xml.XPath.AstNode opnd2)
    // Offset: 0xAF8EFC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Operator* New_ctor(::MS::Internal::Xml::XPath::Operator::Op op, ::MS::Internal::Xml::XPath::AstNode* opnd1, ::MS::Internal::Xml::XPath::AstNode* opnd2) {
      static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Operator*, creationType>(op, opnd1, opnd2)));
    }
    // static private System.Void .cctor()
    // Offset: 0xAF8F68
    static void _cctor();
    // public override MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType get_Type()
    // Offset: 0xAF8F3C
    // Implemented from: MS.Internal.Xml.XPath.AstNode
    // Base method: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType AstNode::get_Type()
    ::MS::Internal::Xml::XPath::AstNode::AstType get_Type();
    // public override System.Xml.XPath.XPathResultType get_ReturnType()
    // Offset: 0xAF8F44
    // Implemented from: MS.Internal.Xml.XPath.AstNode
    // Base method: System.Xml.XPath.XPathResultType AstNode::get_ReturnType()
    ::System::Xml::XPath::XPathResultType get_ReturnType();
  }; // MS.Internal.Xml.XPath.Operator
  #pragma pack(pop)
  static check_size<sizeof(Operator), 32 + sizeof(::MS::Internal::Xml::XPath::AstNode*)> __MS_Internal_Xml_XPath_OperatorSizeCheck;
  static_assert(sizeof(Operator) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::MS::Internal::Xml::XPath::Operator::Op, "MS.Internal.Xml.XPath", "Operator/Op");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::Operator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::Operator::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&MS::Internal::Xml::XPath::Operator::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MS::Internal::Xml::XPath::Operator*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::Operator::get_Type
// Il2CppName: get_Type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MS::Internal::Xml::XPath::AstNode::AstType (MS::Internal::Xml::XPath::Operator::*)()>(&MS::Internal::Xml::XPath::Operator::get_Type)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MS::Internal::Xml::XPath::Operator*), "get_Type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::Operator::get_ReturnType
// Il2CppName: get_ReturnType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XPath::XPathResultType (MS::Internal::Xml::XPath::Operator::*)()>(&MS::Internal::Xml::XPath::Operator::get_ReturnType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MS::Internal::Xml::XPath::Operator*), "get_ReturnType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
