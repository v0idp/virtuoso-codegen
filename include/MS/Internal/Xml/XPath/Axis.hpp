// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode
#include "MS/Internal/Xml/XPath/AstNode.hpp"
// Including type: System.Xml.XPath.XPathNodeType
#include "System/Xml/XPath/XPathNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MS::Internal::Xml::XPath
namespace MS::Internal::Xml::XPath {
  // Skipping declaration: AxisType because it is already included!
}
// Forward declaring namespace: System::Xml::XPath
namespace System::Xml::XPath {
  // Forward declaring type: XPathResultType
  struct XPathResultType;
}
// Completed forward declares
// Type namespace: MS.Internal.Xml.XPath
namespace MS::Internal::Xml::XPath {
  // Forward declaring type: Axis
  class Axis;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MS::Internal::Xml::XPath::Axis);
DEFINE_IL2CPP_ARG_TYPE(::MS::Internal::Xml::XPath::Axis*, "MS.Internal.Xml.XPath", "Axis");
// Type namespace: MS.Internal.Xml.XPath
namespace MS::Internal::Xml::XPath {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: MS.Internal.Xml.XPath.Axis
  // [TokenAttribute] Offset: FFFFFFFF
  class Axis : public ::MS::Internal::Xml::XPath::AstNode {
    public:
    // Nested type: ::MS::Internal::Xml::XPath::Axis::AxisType
    struct AxisType;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType
    // [TokenAttribute] Offset: FFFFFFFF
    struct AxisType/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: AxisType
      constexpr AxisType(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Ancestor
      static constexpr const int Ancestor = 0;
      // Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Ancestor
      static ::MS::Internal::Xml::XPath::Axis::AxisType _get_Ancestor();
      // Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Ancestor
      static void _set_Ancestor(::MS::Internal::Xml::XPath::Axis::AxisType value);
      // static field const value: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType AncestorOrSelf
      static constexpr const int AncestorOrSelf = 1;
      // Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType AncestorOrSelf
      static ::MS::Internal::Xml::XPath::Axis::AxisType _get_AncestorOrSelf();
      // Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType AncestorOrSelf
      static void _set_AncestorOrSelf(::MS::Internal::Xml::XPath::Axis::AxisType value);
      // static field const value: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Attribute
      static constexpr const int Attribute = 2;
      // Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Attribute
      static ::MS::Internal::Xml::XPath::Axis::AxisType _get_Attribute();
      // Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Attribute
      static void _set_Attribute(::MS::Internal::Xml::XPath::Axis::AxisType value);
      // static field const value: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Child
      static constexpr const int Child = 3;
      // Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Child
      static ::MS::Internal::Xml::XPath::Axis::AxisType _get_Child();
      // Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Child
      static void _set_Child(::MS::Internal::Xml::XPath::Axis::AxisType value);
      // static field const value: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Descendant
      static constexpr const int Descendant = 4;
      // Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Descendant
      static ::MS::Internal::Xml::XPath::Axis::AxisType _get_Descendant();
      // Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Descendant
      static void _set_Descendant(::MS::Internal::Xml::XPath::Axis::AxisType value);
      // static field const value: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType DescendantOrSelf
      static constexpr const int DescendantOrSelf = 5;
      // Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType DescendantOrSelf
      static ::MS::Internal::Xml::XPath::Axis::AxisType _get_DescendantOrSelf();
      // Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType DescendantOrSelf
      static void _set_DescendantOrSelf(::MS::Internal::Xml::XPath::Axis::AxisType value);
      // static field const value: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Following
      static constexpr const int Following = 6;
      // Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Following
      static ::MS::Internal::Xml::XPath::Axis::AxisType _get_Following();
      // Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Following
      static void _set_Following(::MS::Internal::Xml::XPath::Axis::AxisType value);
      // static field const value: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType FollowingSibling
      static constexpr const int FollowingSibling = 7;
      // Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType FollowingSibling
      static ::MS::Internal::Xml::XPath::Axis::AxisType _get_FollowingSibling();
      // Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType FollowingSibling
      static void _set_FollowingSibling(::MS::Internal::Xml::XPath::Axis::AxisType value);
      // static field const value: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Namespace
      static constexpr const int Namespace = 8;
      // Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Namespace
      static ::MS::Internal::Xml::XPath::Axis::AxisType _get_Namespace();
      // Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Namespace
      static void _set_Namespace(::MS::Internal::Xml::XPath::Axis::AxisType value);
      // static field const value: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Parent
      static constexpr const int Parent = 9;
      // Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Parent
      static ::MS::Internal::Xml::XPath::Axis::AxisType _get_Parent();
      // Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Parent
      static void _set_Parent(::MS::Internal::Xml::XPath::Axis::AxisType value);
      // static field const value: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Preceding
      static constexpr const int Preceding = 10;
      // Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Preceding
      static ::MS::Internal::Xml::XPath::Axis::AxisType _get_Preceding();
      // Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Preceding
      static void _set_Preceding(::MS::Internal::Xml::XPath::Axis::AxisType value);
      // static field const value: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType PrecedingSibling
      static constexpr const int PrecedingSibling = 11;
      // Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType PrecedingSibling
      static ::MS::Internal::Xml::XPath::Axis::AxisType _get_PrecedingSibling();
      // Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType PrecedingSibling
      static void _set_PrecedingSibling(::MS::Internal::Xml::XPath::Axis::AxisType value);
      // static field const value: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Self
      static constexpr const int Self = 12;
      // Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Self
      static ::MS::Internal::Xml::XPath::Axis::AxisType _get_Self();
      // Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Self
      static void _set_Self(::MS::Internal::Xml::XPath::Axis::AxisType value);
      // static field const value: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType None
      static constexpr const int None = 13;
      // Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType None
      static ::MS::Internal::Xml::XPath::Axis::AxisType _get_None();
      // Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType None
      static void _set_None(::MS::Internal::Xml::XPath::Axis::AxisType value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated]] int& dyn_value__();
    }; // MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType
    #pragma pack(pop)
    static check_size<sizeof(Axis::AxisType), 0 + sizeof(int)> __MS_Internal_Xml_XPath_Axis_AxisTypeSizeCheck;
    static_assert(sizeof(Axis::AxisType) == 0x4);
    public:
    // private MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType axisType
    // Size: 0x4
    // Offset: 0x10
    ::MS::Internal::Xml::XPath::Axis::AxisType axisType;
    // Field size check
    static_assert(sizeof(::MS::Internal::Xml::XPath::Axis::AxisType) == 0x4);
    // Padding between fields: axisType and: input
    char __padding0[0x4] = {};
    // private MS.Internal.Xml.XPath.AstNode input
    // Size: 0x8
    // Offset: 0x18
    ::MS::Internal::Xml::XPath::AstNode* input;
    // Field size check
    static_assert(sizeof(::MS::Internal::Xml::XPath::AstNode*) == 0x8);
    // private System.String prefix
    // Size: 0x8
    // Offset: 0x20
    ::StringW prefix;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String name
    // Size: 0x8
    // Offset: 0x28
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Xml.XPath.XPathNodeType nodeType
    // Size: 0x4
    // Offset: 0x30
    ::System::Xml::XPath::XPathNodeType nodeType;
    // Field size check
    static_assert(sizeof(::System::Xml::XPath::XPathNodeType) == 0x4);
    // protected System.Boolean abbrAxis
    // Size: 0x1
    // Offset: 0x34
    bool abbrAxis;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: abbrAxis and: urn
    char __padding5[0x3] = {};
    // private System.String urn
    // Size: 0x8
    // Offset: 0x38
    ::StringW urn;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType axisType
    [[deprecated]] ::MS::Internal::Xml::XPath::Axis::AxisType& dyn_axisType();
    // Get instance field reference: private MS.Internal.Xml.XPath.AstNode input
    [[deprecated]] ::MS::Internal::Xml::XPath::AstNode*& dyn_input();
    // Get instance field reference: private System.String prefix
    [[deprecated]] ::StringW& dyn_prefix();
    // Get instance field reference: private System.String name
    [[deprecated]] ::StringW& dyn_name();
    // Get instance field reference: private System.Xml.XPath.XPathNodeType nodeType
    [[deprecated]] ::System::Xml::XPath::XPathNodeType& dyn_nodeType();
    // Get instance field reference: protected System.Boolean abbrAxis
    [[deprecated]] bool& dyn_abbrAxis();
    // Get instance field reference: private System.String urn
    [[deprecated]] ::StringW& dyn_urn();
    // public MS.Internal.Xml.XPath.AstNode get_Input()
    // Offset: 0xB5C4A8
    ::MS::Internal::Xml::XPath::AstNode* get_Input();
    // public System.Void set_Input(MS.Internal.Xml.XPath.AstNode value)
    // Offset: 0xB5C4B0
    void set_Input(::MS::Internal::Xml::XPath::AstNode* value);
    // public System.String get_Prefix()
    // Offset: 0xB5C4B8
    ::StringW get_Prefix();
    // public System.String get_Name()
    // Offset: 0xB5C4C0
    ::StringW get_Name();
    // public System.Xml.XPath.XPathNodeType get_NodeType()
    // Offset: 0xB5C4C8
    ::System::Xml::XPath::XPathNodeType get_NodeType();
    // public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType get_TypeOfAxis()
    // Offset: 0xB5C4D0
    ::MS::Internal::Xml::XPath::Axis::AxisType get_TypeOfAxis();
    // public System.Boolean get_AbbrAxis()
    // Offset: 0xB5C4D8
    bool get_AbbrAxis();
    // public System.String get_Urn()
    // Offset: 0xB5C4E0
    ::StringW get_Urn();
    // public System.Void set_Urn(System.String value)
    // Offset: 0xB5C4E8
    void set_Urn(::StringW value);
    // public System.Void .ctor(MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType axisType, MS.Internal.Xml.XPath.AstNode input, System.String prefix, System.String name, System.Xml.XPath.XPathNodeType nodetype)
    // Offset: 0xB5C37C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Axis* New_ctor(::MS::Internal::Xml::XPath::Axis::AxisType axisType, ::MS::Internal::Xml::XPath::AstNode* input, ::StringW prefix, ::StringW name, ::System::Xml::XPath::XPathNodeType nodetype) {
      static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Axis*, creationType>(axisType, input, prefix, name, nodetype)));
    }
    // public System.Void .ctor(MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType axisType, MS.Internal.Xml.XPath.AstNode input)
    // Offset: 0xB5C418
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Axis* New_ctor(::MS::Internal::Xml::XPath::Axis::AxisType axisType, ::MS::Internal::Xml::XPath::AstNode* input) {
      static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Axis*, creationType>(axisType, input)));
    }
    // public override MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType get_Type()
    // Offset: 0xB5C498
    // Implemented from: MS.Internal.Xml.XPath.AstNode
    // Base method: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType AstNode::get_Type()
    ::MS::Internal::Xml::XPath::AstNode::AstType get_Type();
    // public override System.Xml.XPath.XPathResultType get_ReturnType()
    // Offset: 0xB5C4A0
    // Implemented from: MS.Internal.Xml.XPath.AstNode
    // Base method: System.Xml.XPath.XPathResultType AstNode::get_ReturnType()
    ::System::Xml::XPath::XPathResultType get_ReturnType();
  }; // MS.Internal.Xml.XPath.Axis
  #pragma pack(pop)
  static check_size<sizeof(Axis), 56 + sizeof(::StringW)> __MS_Internal_Xml_XPath_AxisSizeCheck;
  static_assert(sizeof(Axis) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::MS::Internal::Xml::XPath::Axis::AxisType, "MS.Internal.Xml.XPath", "Axis/AxisType");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::Axis::get_Input
// Il2CppName: get_Input
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MS::Internal::Xml::XPath::AstNode* (MS::Internal::Xml::XPath::Axis::*)()>(&MS::Internal::Xml::XPath::Axis::get_Input)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MS::Internal::Xml::XPath::Axis*), "get_Input", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::Axis::set_Input
// Il2CppName: set_Input
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MS::Internal::Xml::XPath::Axis::*)(::MS::Internal::Xml::XPath::AstNode*)>(&MS::Internal::Xml::XPath::Axis::set_Input)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("MS.Internal.Xml.XPath", "AstNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MS::Internal::Xml::XPath::Axis*), "set_Input", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::Axis::get_Prefix
// Il2CppName: get_Prefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MS::Internal::Xml::XPath::Axis::*)()>(&MS::Internal::Xml::XPath::Axis::get_Prefix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MS::Internal::Xml::XPath::Axis*), "get_Prefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::Axis::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MS::Internal::Xml::XPath::Axis::*)()>(&MS::Internal::Xml::XPath::Axis::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MS::Internal::Xml::XPath::Axis*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::Axis::get_NodeType
// Il2CppName: get_NodeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XPath::XPathNodeType (MS::Internal::Xml::XPath::Axis::*)()>(&MS::Internal::Xml::XPath::Axis::get_NodeType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MS::Internal::Xml::XPath::Axis*), "get_NodeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::Axis::get_TypeOfAxis
// Il2CppName: get_TypeOfAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MS::Internal::Xml::XPath::Axis::AxisType (MS::Internal::Xml::XPath::Axis::*)()>(&MS::Internal::Xml::XPath::Axis::get_TypeOfAxis)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MS::Internal::Xml::XPath::Axis*), "get_TypeOfAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::Axis::get_AbbrAxis
// Il2CppName: get_AbbrAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MS::Internal::Xml::XPath::Axis::*)()>(&MS::Internal::Xml::XPath::Axis::get_AbbrAxis)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MS::Internal::Xml::XPath::Axis*), "get_AbbrAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::Axis::get_Urn
// Il2CppName: get_Urn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MS::Internal::Xml::XPath::Axis::*)()>(&MS::Internal::Xml::XPath::Axis::get_Urn)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MS::Internal::Xml::XPath::Axis*), "get_Urn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::Axis::set_Urn
// Il2CppName: set_Urn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MS::Internal::Xml::XPath::Axis::*)(::StringW)>(&MS::Internal::Xml::XPath::Axis::set_Urn)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MS::Internal::Xml::XPath::Axis*), "set_Urn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::Axis::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::Axis::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::Axis::get_Type
// Il2CppName: get_Type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MS::Internal::Xml::XPath::AstNode::AstType (MS::Internal::Xml::XPath::Axis::*)()>(&MS::Internal::Xml::XPath::Axis::get_Type)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MS::Internal::Xml::XPath::Axis*), "get_Type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::Axis::get_ReturnType
// Il2CppName: get_ReturnType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XPath::XPathResultType (MS::Internal::Xml::XPath::Axis::*)()>(&MS::Internal::Xml::XPath::Axis::get_ReturnType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MS::Internal::Xml::XPath::Axis*), "get_ReturnType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
