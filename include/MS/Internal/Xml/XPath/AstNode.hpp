// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MS::Internal::Xml::XPath
namespace MS::Internal::Xml::XPath {
}
// Forward declaring namespace: System::Xml::XPath
namespace System::Xml::XPath {
  // Forward declaring type: XPathResultType
  struct XPathResultType;
}
// Completed forward declares
// Type namespace: MS.Internal.Xml.XPath
namespace MS::Internal::Xml::XPath {
  // Forward declaring type: AstNode
  class AstNode;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MS::Internal::Xml::XPath::AstNode);
DEFINE_IL2CPP_ARG_TYPE(::MS::Internal::Xml::XPath::AstNode*, "MS.Internal.Xml.XPath", "AstNode");
// Type namespace: MS.Internal.Xml.XPath
namespace MS::Internal::Xml::XPath {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: MS.Internal.Xml.XPath.AstNode
  // [TokenAttribute] Offset: FFFFFFFF
  class AstNode : public ::Il2CppObject {
    public:
    // Nested type: ::MS::Internal::Xml::XPath::AstNode::AstType
    struct AstType;
    // public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType get_Type()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::MS::Internal::Xml::XPath::AstNode::AstType get_Type();
    // public System.Xml.XPath.XPathResultType get_ReturnType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Xml::XPath::XPathResultType get_ReturnType();
    // protected System.Void .ctor()
    // Offset: 0xB5B0E0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AstNode* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AstNode*, creationType>()));
    }
  }; // MS.Internal.Xml.XPath.AstNode
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::AstNode::get_Type
// Il2CppName: get_Type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MS::Internal::Xml::XPath::AstNode::AstType (MS::Internal::Xml::XPath::AstNode::*)()>(&MS::Internal::Xml::XPath::AstNode::get_Type)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MS::Internal::Xml::XPath::AstNode*), "get_Type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::AstNode::get_ReturnType
// Il2CppName: get_ReturnType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::XPath::XPathResultType (MS::Internal::Xml::XPath::AstNode::*)()>(&MS::Internal::Xml::XPath::AstNode::get_ReturnType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MS::Internal::Xml::XPath::AstNode*), "get_ReturnType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MS::Internal::Xml::XPath::AstNode::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
