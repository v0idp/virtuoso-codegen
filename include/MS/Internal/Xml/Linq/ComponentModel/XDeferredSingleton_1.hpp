// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Linq
namespace System::Xml::Linq {
  // Forward declaring type: XObject
  class XObject;
  // Forward declaring type: XElement
  class XElement;
  // Forward declaring type: XName
  class XName;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`3<T1, T2, TResult>
  template<typename T1, typename T2, typename TResult>
  class Func_3;
}
// Completed forward declares
// Type namespace: MS.Internal.Xml.Linq.ComponentModel
namespace MS::Internal::Xml::Linq::ComponentModel {
  // Forward declaring type: XDeferredSingleton`1<T>
  template<typename T>
  class XDeferredSingleton_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::MS::Internal::Xml::Linq::ComponentModel::XDeferredSingleton_1, "MS.Internal.Xml.Linq.ComponentModel", "XDeferredSingleton`1");
// Type namespace: MS.Internal.Xml.Linq.ComponentModel
namespace MS::Internal::Xml::Linq::ComponentModel {
  // WARNING Size may be invalid!
  // Autogenerated type: MS.Internal.Xml.Linq.ComponentModel.XDeferredSingleton`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 6E5B94
  template<typename T>
  class XDeferredSingleton_1 : public ::Il2CppObject {
    public:
    public:
    // private System.Func`3<System.Xml.Linq.XElement,System.Xml.Linq.XName,T> func
    // Size: 0x8
    // Offset: 0x0
    ::System::Func_3<::System::Xml::Linq::XElement*, ::System::Xml::Linq::XName*, T>* func;
    // Field size check
    static_assert(sizeof(::System::Func_3<::System::Xml::Linq::XElement*, ::System::Xml::Linq::XName*, T>*) == 0x8);
    // System.Xml.Linq.XElement element
    // Size: 0x8
    // Offset: 0x0
    ::System::Xml::Linq::XElement* element;
    // Field size check
    static_assert(sizeof(::System::Xml::Linq::XElement*) == 0x8);
    // System.Xml.Linq.XName name
    // Size: 0x8
    // Offset: 0x0
    ::System::Xml::Linq::XName* name;
    // Field size check
    static_assert(sizeof(::System::Xml::Linq::XName*) == 0x8);
    public:
    // Autogenerated instance field getter
    // Get instance field: private System.Func`3<System.Xml.Linq.XElement,System.Xml.Linq.XName,T> func
    [[deprecated("Use field access instead!")]] ::System::Func_3<::System::Xml::Linq::XElement*, ::System::Xml::Linq::XName*, T>*& dyn_func() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Linq::ComponentModel::XDeferredSingleton_1::dyn_func");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "func"))->offset;
      return *reinterpret_cast<::System::Func_3<::System::Xml::Linq::XElement*, ::System::Xml::Linq::XName*, T>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: System.Xml.Linq.XElement element
    [[deprecated("Use field access instead!")]] ::System::Xml::Linq::XElement*& dyn_element() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Linq::ComponentModel::XDeferredSingleton_1::dyn_element");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "element"))->offset;
      return *reinterpret_cast<::System::Xml::Linq::XElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: System.Xml.Linq.XName name
    [[deprecated("Use field access instead!")]] ::System::Xml::Linq::XName*& dyn_name() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Linq::ComponentModel::XDeferredSingleton_1::dyn_name");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
      return *reinterpret_cast<::System::Xml::Linq::XName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor(System.Func`3<System.Xml.Linq.XElement,System.Xml.Linq.XName,T> func, System.Xml.Linq.XElement element, System.Xml.Linq.XName name)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XDeferredSingleton_1<T>* New_ctor(::System::Func_3<::System::Xml::Linq::XElement*, ::System::Xml::Linq::XName*, T>* func, ::System::Xml::Linq::XElement* element, ::System::Xml::Linq::XName* name) {
      static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Linq::ComponentModel::XDeferredSingleton_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XDeferredSingleton_1<T>*, creationType>(func, element, name)));
    }
  }; // MS.Internal.Xml.Linq.ComponentModel.XDeferredSingleton`1
  // Could not write size check! Type: MS.Internal.Xml.Linq.ComponentModel.XDeferredSingleton`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
