// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Exception
  class Exception;
}
// Forward declaring namespace: RSG
namespace RSG {
  // Forward declaring type: IRejectable
  class IRejectable;
}
// Completed forward declares
// Type namespace: RSG
namespace RSG {
  // Forward declaring type: RejectHandler
  struct RejectHandler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::RSG::RejectHandler, "RSG", "RejectHandler");
// Type namespace: RSG
namespace RSG {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: RSG.RejectHandler
  // [TokenAttribute] Offset: FFFFFFFF
  struct RejectHandler/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Action`1<System.Exception> callback
    // Size: 0x8
    // Offset: 0x0
    ::System::Action_1<::System::Exception*>* callback;
    // Field size check
    static_assert(sizeof(::System::Action_1<::System::Exception*>*) == 0x8);
    // public RSG.IRejectable rejectable
    // Size: 0x8
    // Offset: 0x8
    ::RSG::IRejectable* rejectable;
    // Field size check
    static_assert(sizeof(::RSG::IRejectable*) == 0x8);
    public:
    // Creating value type constructor for type: RejectHandler
    constexpr RejectHandler(::System::Action_1<::System::Exception*>* callback_ = {}, ::RSG::IRejectable* rejectable_ = {}) noexcept : callback{callback_}, rejectable{rejectable_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Action`1<System.Exception> callback
    [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Exception*>*& dyn_callback();
    // Get instance field reference: public RSG.IRejectable rejectable
    [[deprecated("Use field access instead!")]] ::RSG::IRejectable*& dyn_rejectable();
  }; // RSG.RejectHandler
  #pragma pack(pop)
  static check_size<sizeof(RejectHandler), 8 + sizeof(::RSG::IRejectable*)> __RSG_RejectHandlerSizeCheck;
  static_assert(sizeof(RejectHandler) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
