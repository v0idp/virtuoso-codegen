// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: RSG.PromiseHelpers
#include "RSG/PromiseHelpers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: RSG
namespace RSG {
  // Forward declaring type: Promise`1<PromisedT>
  template<typename PromisedT>
  class Promise_1;
  // Forward declaring type: Tuple`2<T1, T2>
  template<typename T1, typename T2>
  class Tuple_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::RSG::PromiseHelpers::$$c__DisplayClass0_0_2, "RSG", "PromiseHelpers/<>c__DisplayClass0_0`2");
// Type namespace: RSG
namespace RSG {
  // WARNING Size may be invalid!
  // Autogenerated type: RSG.PromiseHelpers/RSG.<>c__DisplayClass0_0`2
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  template<typename T1, typename T2>
  class PromiseHelpers::$$c__DisplayClass0_0_2 : public ::Il2CppObject {
    public:
    public:
    // public T1 val1
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    T1 val1;
    // public System.Int32 numUnresolved
    // Size: 0x4
    // Offset: 0x0
    int numUnresolved;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public RSG.Promise`1<RSG.Tuple`2<T1,T2>> promise
    // Size: 0x8
    // Offset: 0x0
    ::RSG::Promise_1<::RSG::Tuple_2<T1, T2>*>* promise;
    // Field size check
    static_assert(sizeof(::RSG::Promise_1<::RSG::Tuple_2<T1, T2>*>*) == 0x8);
    // public T2 val2
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    T2 val2;
    // public System.Boolean alreadyRejected
    // Size: 0x1
    // Offset: 0x0
    bool alreadyRejected;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Autogenerated instance field getter
    // Get instance field: public T1 val1
    [[deprecated]] T1& dyn_val1() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseHelpers::$$c__DisplayClass0_0_2::dyn_val1");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "val1"))->offset;
      return *reinterpret_cast<T1*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public System.Int32 numUnresolved
    [[deprecated]] int& dyn_numUnresolved() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseHelpers::$$c__DisplayClass0_0_2::dyn_numUnresolved");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numUnresolved"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public RSG.Promise`1<RSG.Tuple`2<T1,T2>> promise
    [[deprecated]] ::RSG::Promise_1<::RSG::Tuple_2<T1, T2>*>*& dyn_promise() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseHelpers::$$c__DisplayClass0_0_2::dyn_promise");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "promise"))->offset;
      return *reinterpret_cast<::RSG::Promise_1<::RSG::Tuple_2<T1, T2>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public T2 val2
    [[deprecated]] T2& dyn_val2() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseHelpers::$$c__DisplayClass0_0_2::dyn_val2");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "val2"))->offset;
      return *reinterpret_cast<T2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public System.Boolean alreadyRejected
    [[deprecated]] bool& dyn_alreadyRejected() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseHelpers::$$c__DisplayClass0_0_2::dyn_alreadyRejected");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alreadyRejected"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // System.Void <All>b__0(T1 val)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void $All$b__0(T1 val) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseHelpers::$$c__DisplayClass0_0_2::<All>b__0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<All>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
    }
    // System.Void <All>b__1(System.Exception e)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void $All$b__1(::System::Exception* e) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseHelpers::$$c__DisplayClass0_0_2::<All>b__1");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<All>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
    }
    // System.Void <All>b__2(T2 val)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void $All$b__2(T2 val) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseHelpers::$$c__DisplayClass0_0_2::<All>b__2");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<All>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
    }
    // System.Void <All>b__3(System.Exception e)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void $All$b__3(::System::Exception* e) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseHelpers::$$c__DisplayClass0_0_2::<All>b__3");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<All>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PromiseHelpers::$$c__DisplayClass0_0_2<T1, T2>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseHelpers::$$c__DisplayClass0_0_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PromiseHelpers::$$c__DisplayClass0_0_2<T1, T2>*, creationType>()));
    }
  }; // RSG.PromiseHelpers/RSG.<>c__DisplayClass0_0`2
  // Could not write size check! Type: RSG.PromiseHelpers/RSG.<>c__DisplayClass0_0`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
