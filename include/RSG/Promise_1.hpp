// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: RSG.IPromise`1
#include "RSG/IPromise_1.hpp"
// Including type: RSG.IPendingPromise`1
#include "RSG/IPendingPromise_1.hpp"
// Including type: RSG.IPromiseInfo
#include "RSG/IPromiseInfo.hpp"
// Including type: RSG.RejectHandler
#include "RSG/RejectHandler.hpp"
// Including type: RSG.ProgressHandler
#include "RSG/ProgressHandler.hpp"
// Including type: RSG.PromiseState
#include "RSG/PromiseState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: RSG
namespace RSG {
  // Skipping declaration: <>c__DisplayClass24_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass26_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass34_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass35_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass42_0`1 because it is already included!
  // Skipping declaration: <>c__DisplayClass43_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass44_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass45_0`1 because it is already included!
  // Skipping declaration: <>c__DisplayClass48_0`1 because it is already included!
  // Skipping declaration: <>c__DisplayClass49_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass51_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass51_1 because it is already included!
  // Skipping declaration: <>c__DisplayClass52_0`1 because it is already included!
  // Skipping declaration: <>c__DisplayClass53_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass55_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass55_1 because it is already included!
  // Skipping declaration: <>c__DisplayClass58_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass59_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass60_0`1 because it is already included!
  // Skipping declaration: IRejectable because it is already included!
  // Forward declaring type: IPromise
  class IPromise;
  // Forward declaring type: Promise
  class Promise;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
// Type namespace: RSG
namespace RSG {
  // Forward declaring type: Promise`1<PromisedT>
  template<typename PromisedT>
  class Promise_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::RSG::Promise_1, "RSG", "Promise`1");
// Type namespace: RSG
namespace RSG {
  // WARNING Size may be invalid!
  // Autogenerated type: RSG.Promise`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename PromisedT>
  class Promise_1 : public ::Il2CppObject/*, public ::RSG::IPromise_1<PromisedT>, public ::RSG::IPendingPromise_1<PromisedT>, public ::RSG::IPromiseInfo*/ {
    public:
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass24_0<PromisedT>
    class $$c__DisplayClass24_0;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass26_0<PromisedT>
    class $$c__DisplayClass26_0;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass34_0<PromisedT>
    class $$c__DisplayClass34_0;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass35_0<PromisedT>
    class $$c__DisplayClass35_0;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass42_0_1<PromisedT, ConvertedT>
    template<typename ConvertedT>
    class $$c__DisplayClass42_0_1;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass43_0<PromisedT>
    class $$c__DisplayClass43_0;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass44_0<PromisedT>
    class $$c__DisplayClass44_0;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass45_0_1<PromisedT, ConvertedT>
    template<typename ConvertedT>
    class $$c__DisplayClass45_0_1;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass48_0_1<PromisedT, ConvertedT>
    template<typename ConvertedT>
    class $$c__DisplayClass48_0_1;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass49_0<PromisedT>
    class $$c__DisplayClass49_0;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass51_0<PromisedT>
    class $$c__DisplayClass51_0;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass51_1<PromisedT>
    class $$c__DisplayClass51_1;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass52_0_1<PromisedT, ConvertedT>
    template<typename ConvertedT>
    class $$c__DisplayClass52_0_1;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass53_0<PromisedT>
    class $$c__DisplayClass53_0;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass55_0<PromisedT>
    class $$c__DisplayClass55_0;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass55_1<PromisedT>
    class $$c__DisplayClass55_1;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass58_0<PromisedT>
    class $$c__DisplayClass58_0;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass59_0<PromisedT>
    class $$c__DisplayClass59_0;
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass60_0_1<PromisedT, ConvertedT>
    template<typename ConvertedT>
    class $$c__DisplayClass60_0_1;
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass24_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass24_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass24_0";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public RSG.Promise`1<PromisedT> <>4__this
      // Size: 0x8
      // Offset: 0x0
      ::RSG::Promise_1<PromisedT>* $$4__this;
      // Field size check
      static_assert(sizeof(::RSG::Promise_1<PromisedT>*) == 0x8);
      // public System.Exception ex
      // Size: 0x8
      // Offset: 0x0
      ::System::Exception* ex;
      // Field size check
      static_assert(sizeof(::System::Exception*) == 0x8);
      public:
      // Autogenerated instance field getter
      // Get instance field: public RSG.Promise`1<PromisedT> <>4__this
      [[deprecated("Use field access instead!")]] ::RSG::Promise_1<PromisedT>*& dyn_$$4__this() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass24_0::dyn_$$4__this");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
        return *reinterpret_cast<::RSG::Promise_1<PromisedT>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Exception ex
      [[deprecated("Use field access instead!")]] ::System::Exception*& dyn_ex() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass24_0::dyn_ex");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ex"))->offset;
        return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass24_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass24_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass24_0*, creationType>()));
      }
      // System.Void <InvokeRejectHandlers>b__0(RSG.RejectHandler handler)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $InvokeRejectHandlers$b__0(::RSG::RejectHandler handler) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass24_0::<InvokeRejectHandlers>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InvokeRejectHandlers>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handler);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass24_0
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass24_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass26_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass26_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass26_0";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public RSG.Promise`1<PromisedT> <>4__this
      // Size: 0x8
      // Offset: 0x0
      ::RSG::Promise_1<PromisedT>* $$4__this;
      // Field size check
      static_assert(sizeof(::RSG::Promise_1<PromisedT>*) == 0x8);
      // public System.Single progress
      // Size: 0x4
      // Offset: 0x0
      float progress;
      // Field size check
      static_assert(sizeof(float) == 0x4);
      public:
      // Autogenerated instance field getter
      // Get instance field: public RSG.Promise`1<PromisedT> <>4__this
      [[deprecated("Use field access instead!")]] ::RSG::Promise_1<PromisedT>*& dyn_$$4__this() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass26_0::dyn_$$4__this");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
        return *reinterpret_cast<::RSG::Promise_1<PromisedT>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Single progress
      [[deprecated("Use field access instead!")]] float& dyn_progress() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass26_0::dyn_progress");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progress"))->offset;
        return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass26_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass26_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass26_0*, creationType>()));
      }
      // System.Void <InvokeProgressHandlers>b__0(RSG.ProgressHandler handler)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $InvokeProgressHandlers$b__0(::RSG::ProgressHandler handler) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass26_0::<InvokeProgressHandlers>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InvokeProgressHandlers>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handler);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass26_0
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass26_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass34_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass34_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass34_0";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public RSG.Promise resultPromise
      // Size: 0x8
      // Offset: 0x0
      ::RSG::Promise* resultPromise;
      // Field size check
      static_assert(sizeof(::RSG::Promise*) == 0x8);
      // public System.Action`1<System.Exception> onRejected
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_1<::System::Exception*>* onRejected;
      // Field size check
      static_assert(sizeof(::System::Action_1<::System::Exception*>*) == 0x8);
      public:
      // Autogenerated instance field getter
      // Get instance field: public RSG.Promise resultPromise
      [[deprecated("Use field access instead!")]] ::RSG::Promise*& dyn_resultPromise() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass34_0::dyn_resultPromise");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultPromise"))->offset;
        return *reinterpret_cast<::RSG::Promise**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`1<System.Exception> onRejected
      [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Exception*>*& dyn_onRejected() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass34_0::dyn_onRejected");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onRejected"))->offset;
        return *reinterpret_cast<::System::Action_1<::System::Exception*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass34_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass34_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass34_0*, creationType>()));
      }
      // System.Void <Catch>b__0(PromisedT _)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Catch$b__0(PromisedT _) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass34_0::<Catch>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Catch>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _);
      }
      // System.Void <Catch>b__1(System.Exception ex)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Catch$b__1(::System::Exception* ex) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass34_0::<Catch>b__1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Catch>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
      }
      // System.Void <Catch>b__2(System.Single v)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Catch$b__2(float v) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass34_0::<Catch>b__2");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Catch>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass34_0
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass34_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass35_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass35_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass35_0";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public RSG.Promise`1<PromisedT> resultPromise
      // Size: 0x8
      // Offset: 0x0
      ::RSG::Promise_1<PromisedT>* resultPromise;
      // Field size check
      static_assert(sizeof(::RSG::Promise_1<PromisedT>*) == 0x8);
      // public System.Func`2<System.Exception,PromisedT> onRejected
      // Size: 0x8
      // Offset: 0x0
      ::System::Func_2<::System::Exception*, PromisedT>* onRejected;
      // Field size check
      static_assert(sizeof(::System::Func_2<::System::Exception*, PromisedT>*) == 0x8);
      public:
      // Autogenerated instance field getter
      // Get instance field: public RSG.Promise`1<PromisedT> resultPromise
      [[deprecated("Use field access instead!")]] ::RSG::Promise_1<PromisedT>*& dyn_resultPromise() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass35_0::dyn_resultPromise");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultPromise"))->offset;
        return *reinterpret_cast<::RSG::Promise_1<PromisedT>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Func`2<System.Exception,PromisedT> onRejected
      [[deprecated("Use field access instead!")]] ::System::Func_2<::System::Exception*, PromisedT>*& dyn_onRejected() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass35_0::dyn_onRejected");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onRejected"))->offset;
        return *reinterpret_cast<::System::Func_2<::System::Exception*, PromisedT>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass35_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass35_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass35_0*, creationType>()));
      }
      // System.Void <Catch>b__0(PromisedT v)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Catch$b__0(PromisedT v) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass35_0::<Catch>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Catch>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
      }
      // System.Void <Catch>b__1(System.Exception ex)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Catch$b__1(::System::Exception* ex) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass35_0::<Catch>b__1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Catch>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
      }
      // System.Void <Catch>b__2(System.Single v)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Catch$b__2(float v) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass35_0::<Catch>b__2");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Catch>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass35_0
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass35_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass42_0`1
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    template<typename ConvertedT>
    class $$c__DisplayClass42_0_1 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass42_0`1";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public System.Func`2<PromisedT,RSG.IPromise`1<ConvertedT>> onResolved
      // Size: 0x8
      // Offset: 0x0
      ::System::Func_2<PromisedT, ::RSG::IPromise_1<ConvertedT>*>* onResolved;
      // Field size check
      static_assert(sizeof(::System::Func_2<PromisedT, ::RSG::IPromise_1<ConvertedT>*>*) == 0x8);
      // public RSG.Promise`1<ConvertedT> resultPromise
      // Size: 0x8
      // Offset: 0x0
      ::RSG::Promise_1<ConvertedT>* resultPromise;
      // Field size check
      static_assert(sizeof(::RSG::Promise_1<ConvertedT>*) == 0x8);
      // public System.Func`2<System.Exception,RSG.IPromise`1<ConvertedT>> onRejected
      // Size: 0x8
      // Offset: 0x0
      ::System::Func_2<::System::Exception*, ::RSG::IPromise_1<ConvertedT>*>* onRejected;
      // Field size check
      static_assert(sizeof(::System::Func_2<::System::Exception*, ::RSG::IPromise_1<ConvertedT>*>*) == 0x8);
      // public System.Action`1<System.Single> <>9__2
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_1<float>* $$9__2;
      // Field size check
      static_assert(sizeof(::System::Action_1<float>*) == 0x8);
      // public System.Action`1<ConvertedT> <>9__3
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_1<ConvertedT>* $$9__3;
      // Field size check
      static_assert(sizeof(::System::Action_1<ConvertedT>*) == 0x8);
      // public System.Action`1<System.Exception> <>9__4
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_1<::System::Exception*>* $$9__4;
      // Field size check
      static_assert(sizeof(::System::Action_1<::System::Exception*>*) == 0x8);
      // public System.Action`1<ConvertedT> <>9__5
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_1<ConvertedT>* $$9__5;
      // Field size check
      static_assert(sizeof(::System::Action_1<ConvertedT>*) == 0x8);
      // public System.Action`1<System.Exception> <>9__6
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_1<::System::Exception*>* $$9__6;
      // Field size check
      static_assert(sizeof(::System::Action_1<::System::Exception*>*) == 0x8);
      public:
      // Autogenerated instance field getter
      // Get instance field: public System.Func`2<PromisedT,RSG.IPromise`1<ConvertedT>> onResolved
      [[deprecated("Use field access instead!")]] ::System::Func_2<PromisedT, ::RSG::IPromise_1<ConvertedT>*>*& dyn_onResolved() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass42_0_1::dyn_onResolved");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onResolved"))->offset;
        return *reinterpret_cast<::System::Func_2<PromisedT, ::RSG::IPromise_1<ConvertedT>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public RSG.Promise`1<ConvertedT> resultPromise
      [[deprecated("Use field access instead!")]] ::RSG::Promise_1<ConvertedT>*& dyn_resultPromise() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass42_0_1::dyn_resultPromise");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultPromise"))->offset;
        return *reinterpret_cast<::RSG::Promise_1<ConvertedT>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Func`2<System.Exception,RSG.IPromise`1<ConvertedT>> onRejected
      [[deprecated("Use field access instead!")]] ::System::Func_2<::System::Exception*, ::RSG::IPromise_1<ConvertedT>*>*& dyn_onRejected() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass42_0_1::dyn_onRejected");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onRejected"))->offset;
        return *reinterpret_cast<::System::Func_2<::System::Exception*, ::RSG::IPromise_1<ConvertedT>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`1<System.Single> <>9__2
      [[deprecated("Use field access instead!")]] ::System::Action_1<float>*& dyn_$$9__2() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass42_0_1::dyn_$$9__2");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__2"))->offset;
        return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`1<ConvertedT> <>9__3
      [[deprecated("Use field access instead!")]] ::System::Action_1<ConvertedT>*& dyn_$$9__3() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass42_0_1::dyn_$$9__3");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__3"))->offset;
        return *reinterpret_cast<::System::Action_1<ConvertedT>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`1<System.Exception> <>9__4
      [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Exception*>*& dyn_$$9__4() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass42_0_1::dyn_$$9__4");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__4"))->offset;
        return *reinterpret_cast<::System::Action_1<::System::Exception*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`1<ConvertedT> <>9__5
      [[deprecated("Use field access instead!")]] ::System::Action_1<ConvertedT>*& dyn_$$9__5() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass42_0_1::dyn_$$9__5");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__5"))->offset;
        return *reinterpret_cast<::System::Action_1<ConvertedT>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`1<System.Exception> <>9__6
      [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Exception*>*& dyn_$$9__6() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass42_0_1::dyn_$$9__6");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__6"))->offset;
        return *reinterpret_cast<::System::Action_1<::System::Exception*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass42_0_1<ConvertedT>* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass42_0_1::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass42_0_1<ConvertedT>*, creationType>()));
      }
      // System.Void <Then>b__0(PromisedT v)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Then$b__0(PromisedT v) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass42_0_1::<Then>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Then>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
      }
      // System.Void <Then>b__2(System.Single progress)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Then$b__2(float progress) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass42_0_1::<Then>b__2");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Then>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
      }
      // System.Void <Then>b__3(ConvertedT chainedValue)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Then$b__3(ConvertedT chainedValue) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass42_0_1::<Then>b__3");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Then>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chainedValue)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chainedValue);
      }
      // System.Void <Then>b__4(System.Exception ex)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Then$b__4(::System::Exception* ex) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass42_0_1::<Then>b__4");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Then>b__4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
      }
      // System.Void <Then>b__1(System.Exception ex)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Then$b__1(::System::Exception* ex) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass42_0_1::<Then>b__1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Then>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
      }
      // System.Void <Then>b__5(ConvertedT chainedValue)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Then$b__5(ConvertedT chainedValue) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass42_0_1::<Then>b__5");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Then>b__5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chainedValue)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chainedValue);
      }
      // System.Void <Then>b__6(System.Exception callbackEx)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Then$b__6(::System::Exception* callbackEx) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass42_0_1::<Then>b__6");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Then>b__6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackEx)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callbackEx);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass42_0`1
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass42_0`1 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass43_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass43_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass43_0";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public System.Func`2<PromisedT,RSG.IPromise> onResolved
      // Size: 0x8
      // Offset: 0x0
      ::System::Func_2<PromisedT, ::RSG::IPromise*>* onResolved;
      // Field size check
      static_assert(sizeof(::System::Func_2<PromisedT, ::RSG::IPromise*>*) == 0x8);
      // public RSG.Promise resultPromise
      // Size: 0x8
      // Offset: 0x0
      ::RSG::Promise* resultPromise;
      // Field size check
      static_assert(sizeof(::RSG::Promise*) == 0x8);
      // public System.Action`1<System.Exception> onRejected
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_1<::System::Exception*>* onRejected;
      // Field size check
      static_assert(sizeof(::System::Action_1<::System::Exception*>*) == 0x8);
      // public System.Action`1<System.Single> <>9__2
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_1<float>* $$9__2;
      // Field size check
      static_assert(sizeof(::System::Action_1<float>*) == 0x8);
      // public System.Action <>9__3
      // Size: 0x8
      // Offset: 0x0
      ::System::Action* $$9__3;
      // Field size check
      static_assert(sizeof(::System::Action*) == 0x8);
      // public System.Action`1<System.Exception> <>9__4
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_1<::System::Exception*>* $$9__4;
      // Field size check
      static_assert(sizeof(::System::Action_1<::System::Exception*>*) == 0x8);
      public:
      // Autogenerated instance field getter
      // Get instance field: public System.Func`2<PromisedT,RSG.IPromise> onResolved
      [[deprecated("Use field access instead!")]] ::System::Func_2<PromisedT, ::RSG::IPromise*>*& dyn_onResolved() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass43_0::dyn_onResolved");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onResolved"))->offset;
        return *reinterpret_cast<::System::Func_2<PromisedT, ::RSG::IPromise*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public RSG.Promise resultPromise
      [[deprecated("Use field access instead!")]] ::RSG::Promise*& dyn_resultPromise() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass43_0::dyn_resultPromise");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultPromise"))->offset;
        return *reinterpret_cast<::RSG::Promise**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`1<System.Exception> onRejected
      [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Exception*>*& dyn_onRejected() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass43_0::dyn_onRejected");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onRejected"))->offset;
        return *reinterpret_cast<::System::Action_1<::System::Exception*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`1<System.Single> <>9__2
      [[deprecated("Use field access instead!")]] ::System::Action_1<float>*& dyn_$$9__2() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass43_0::dyn_$$9__2");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__2"))->offset;
        return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action <>9__3
      [[deprecated("Use field access instead!")]] ::System::Action*& dyn_$$9__3() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass43_0::dyn_$$9__3");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__3"))->offset;
        return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`1<System.Exception> <>9__4
      [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Exception*>*& dyn_$$9__4() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass43_0::dyn_$$9__4");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__4"))->offset;
        return *reinterpret_cast<::System::Action_1<::System::Exception*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass43_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass43_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass43_0*, creationType>()));
      }
      // System.Void <Then>b__0(PromisedT v)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Then$b__0(PromisedT v) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass43_0::<Then>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Then>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
      }
      // System.Void <Then>b__2(System.Single progress)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Then$b__2(float progress) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass43_0::<Then>b__2");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Then>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
      }
      // System.Void <Then>b__3()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Then$b__3() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass43_0::<Then>b__3");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Then>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // System.Void <Then>b__4(System.Exception ex)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Then$b__4(::System::Exception* ex) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass43_0::<Then>b__4");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Then>b__4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
      }
      // System.Void <Then>b__1(System.Exception ex)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Then$b__1(::System::Exception* ex) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass43_0::<Then>b__1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Then>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass43_0
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass43_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass44_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass44_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass44_0";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public System.Action`1<PromisedT> onResolved
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_1<PromisedT>* onResolved;
      // Field size check
      static_assert(sizeof(::System::Action_1<PromisedT>*) == 0x8);
      // public RSG.Promise resultPromise
      // Size: 0x8
      // Offset: 0x0
      ::RSG::Promise* resultPromise;
      // Field size check
      static_assert(sizeof(::RSG::Promise*) == 0x8);
      // public System.Action`1<System.Exception> onRejected
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_1<::System::Exception*>* onRejected;
      // Field size check
      static_assert(sizeof(::System::Action_1<::System::Exception*>*) == 0x8);
      public:
      // Autogenerated instance field getter
      // Get instance field: public System.Action`1<PromisedT> onResolved
      [[deprecated("Use field access instead!")]] ::System::Action_1<PromisedT>*& dyn_onResolved() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass44_0::dyn_onResolved");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onResolved"))->offset;
        return *reinterpret_cast<::System::Action_1<PromisedT>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public RSG.Promise resultPromise
      [[deprecated("Use field access instead!")]] ::RSG::Promise*& dyn_resultPromise() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass44_0::dyn_resultPromise");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultPromise"))->offset;
        return *reinterpret_cast<::RSG::Promise**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`1<System.Exception> onRejected
      [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Exception*>*& dyn_onRejected() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass44_0::dyn_onRejected");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onRejected"))->offset;
        return *reinterpret_cast<::System::Action_1<::System::Exception*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass44_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass44_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass44_0*, creationType>()));
      }
      // System.Void <Then>b__0(PromisedT v)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Then$b__0(PromisedT v) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass44_0::<Then>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Then>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
      }
      // System.Void <Then>b__1(System.Exception ex)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Then$b__1(::System::Exception* ex) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass44_0::<Then>b__1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Then>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass44_0
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass44_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass45_0`1
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    template<typename ConvertedT>
    class $$c__DisplayClass45_0_1 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass45_0`1";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public System.Func`2<PromisedT,ConvertedT> transform
      // Size: 0x8
      // Offset: 0x0
      ::System::Func_2<PromisedT, ConvertedT>* transform;
      // Field size check
      static_assert(sizeof(::System::Func_2<PromisedT, ConvertedT>*) == 0x8);
      public:
      // Creating conversion operator: operator ::System::Func_2<PromisedT, ConvertedT>*
      constexpr operator ::System::Func_2<PromisedT, ConvertedT>*() const noexcept {
        return transform;
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Func`2<PromisedT,ConvertedT> transform
      [[deprecated("Use field access instead!")]] ::System::Func_2<PromisedT, ConvertedT>*& dyn_transform() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass45_0_1::dyn_transform");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
        return *reinterpret_cast<::System::Func_2<PromisedT, ConvertedT>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass45_0_1<ConvertedT>* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass45_0_1::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass45_0_1<ConvertedT>*, creationType>()));
      }
      // RSG.IPromise`1<ConvertedT> <Then>b__0(PromisedT value)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::RSG::IPromise_1<ConvertedT>* $Then$b__0(PromisedT value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass45_0_1::<Then>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Then>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
        return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<ConvertedT>*, false>(this, ___internal__method, value);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass45_0`1
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass45_0`1 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass48_0`1
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    template<typename ConvertedT>
    class $$c__DisplayClass48_0_1 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass48_0`1";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public System.Func`2<PromisedT,System.Collections.Generic.IEnumerable`1<RSG.IPromise`1<ConvertedT>>> chain
      // Size: 0x8
      // Offset: 0x0
      ::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise_1<ConvertedT>*>*>* chain;
      // Field size check
      static_assert(sizeof(::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise_1<ConvertedT>*>*>*) == 0x8);
      public:
      // Creating conversion operator: operator ::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise_1<ConvertedT>*>*>*
      constexpr operator ::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise_1<ConvertedT>*>*>*() const noexcept {
        return chain;
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Func`2<PromisedT,System.Collections.Generic.IEnumerable`1<RSG.IPromise`1<ConvertedT>>> chain
      [[deprecated("Use field access instead!")]] ::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise_1<ConvertedT>*>*>*& dyn_chain() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass48_0_1::dyn_chain");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chain"))->offset;
        return *reinterpret_cast<::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise_1<ConvertedT>*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass48_0_1<ConvertedT>* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass48_0_1::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass48_0_1<ConvertedT>*, creationType>()));
      }
      // RSG.IPromise`1<System.Collections.Generic.IEnumerable`1<ConvertedT>> <ThenAll>b__0(PromisedT value)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::RSG::IPromise_1<::System::Collections::Generic::IEnumerable_1<ConvertedT>*>* $ThenAll$b__0(PromisedT value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass48_0_1::<ThenAll>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ThenAll>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
        return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<::System::Collections::Generic::IEnumerable_1<ConvertedT>*>*, false>(this, ___internal__method, value);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass48_0`1
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass48_0`1 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass49_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass49_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass49_0";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public System.Func`2<PromisedT,System.Collections.Generic.IEnumerable`1<RSG.IPromise>> chain
      // Size: 0x8
      // Offset: 0x0
      ::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise*>*>* chain;
      // Field size check
      static_assert(sizeof(::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise*>*>*) == 0x8);
      public:
      // Creating conversion operator: operator ::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise*>*>*
      constexpr operator ::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise*>*>*() const noexcept {
        return chain;
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Func`2<PromisedT,System.Collections.Generic.IEnumerable`1<RSG.IPromise>> chain
      [[deprecated("Use field access instead!")]] ::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise*>*>*& dyn_chain() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass49_0::dyn_chain");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chain"))->offset;
        return *reinterpret_cast<::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass49_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass49_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass49_0*, creationType>()));
      }
      // RSG.IPromise <ThenAll>b__0(PromisedT value)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::RSG::IPromise* $ThenAll$b__0(PromisedT value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass49_0::<ThenAll>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ThenAll>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
        return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise*, false>(this, ___internal__method, value);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass49_0
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass49_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass51_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass51_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass51_0";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public System.Single[] progress
      // Size: 0x8
      // Offset: 0x0
      ::ArrayW<float> progress;
      // Field size check
      static_assert(sizeof(::ArrayW<float>) == 0x8);
      // public RSG.Promise`1<System.Collections.Generic.IEnumerable`1<PromisedT>> resultPromise
      // Size: 0x8
      // Offset: 0x0
      ::RSG::Promise_1<::System::Collections::Generic::IEnumerable_1<PromisedT>*>* resultPromise;
      // Field size check
      static_assert(sizeof(::RSG::Promise_1<::System::Collections::Generic::IEnumerable_1<PromisedT>*>*) == 0x8);
      // public PromisedT[] results
      // Size: 0x8
      // Offset: 0x0
      ::ArrayW<PromisedT> results;
      // Field size check
      static_assert(sizeof(::ArrayW<PromisedT>) == 0x8);
      // public System.Int32 remainingCount
      // Size: 0x4
      // Offset: 0x0
      int remainingCount;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public System.Action`1<System.Exception> <>9__3
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_1<::System::Exception*>* $$9__3;
      // Field size check
      static_assert(sizeof(::System::Action_1<::System::Exception*>*) == 0x8);
      public:
      // Autogenerated instance field getter
      // Get instance field: public System.Single[] progress
      [[deprecated("Use field access instead!")]] ::ArrayW<float>& dyn_progress() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass51_0::dyn_progress");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progress"))->offset;
        return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public RSG.Promise`1<System.Collections.Generic.IEnumerable`1<PromisedT>> resultPromise
      [[deprecated("Use field access instead!")]] ::RSG::Promise_1<::System::Collections::Generic::IEnumerable_1<PromisedT>*>*& dyn_resultPromise() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass51_0::dyn_resultPromise");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultPromise"))->offset;
        return *reinterpret_cast<::RSG::Promise_1<::System::Collections::Generic::IEnumerable_1<PromisedT>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public PromisedT[] results
      [[deprecated("Use field access instead!")]] ::ArrayW<PromisedT>& dyn_results() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass51_0::dyn_results");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "results"))->offset;
        return *reinterpret_cast<::ArrayW<PromisedT>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Int32 remainingCount
      [[deprecated("Use field access instead!")]] int& dyn_remainingCount() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass51_0::dyn_remainingCount");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remainingCount"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`1<System.Exception> <>9__3
      [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Exception*>*& dyn_$$9__3() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass51_0::dyn_$$9__3");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__3"))->offset;
        return *reinterpret_cast<::System::Action_1<::System::Exception*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass51_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass51_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass51_0*, creationType>()));
      }
      // System.Void <All>b__0(RSG.IPromise`1<PromisedT> promise, System.Int32 index)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $All$b__0(::RSG::IPromise_1<PromisedT>* promise, int index) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass51_0::<All>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<All>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(promise), ::il2cpp_utils::ExtractType(index)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, promise, index);
      }
      // System.Void <All>b__3(System.Exception ex)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $All$b__3(::System::Exception* ex) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass51_0::<All>b__3");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<All>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass51_0
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass51_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass51_1
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass51_1 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass51_1";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public System.Int32 index
      // Size: 0x4
      // Offset: 0x0
      int index;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public RSG.Promise`1/RSG.<>c__DisplayClass51_0<PromisedT> CS$<>8__locals1
      // Size: 0x8
      // Offset: 0x0
      typename ::RSG::Promise_1<PromisedT>::$$c__DisplayClass51_0* CS$$$8__locals1;
      // Field size check
      static_assert(sizeof(typename ::RSG::Promise_1<PromisedT>::$$c__DisplayClass51_0*) == 0x8);
      public:
      // Autogenerated instance field getter
      // Get instance field: public System.Int32 index
      [[deprecated("Use field access instead!")]] int& dyn_index() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass51_1::dyn_index");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public RSG.Promise`1/RSG.<>c__DisplayClass51_0<PromisedT> CS$<>8__locals1
      [[deprecated("Use field access instead!")]] typename ::RSG::Promise_1<PromisedT>::$$c__DisplayClass51_0*& dyn_CS$$$8__locals1() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass51_1::dyn_CS$$$8__locals1");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
        return *reinterpret_cast<typename ::RSG::Promise_1<PromisedT>::$$c__DisplayClass51_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass51_1* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass51_1::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass51_1*, creationType>()));
      }
      // System.Void <All>b__1(System.Single v)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $All$b__1(float v) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass51_1::<All>b__1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<All>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
      }
      // System.Void <All>b__2(PromisedT result)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $All$b__2(PromisedT result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass51_1::<All>b__2");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<All>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass51_1
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass51_1 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass52_0`1
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    template<typename ConvertedT>
    class $$c__DisplayClass52_0_1 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass52_0`1";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public System.Func`2<PromisedT,System.Collections.Generic.IEnumerable`1<RSG.IPromise`1<ConvertedT>>> chain
      // Size: 0x8
      // Offset: 0x0
      ::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise_1<ConvertedT>*>*>* chain;
      // Field size check
      static_assert(sizeof(::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise_1<ConvertedT>*>*>*) == 0x8);
      public:
      // Creating conversion operator: operator ::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise_1<ConvertedT>*>*>*
      constexpr operator ::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise_1<ConvertedT>*>*>*() const noexcept {
        return chain;
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Func`2<PromisedT,System.Collections.Generic.IEnumerable`1<RSG.IPromise`1<ConvertedT>>> chain
      [[deprecated("Use field access instead!")]] ::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise_1<ConvertedT>*>*>*& dyn_chain() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass52_0_1::dyn_chain");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chain"))->offset;
        return *reinterpret_cast<::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise_1<ConvertedT>*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass52_0_1<ConvertedT>* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass52_0_1::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass52_0_1<ConvertedT>*, creationType>()));
      }
      // RSG.IPromise`1<ConvertedT> <ThenRace>b__0(PromisedT value)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::RSG::IPromise_1<ConvertedT>* $ThenRace$b__0(PromisedT value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass52_0_1::<ThenRace>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ThenRace>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
        return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<ConvertedT>*, false>(this, ___internal__method, value);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass52_0`1
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass52_0`1 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass53_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass53_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass53_0";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public System.Func`2<PromisedT,System.Collections.Generic.IEnumerable`1<RSG.IPromise>> chain
      // Size: 0x8
      // Offset: 0x0
      ::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise*>*>* chain;
      // Field size check
      static_assert(sizeof(::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise*>*>*) == 0x8);
      public:
      // Creating conversion operator: operator ::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise*>*>*
      constexpr operator ::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise*>*>*() const noexcept {
        return chain;
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Func`2<PromisedT,System.Collections.Generic.IEnumerable`1<RSG.IPromise>> chain
      [[deprecated("Use field access instead!")]] ::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise*>*>*& dyn_chain() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass53_0::dyn_chain");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chain"))->offset;
        return *reinterpret_cast<::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass53_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass53_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass53_0*, creationType>()));
      }
      // RSG.IPromise <ThenRace>b__0(PromisedT value)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::RSG::IPromise* $ThenRace$b__0(PromisedT value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass53_0::<ThenRace>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ThenRace>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
        return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise*, false>(this, ___internal__method, value);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass53_0
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass53_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass55_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass55_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass55_0";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public RSG.Promise`1<PromisedT> resultPromise
      // Size: 0x8
      // Offset: 0x0
      ::RSG::Promise_1<PromisedT>* resultPromise;
      // Field size check
      static_assert(sizeof(::RSG::Promise_1<PromisedT>*) == 0x8);
      // public System.Single[] progress
      // Size: 0x8
      // Offset: 0x0
      ::ArrayW<float> progress;
      // Field size check
      static_assert(sizeof(::ArrayW<float>) == 0x8);
      // public System.Action`1<PromisedT> <>9__2
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_1<PromisedT>* $$9__2;
      // Field size check
      static_assert(sizeof(::System::Action_1<PromisedT>*) == 0x8);
      // public System.Action`1<System.Exception> <>9__3
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_1<::System::Exception*>* $$9__3;
      // Field size check
      static_assert(sizeof(::System::Action_1<::System::Exception*>*) == 0x8);
      public:
      // Autogenerated instance field getter
      // Get instance field: public RSG.Promise`1<PromisedT> resultPromise
      [[deprecated("Use field access instead!")]] ::RSG::Promise_1<PromisedT>*& dyn_resultPromise() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass55_0::dyn_resultPromise");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultPromise"))->offset;
        return *reinterpret_cast<::RSG::Promise_1<PromisedT>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Single[] progress
      [[deprecated("Use field access instead!")]] ::ArrayW<float>& dyn_progress() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass55_0::dyn_progress");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progress"))->offset;
        return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`1<PromisedT> <>9__2
      [[deprecated("Use field access instead!")]] ::System::Action_1<PromisedT>*& dyn_$$9__2() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass55_0::dyn_$$9__2");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__2"))->offset;
        return *reinterpret_cast<::System::Action_1<PromisedT>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`1<System.Exception> <>9__3
      [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Exception*>*& dyn_$$9__3() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass55_0::dyn_$$9__3");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__3"))->offset;
        return *reinterpret_cast<::System::Action_1<::System::Exception*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass55_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass55_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass55_0*, creationType>()));
      }
      // System.Void <Race>b__0(RSG.IPromise`1<PromisedT> promise, System.Int32 index)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Race$b__0(::RSG::IPromise_1<PromisedT>* promise, int index) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass55_0::<Race>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Race>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(promise), ::il2cpp_utils::ExtractType(index)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, promise, index);
      }
      // System.Void <Race>b__2(PromisedT result)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Race$b__2(PromisedT result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass55_0::<Race>b__2");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Race>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
      }
      // System.Void <Race>b__3(System.Exception ex)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Race$b__3(::System::Exception* ex) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass55_0::<Race>b__3");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Race>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass55_0
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass55_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass55_1
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass55_1 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass55_1";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public System.Int32 index
      // Size: 0x4
      // Offset: 0x0
      int index;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public RSG.Promise`1/RSG.<>c__DisplayClass55_0<PromisedT> CS$<>8__locals1
      // Size: 0x8
      // Offset: 0x0
      typename ::RSG::Promise_1<PromisedT>::$$c__DisplayClass55_0* CS$$$8__locals1;
      // Field size check
      static_assert(sizeof(typename ::RSG::Promise_1<PromisedT>::$$c__DisplayClass55_0*) == 0x8);
      public:
      // Autogenerated instance field getter
      // Get instance field: public System.Int32 index
      [[deprecated("Use field access instead!")]] int& dyn_index() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass55_1::dyn_index");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public RSG.Promise`1/RSG.<>c__DisplayClass55_0<PromisedT> CS$<>8__locals1
      [[deprecated("Use field access instead!")]] typename ::RSG::Promise_1<PromisedT>::$$c__DisplayClass55_0*& dyn_CS$$$8__locals1() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass55_1::dyn_CS$$$8__locals1");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
        return *reinterpret_cast<typename ::RSG::Promise_1<PromisedT>::$$c__DisplayClass55_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass55_1* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass55_1::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass55_1*, creationType>()));
      }
      // System.Void <Race>b__1(System.Single v)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Race$b__1(float v) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass55_1::<Race>b__1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Race>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass55_1
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass55_1 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass58_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass58_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass58_0";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public RSG.Promise`1<PromisedT> promise
      // Size: 0x8
      // Offset: 0x0
      ::RSG::Promise_1<PromisedT>* promise;
      // Field size check
      static_assert(sizeof(::RSG::Promise_1<PromisedT>*) == 0x8);
      // public System.Action onComplete
      // Size: 0x8
      // Offset: 0x0
      ::System::Action* onComplete;
      // Field size check
      static_assert(sizeof(::System::Action*) == 0x8);
      public:
      // Autogenerated instance field getter
      // Get instance field: public RSG.Promise`1<PromisedT> promise
      [[deprecated("Use field access instead!")]] ::RSG::Promise_1<PromisedT>*& dyn_promise() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass58_0::dyn_promise");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "promise"))->offset;
        return *reinterpret_cast<::RSG::Promise_1<PromisedT>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action onComplete
      [[deprecated("Use field access instead!")]] ::System::Action*& dyn_onComplete() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass58_0::dyn_onComplete");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onComplete"))->offset;
        return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass58_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass58_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass58_0*, creationType>()));
      }
      // System.Void <Finally>b__0(PromisedT x)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Finally$b__0(PromisedT x) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass58_0::<Finally>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Finally>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x);
      }
      // System.Void <Finally>b__1(System.Exception e)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $Finally$b__1(::System::Exception* e) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass58_0::<Finally>b__1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Finally>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
      }
      // PromisedT <Finally>b__2(PromisedT v)
      // Offset: 0xFFFFFFFFFFFFFFFF
      PromisedT $Finally$b__2(PromisedT v) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass58_0::<Finally>b__2");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Finally>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
        return ::il2cpp_utils::RunMethodRethrow<PromisedT, false>(this, ___internal__method, v);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass58_0
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass58_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass59_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass59_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass59_0";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public RSG.Promise promise
      // Size: 0x8
      // Offset: 0x0
      ::RSG::Promise* promise;
      // Field size check
      static_assert(sizeof(::RSG::Promise*) == 0x8);
      public:
      // Creating conversion operator: operator ::RSG::Promise*
      constexpr operator ::RSG::Promise*() const noexcept {
        return promise;
      }
      // Autogenerated instance field getter
      // Get instance field: public RSG.Promise promise
      [[deprecated("Use field access instead!")]] ::RSG::Promise*& dyn_promise() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass59_0::dyn_promise");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "promise"))->offset;
        return *reinterpret_cast<::RSG::Promise**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass59_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass59_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass59_0*, creationType>()));
      }
      // System.Void <ContinueWith>b__0(PromisedT x)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $ContinueWith$b__0(PromisedT x) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass59_0::<ContinueWith>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ContinueWith>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x);
      }
      // System.Void <ContinueWith>b__1(System.Exception e)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $ContinueWith$b__1(::System::Exception* e) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass59_0::<ContinueWith>b__1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ContinueWith>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass59_0
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass59_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/RSG.<>c__DisplayClass60_0`1
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    template<typename ConvertedT>
    class $$c__DisplayClass60_0_1 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass60_0`1";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public RSG.Promise promise
      // Size: 0x8
      // Offset: 0x0
      ::RSG::Promise* promise;
      // Field size check
      static_assert(sizeof(::RSG::Promise*) == 0x8);
      public:
      // Creating conversion operator: operator ::RSG::Promise*
      constexpr operator ::RSG::Promise*() const noexcept {
        return promise;
      }
      // Autogenerated instance field getter
      // Get instance field: public RSG.Promise promise
      [[deprecated("Use field access instead!")]] ::RSG::Promise*& dyn_promise() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass60_0_1::dyn_promise");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "promise"))->offset;
        return *reinterpret_cast<::RSG::Promise**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass60_0_1<ConvertedT>* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass60_0_1::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass60_0_1<ConvertedT>*, creationType>()));
      }
      // System.Void <ContinueWith>b__0(PromisedT x)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $ContinueWith$b__0(PromisedT x) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass60_0_1::<ContinueWith>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ContinueWith>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x);
      }
      // System.Void <ContinueWith>b__1(System.Exception e)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $ContinueWith$b__1(::System::Exception* e) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass60_0_1::<ContinueWith>b__1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ContinueWith>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
      }
    }; // RSG.Promise`1/RSG.<>c__DisplayClass60_0`1
    // Could not write size check! Type: RSG.Promise`1/RSG.<>c__DisplayClass60_0`1 is generic, or has no fields that are valid for size checks!
    public:
    // private System.Exception rejectionException
    // Size: 0x8
    // Offset: 0x0
    ::System::Exception* rejectionException;
    // Field size check
    static_assert(sizeof(::System::Exception*) == 0x8);
    // private PromisedT resolveValue
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    PromisedT resolveValue;
    // private System.Collections.Generic.List`1<RSG.RejectHandler> rejectHandlers
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<::RSG::RejectHandler>* rejectHandlers;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::RSG::RejectHandler>*) == 0x8);
    // private System.Collections.Generic.List`1<RSG.ProgressHandler> progressHandlers
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<::RSG::ProgressHandler>* progressHandlers;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::RSG::ProgressHandler>*) == 0x8);
    // private System.Collections.Generic.List`1<System.Action`1<PromisedT>> resolveCallbacks
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<::System::Action_1<PromisedT>*>* resolveCallbacks;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::System::Action_1<PromisedT>*>*) == 0x8);
    // private System.Collections.Generic.List`1<RSG.IRejectable> resolveRejectables
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<::RSG::IRejectable*>* resolveRejectables;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::RSG::IRejectable*>*) == 0x8);
    // private readonly System.Int32 id
    // Size: 0x4
    // Offset: 0x0
    int id;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.String <Name>k__BackingField
    // Size: 0x8
    // Offset: 0x0
    ::StringW Name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private RSG.PromiseState <CurState>k__BackingField
    // Size: 0x4
    // Offset: 0x0
    ::RSG::PromiseState CurState;
    // Field size check
    static_assert(sizeof(::RSG::PromiseState) == 0x4);
    public:
    // Creating interface conversion operator: operator ::RSG::IPromise_1<PromisedT>
    operator ::RSG::IPromise_1<PromisedT>() noexcept {
      return *reinterpret_cast<::RSG::IPromise_1<PromisedT>*>(this);
    }
    // Creating interface conversion operator: operator ::RSG::IPendingPromise_1<PromisedT>
    operator ::RSG::IPendingPromise_1<PromisedT>() noexcept {
      return *reinterpret_cast<::RSG::IPendingPromise_1<PromisedT>*>(this);
    }
    // Creating interface conversion operator: operator ::RSG::IPromiseInfo
    operator ::RSG::IPromiseInfo() noexcept {
      return *reinterpret_cast<::RSG::IPromiseInfo*>(this);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Exception rejectionException
    [[deprecated("Use field access instead!")]] ::System::Exception*& dyn_rejectionException() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::dyn_rejectionException");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rejectionException"))->offset;
      return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private PromisedT resolveValue
    [[deprecated("Use field access instead!")]] PromisedT& dyn_resolveValue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::dyn_resolveValue");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolveValue"))->offset;
      return *reinterpret_cast<PromisedT*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.List`1<RSG.RejectHandler> rejectHandlers
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::RSG::RejectHandler>*& dyn_rejectHandlers() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::dyn_rejectHandlers");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rejectHandlers"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<::RSG::RejectHandler>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.List`1<RSG.ProgressHandler> progressHandlers
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::RSG::ProgressHandler>*& dyn_progressHandlers() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::dyn_progressHandlers");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressHandlers"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<::RSG::ProgressHandler>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.List`1<System.Action`1<PromisedT>> resolveCallbacks
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Action_1<PromisedT>*>*& dyn_resolveCallbacks() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::dyn_resolveCallbacks");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolveCallbacks"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Action_1<PromisedT>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.List`1<RSG.IRejectable> resolveRejectables
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::RSG::IRejectable*>*& dyn_resolveRejectables() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::dyn_resolveRejectables");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolveRejectables"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<::RSG::IRejectable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.Int32 id
    [[deprecated("Use field access instead!")]] int& dyn_id() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::dyn_id");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.String <Name>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Name$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::dyn_$Name$k__BackingField");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
      return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private RSG.PromiseState <CurState>k__BackingField
    [[deprecated("Use field access instead!")]] ::RSG::PromiseState& dyn_$CurState$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::dyn_$CurState$k__BackingField");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurState>k__BackingField"))->offset;
      return *reinterpret_cast<::RSG::PromiseState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Int32 get_Id()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_Id() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::get_Id");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // public System.String get_Name()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_Name() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::get_Name");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
    }
    // private System.Void set_Name(System.String value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Name(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::set_Name");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public RSG.PromiseState get_CurState()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::PromiseState get_CurState() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::get_CurState");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::PromiseState, false>(this, ___internal__method);
    }
    // private System.Void set_CurState(RSG.PromiseState value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_CurState(::RSG::PromiseState value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::set_CurState");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Promise_1<PromisedT>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Promise_1<PromisedT>*, creationType>()));
    }
    // public System.Void .ctor(System.Action`2<System.Action`1<PromisedT>,System.Action`1<System.Exception>> resolver)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Promise_1<PromisedT>* New_ctor(::System::Action_2<::System::Action_1<PromisedT>*, ::System::Action_1<::System::Exception*>*>* resolver) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Promise_1<PromisedT>*, creationType>(resolver)));
    }
    // private System.Void AddRejectHandler(System.Action`1<System.Exception> onRejected, RSG.IRejectable rejectable)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void AddRejectHandler(::System::Action_1<::System::Exception*>* onRejected, ::RSG::IRejectable* rejectable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::AddRejectHandler");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRejectHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onRejected), ::il2cpp_utils::ExtractType(rejectable)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onRejected, rejectable);
    }
    // private System.Void AddResolveHandler(System.Action`1<PromisedT> onResolved, RSG.IRejectable rejectable)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void AddResolveHandler(::System::Action_1<PromisedT>* onResolved, ::RSG::IRejectable* rejectable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::AddResolveHandler");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddResolveHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onResolved), ::il2cpp_utils::ExtractType(rejectable)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onResolved, rejectable);
    }
    // private System.Void AddProgressHandler(System.Action`1<System.Single> onProgress, RSG.IRejectable rejectable)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void AddProgressHandler(::System::Action_1<float>* onProgress, ::RSG::IRejectable* rejectable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::AddProgressHandler");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddProgressHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onProgress), ::il2cpp_utils::ExtractType(rejectable)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onProgress, rejectable);
    }
    // private System.Void InvokeHandler(System.Action`1<T> callback, RSG.IRejectable rejectable, T value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    void InvokeHandler(::System::Action_1<T>* callback, ::RSG::IRejectable* rejectable, T value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::InvokeHandler");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeHandler", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(rejectable), ::il2cpp_utils::ExtractType(value)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, callback, rejectable, value);
    }
    // private System.Void ClearHandlers()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ClearHandlers() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::ClearHandlers");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void InvokeRejectHandlers(System.Exception ex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InvokeRejectHandlers(::System::Exception* ex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::InvokeRejectHandlers");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeRejectHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
    }
    // private System.Void InvokeResolveHandlers(PromisedT value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InvokeResolveHandlers(PromisedT value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::InvokeResolveHandlers");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeResolveHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Void InvokeProgressHandlers(System.Single progress)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InvokeProgressHandlers(float progress) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::InvokeProgressHandlers");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeProgressHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
    }
    // public System.Void Reject(System.Exception ex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Reject(::System::Exception* ex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Reject");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
    }
    // public System.Void Resolve(PromisedT value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Resolve(PromisedT value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Resolve");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void ReportProgress(System.Single progress)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ReportProgress(float progress) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::ReportProgress");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
    }
    // public System.Void Done(System.Action`1<PromisedT> onResolved, System.Action`1<System.Exception> onRejected)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Done(::System::Action_1<PromisedT>* onResolved, ::System::Action_1<::System::Exception*>* onRejected) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Done");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onResolved, onRejected);
    }
    // public System.Void Done(System.Action`1<PromisedT> onResolved)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Done(::System::Action_1<PromisedT>* onResolved) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Done");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onResolved);
    }
    // public System.Void Done()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Done() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Done");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public RSG.IPromise`1<PromisedT> WithName(System.String name)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::IPromise_1<PromisedT>* WithName(::StringW name) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::WithName");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<PromisedT>*, false>(this, ___internal__method, name);
    }
    // public RSG.IPromise Catch(System.Action`1<System.Exception> onRejected)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::IPromise* Catch(::System::Action_1<::System::Exception*>* onRejected) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Catch");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise*, false>(this, ___internal__method, onRejected);
    }
    // public RSG.IPromise`1<PromisedT> Catch(System.Func`2<System.Exception,PromisedT> onRejected)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::IPromise_1<PromisedT>* Catch(::System::Func_2<::System::Exception*, PromisedT>* onRejected) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Catch");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<PromisedT>*, false>(this, ___internal__method, onRejected);
    }
    // public RSG.IPromise`1<ConvertedT> Then(System.Func`2<PromisedT,RSG.IPromise`1<ConvertedT>> onResolved)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class ConvertedT>
    ::RSG::IPromise_1<ConvertedT>* Then(::System::Func_2<PromisedT, ::RSG::IPromise_1<ConvertedT>*>* onResolved) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Then");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ConvertedT>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<ConvertedT>*, false>(this, ___generic__method, onResolved);
    }
    // public RSG.IPromise Then(System.Func`2<PromisedT,RSG.IPromise> onResolved)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::IPromise* Then(::System::Func_2<PromisedT, ::RSG::IPromise*>* onResolved) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Then");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise*, false>(this, ___internal__method, onResolved);
    }
    // public RSG.IPromise Then(System.Action`1<PromisedT> onResolved)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::IPromise* Then(::System::Action_1<PromisedT>* onResolved) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Then");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise*, false>(this, ___internal__method, onResolved);
    }
    // public RSG.IPromise`1<ConvertedT> Then(System.Func`2<PromisedT,RSG.IPromise`1<ConvertedT>> onResolved, System.Func`2<System.Exception,RSG.IPromise`1<ConvertedT>> onRejected)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class ConvertedT>
    ::RSG::IPromise_1<ConvertedT>* Then(::System::Func_2<PromisedT, ::RSG::IPromise_1<ConvertedT>*>* onResolved, ::System::Func_2<::System::Exception*, ::RSG::IPromise_1<ConvertedT>*>* onRejected) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Then");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ConvertedT>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<ConvertedT>*, false>(this, ___generic__method, onResolved, onRejected);
    }
    // public RSG.IPromise Then(System.Func`2<PromisedT,RSG.IPromise> onResolved, System.Action`1<System.Exception> onRejected)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::IPromise* Then(::System::Func_2<PromisedT, ::RSG::IPromise*>* onResolved, ::System::Action_1<::System::Exception*>* onRejected) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Then");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise*, false>(this, ___internal__method, onResolved, onRejected);
    }
    // public RSG.IPromise Then(System.Action`1<PromisedT> onResolved, System.Action`1<System.Exception> onRejected)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::IPromise* Then(::System::Action_1<PromisedT>* onResolved, ::System::Action_1<::System::Exception*>* onRejected) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Then");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise*, false>(this, ___internal__method, onResolved, onRejected);
    }
    // public RSG.IPromise`1<ConvertedT> Then(System.Func`2<PromisedT,RSG.IPromise`1<ConvertedT>> onResolved, System.Func`2<System.Exception,RSG.IPromise`1<ConvertedT>> onRejected, System.Action`1<System.Single> onProgress)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class ConvertedT>
    ::RSG::IPromise_1<ConvertedT>* Then(::System::Func_2<PromisedT, ::RSG::IPromise_1<ConvertedT>*>* onResolved, ::System::Func_2<::System::Exception*, ::RSG::IPromise_1<ConvertedT>*>* onRejected, ::System::Action_1<float>* onProgress) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Then");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ConvertedT>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<ConvertedT>*, false>(this, ___generic__method, onResolved, onRejected, onProgress);
    }
    // public RSG.IPromise Then(System.Func`2<PromisedT,RSG.IPromise> onResolved, System.Action`1<System.Exception> onRejected, System.Action`1<System.Single> onProgress)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::IPromise* Then(::System::Func_2<PromisedT, ::RSG::IPromise*>* onResolved, ::System::Action_1<::System::Exception*>* onRejected, ::System::Action_1<float>* onProgress) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Then");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise*, false>(this, ___internal__method, onResolved, onRejected, onProgress);
    }
    // public RSG.IPromise Then(System.Action`1<PromisedT> onResolved, System.Action`1<System.Exception> onRejected, System.Action`1<System.Single> onProgress)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::IPromise* Then(::System::Action_1<PromisedT>* onResolved, ::System::Action_1<::System::Exception*>* onRejected, ::System::Action_1<float>* onProgress) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Then");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise*, false>(this, ___internal__method, onResolved, onRejected, onProgress);
    }
    // public RSG.IPromise`1<ConvertedT> Then(System.Func`2<PromisedT,ConvertedT> transform)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class ConvertedT>
    ::RSG::IPromise_1<ConvertedT>* Then(::System::Func_2<PromisedT, ConvertedT>* transform) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Then");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ConvertedT>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<ConvertedT>*, false>(this, ___generic__method, transform);
    }
    // private System.Void ActionHandlers(RSG.IRejectable resultPromise, System.Action`1<PromisedT> resolveHandler, System.Action`1<System.Exception> rejectHandler)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ActionHandlers(::RSG::IRejectable* resultPromise, ::System::Action_1<PromisedT>* resolveHandler, ::System::Action_1<::System::Exception*>* rejectHandler) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::ActionHandlers");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActionHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultPromise), ::il2cpp_utils::ExtractType(resolveHandler), ::il2cpp_utils::ExtractType(rejectHandler)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resultPromise, resolveHandler, rejectHandler);
    }
    // private System.Void ProgressHandlers(RSG.IRejectable resultPromise, System.Action`1<System.Single> progressHandler)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ProgressHandlers(::RSG::IRejectable* resultPromise, ::System::Action_1<float>* progressHandler) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::ProgressHandlers");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProgressHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultPromise), ::il2cpp_utils::ExtractType(progressHandler)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resultPromise, progressHandler);
    }
    // public RSG.IPromise`1<System.Collections.Generic.IEnumerable`1<ConvertedT>> ThenAll(System.Func`2<PromisedT,System.Collections.Generic.IEnumerable`1<RSG.IPromise`1<ConvertedT>>> chain)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class ConvertedT>
    ::RSG::IPromise_1<::System::Collections::Generic::IEnumerable_1<ConvertedT>*>* ThenAll(::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise_1<ConvertedT>*>*>* chain) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::ThenAll");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ConvertedT>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<::System::Collections::Generic::IEnumerable_1<ConvertedT>*>*, false>(this, ___generic__method, chain);
    }
    // public RSG.IPromise ThenAll(System.Func`2<PromisedT,System.Collections.Generic.IEnumerable`1<RSG.IPromise>> chain)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::IPromise* ThenAll(::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise*>*>* chain) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::ThenAll");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise*, false>(this, ___internal__method, chain);
    }
    // static public RSG.IPromise`1<System.Collections.Generic.IEnumerable`1<PromisedT>> All(params RSG.IPromise`1<PromisedT>[] promises)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::RSG::IPromise_1<::System::Collections::Generic::IEnumerable_1<PromisedT>*>* All(::ArrayW<::RSG::IPromise_1<PromisedT>*> promises) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::All");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Promise_1<PromisedT>*>::get(), "All", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(promises)})));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<::System::Collections::Generic::IEnumerable_1<PromisedT>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, promises);
    }
    // static public RSG.IPromise`1<System.Collections.Generic.IEnumerable`1<PromisedT>> All(System.Collections.Generic.IEnumerable`1<RSG.IPromise`1<PromisedT>> promises)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::RSG::IPromise_1<::System::Collections::Generic::IEnumerable_1<PromisedT>*>* All(::System::Collections::Generic::IEnumerable_1<::RSG::IPromise_1<PromisedT>*>* promises) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::All");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Promise_1<PromisedT>*>::get(), "All", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(promises)})));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<::System::Collections::Generic::IEnumerable_1<PromisedT>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, promises);
    }
    // public RSG.IPromise`1<ConvertedT> ThenRace(System.Func`2<PromisedT,System.Collections.Generic.IEnumerable`1<RSG.IPromise`1<ConvertedT>>> chain)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class ConvertedT>
    ::RSG::IPromise_1<ConvertedT>* ThenRace(::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise_1<ConvertedT>*>*>* chain) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::ThenRace");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ConvertedT>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<ConvertedT>*, false>(this, ___generic__method, chain);
    }
    // public RSG.IPromise ThenRace(System.Func`2<PromisedT,System.Collections.Generic.IEnumerable`1<RSG.IPromise>> chain)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::IPromise* ThenRace(::System::Func_2<PromisedT, ::System::Collections::Generic::IEnumerable_1<::RSG::IPromise*>*>* chain) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::ThenRace");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise*, false>(this, ___internal__method, chain);
    }
    // static public RSG.IPromise`1<PromisedT> Race(params RSG.IPromise`1<PromisedT>[] promises)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::RSG::IPromise_1<PromisedT>* Race(::ArrayW<::RSG::IPromise_1<PromisedT>*> promises) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Race");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Promise_1<PromisedT>*>::get(), "Race", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(promises)})));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<PromisedT>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, promises);
    }
    // static public RSG.IPromise`1<PromisedT> Race(System.Collections.Generic.IEnumerable`1<RSG.IPromise`1<PromisedT>> promises)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::RSG::IPromise_1<PromisedT>* Race(::System::Collections::Generic::IEnumerable_1<::RSG::IPromise_1<PromisedT>*>* promises) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Race");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Promise_1<PromisedT>*>::get(), "Race", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(promises)})));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<PromisedT>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, promises);
    }
    // static public RSG.IPromise`1<PromisedT> Resolved(PromisedT promisedValue)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::RSG::IPromise_1<PromisedT>* Resolved(PromisedT promisedValue) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Resolved");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Promise_1<PromisedT>*>::get(), "Resolved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(promisedValue)})));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<PromisedT>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, promisedValue);
    }
    // static public RSG.IPromise`1<PromisedT> Rejected(System.Exception ex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::RSG::IPromise_1<PromisedT>* Rejected(::System::Exception* ex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Rejected");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Promise_1<PromisedT>*>::get(), "Rejected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<PromisedT>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ex);
    }
    // public RSG.IPromise`1<PromisedT> Finally(System.Action onComplete)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::IPromise_1<PromisedT>* Finally(::System::Action* onComplete) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Finally");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<PromisedT>*, false>(this, ___internal__method, onComplete);
    }
    // public RSG.IPromise ContinueWith(System.Func`1<RSG.IPromise> onComplete)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::IPromise* ContinueWith(::System::Func_1<::RSG::IPromise*>* onComplete) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::ContinueWith");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise*, false>(this, ___internal__method, onComplete);
    }
    // public RSG.IPromise`1<ConvertedT> ContinueWith(System.Func`1<RSG.IPromise`1<ConvertedT>> onComplete)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class ConvertedT>
    ::RSG::IPromise_1<ConvertedT>* ContinueWith(::System::Func_1<::RSG::IPromise_1<ConvertedT>*>* onComplete) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::ContinueWith");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ConvertedT>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<ConvertedT>*, false>(this, ___generic__method, onComplete);
    }
    // public RSG.IPromise`1<PromisedT> Progress(System.Action`1<System.Single> onProgress)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::IPromise_1<PromisedT>* Progress(::System::Action_1<float>* onProgress) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Progress");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<PromisedT>*, false>(this, ___internal__method, onProgress);
    }
    // private System.Void <Done>b__30_0(System.Exception ex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void $Done$b__30_0(::System::Exception* ex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::<Done>b__30_0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Done>b__30_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
    }
    // private System.Void <Done>b__31_0(System.Exception ex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void $Done$b__31_0(::System::Exception* ex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::<Done>b__31_0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Done>b__31_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
    }
    // private System.Void <Done>b__32_0(System.Exception ex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void $Done$b__32_0(::System::Exception* ex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::<Done>b__32_0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Done>b__32_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
    }
  }; // RSG.Promise`1
  // Could not write size check! Type: RSG.Promise`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
