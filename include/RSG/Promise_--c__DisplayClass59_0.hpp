// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: RSG.Promise
#include "RSG/Promise.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Exception
  class Exception;
}
// Forward declaring namespace: RSG
namespace RSG {
  // Forward declaring type: IPromise
  class IPromise;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::RSG::Promise::$$c__DisplayClass59_0);
DEFINE_IL2CPP_ARG_TYPE(::RSG::Promise::$$c__DisplayClass59_0*, "RSG", "Promise/<>c__DisplayClass59_0");
// Type namespace: RSG
namespace RSG {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: RSG.Promise/RSG.<>c__DisplayClass59_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class Promise::$$c__DisplayClass59_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Single[] progress
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<float> progress;
    // Field size check
    static_assert(sizeof(::ArrayW<float>) == 0x8);
    // public RSG.Promise resultPromise
    // Size: 0x8
    // Offset: 0x18
    ::RSG::Promise* resultPromise;
    // Field size check
    static_assert(sizeof(::RSG::Promise*) == 0x8);
    // public System.Int32 remainingCount
    // Size: 0x4
    // Offset: 0x20
    int remainingCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: remainingCount and: $$9__3
    char __padding2[0x4] = {};
    // public System.Action`1<System.Exception> <>9__3
    // Size: 0x8
    // Offset: 0x28
    ::System::Action_1<::System::Exception*>* $$9__3;
    // Field size check
    static_assert(sizeof(::System::Action_1<::System::Exception*>*) == 0x8);
    public:
    // Get instance field reference: public System.Single[] progress
    [[deprecated]] ::ArrayW<float>& dyn_progress();
    // Get instance field reference: public RSG.Promise resultPromise
    [[deprecated]] ::RSG::Promise*& dyn_resultPromise();
    // Get instance field reference: public System.Int32 remainingCount
    [[deprecated]] int& dyn_remainingCount();
    // Get instance field reference: public System.Action`1<System.Exception> <>9__3
    [[deprecated]] ::System::Action_1<::System::Exception*>*& dyn_$$9__3();
    // System.Void <All>b__0(RSG.IPromise promise, System.Int32 index)
    // Offset: 0x8CE960
    void $All$b__0(::RSG::IPromise* promise, int index);
    // System.Void <All>b__3(System.Exception ex)
    // Offset: 0x8CECB4
    void $All$b__3(::System::Exception* ex);
    // public System.Void .ctor()
    // Offset: 0x8CE958
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Promise::$$c__DisplayClass59_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::$$c__DisplayClass59_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Promise::$$c__DisplayClass59_0*, creationType>()));
    }
  }; // RSG.Promise/RSG.<>c__DisplayClass59_0
  #pragma pack(pop)
  static check_size<sizeof(Promise::$$c__DisplayClass59_0), 40 + sizeof(::System::Action_1<::System::Exception*>*)> __RSG_Promise_$$c__DisplayClass59_0SizeCheck;
  static_assert(sizeof(Promise::$$c__DisplayClass59_0) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: RSG::Promise::$$c__DisplayClass59_0::$All$b__0
// Il2CppName: <All>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSG::Promise::$$c__DisplayClass59_0::*)(::RSG::IPromise*, int)>(&RSG::Promise::$$c__DisplayClass59_0::$All$b__0)> {
  static const MethodInfo* get() {
    static auto* promise = &::il2cpp_utils::GetClassFromName("RSG", "IPromise")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RSG::Promise::$$c__DisplayClass59_0*), "<All>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{promise, index});
  }
};
// Writing MetadataGetter for method: RSG::Promise::$$c__DisplayClass59_0::$All$b__3
// Il2CppName: <All>b__3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSG::Promise::$$c__DisplayClass59_0::*)(::System::Exception*)>(&RSG::Promise::$$c__DisplayClass59_0::$All$b__3)> {
  static const MethodInfo* get() {
    static auto* ex = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RSG::Promise::$$c__DisplayClass59_0*), "<All>b__3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ex});
  }
};
// Writing MetadataGetter for method: RSG::Promise::$$c__DisplayClass59_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
