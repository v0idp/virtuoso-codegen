// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: RSG.Promise
#include "RSG/Promise.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Exception
  class Exception;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::RSG::Promise::$$c__DisplayClass69_0);
DEFINE_IL2CPP_ARG_TYPE(::RSG::Promise::$$c__DisplayClass69_0*, "RSG", "Promise/<>c__DisplayClass69_0");
// Type namespace: RSG
namespace RSG {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: RSG.Promise/RSG.<>c__DisplayClass69_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class Promise::$$c__DisplayClass69_0 : public ::Il2CppObject {
    public:
    public:
    // public RSG.Promise promise
    // Size: 0x8
    // Offset: 0x10
    ::RSG::Promise* promise;
    // Field size check
    static_assert(sizeof(::RSG::Promise*) == 0x8);
    // public System.Action onComplete
    // Size: 0x8
    // Offset: 0x18
    ::System::Action* onComplete;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    public:
    // Get instance field reference: public RSG.Promise promise
    [[deprecated("Use field access instead!")]] ::RSG::Promise*& dyn_promise();
    // Get instance field reference: public System.Action onComplete
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_onComplete();
    // public System.Void .ctor()
    // Offset: 0x8CF670
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Promise::$$c__DisplayClass69_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::$$c__DisplayClass69_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Promise::$$c__DisplayClass69_0*, creationType>()));
    }
    // System.Void <Finally>b__0()
    // Offset: 0x8CF678
    void $Finally$b__0();
    // System.Void <Finally>b__1(System.Exception e)
    // Offset: 0x8CF694
    void $Finally$b__1(::System::Exception* e);
  }; // RSG.Promise/RSG.<>c__DisplayClass69_0
  #pragma pack(pop)
  static check_size<sizeof(Promise::$$c__DisplayClass69_0), 24 + sizeof(::System::Action*)> __RSG_Promise_$$c__DisplayClass69_0SizeCheck;
  static_assert(sizeof(Promise::$$c__DisplayClass69_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: RSG::Promise::$$c__DisplayClass69_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: RSG::Promise::$$c__DisplayClass69_0::$Finally$b__0
// Il2CppName: <Finally>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSG::Promise::$$c__DisplayClass69_0::*)()>(&RSG::Promise::$$c__DisplayClass69_0::$Finally$b__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSG::Promise::$$c__DisplayClass69_0*), "<Finally>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RSG::Promise::$$c__DisplayClass69_0::$Finally$b__1
// Il2CppName: <Finally>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSG::Promise::$$c__DisplayClass69_0::*)(::System::Exception*)>(&RSG::Promise::$$c__DisplayClass69_0::$Finally$b__1)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RSG::Promise::$$c__DisplayClass69_0*), "<Finally>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
