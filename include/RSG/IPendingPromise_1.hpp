// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: RSG.IRejectable
#include "RSG/IRejectable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: RSG
namespace RSG {
  // Forward declaring type: IPendingPromise`1<PromisedT>
  template<typename PromisedT>
  class IPendingPromise_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::RSG::IPendingPromise_1, "RSG", "IPendingPromise`1");
// Type namespace: RSG
namespace RSG {
  // WARNING Size may be invalid!
  // Autogenerated type: RSG.IPendingPromise`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename PromisedT>
  class IPendingPromise_1/*, public ::RSG::IRejectable*/ {
    public:
    // Creating interface conversion operator: operator ::RSG::IRejectable
    operator ::RSG::IRejectable() noexcept {
      return *reinterpret_cast<::RSG::IRejectable*>(this);
    }
    // public System.Int32 get_Id()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_Id() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::IPendingPromise_1::get_Id");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::IPendingPromise_1<PromisedT>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // public System.Void Resolve(PromisedT value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Resolve(PromisedT value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::IPendingPromise_1::Resolve");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::IPendingPromise_1<PromisedT>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void ReportProgress(System.Single progress)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ReportProgress(float progress) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::IPendingPromise_1::ReportProgress");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::IPendingPromise_1<PromisedT>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
    }
  }; // RSG.IPendingPromise`1
  // Could not write size check! Type: RSG.IPendingPromise`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
