// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VRVisuals
namespace VRVisuals {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: MeshFilter
  class MeshFilter;
  // Forward declaring type: Mesh
  class Mesh;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: VRVisuals
namespace VRVisuals {
  // Forward declaring type: SetSpectrogramShaderValues
  class SetSpectrogramShaderValues;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VRVisuals::SetSpectrogramShaderValues);
DEFINE_IL2CPP_ARG_TYPE(::VRVisuals::SetSpectrogramShaderValues*, "VRVisuals", "SetSpectrogramShaderValues");
// Type namespace: VRVisuals
namespace VRVisuals {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: VRVisuals.SetSpectrogramShaderValues
  // [TokenAttribute] Offset: FFFFFFFF
  class SetSpectrogramShaderValues : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::VRVisuals::SetSpectrogramShaderValues::TimestampedValues
    class TimestampedValues;
    public:
    // private System.Single _life
    // Size: 0x4
    // Offset: 0x18
    float life;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _minRange
    // Size: 0x4
    // Offset: 0x1C
    float minRange;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _maxRange
    // Size: 0x4
    // Offset: 0x20
    float maxRange;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _scale
    // Size: 0x4
    // Offset: 0x24
    float scale;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.MeshFilter[] _meshFilters
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::UnityEngine::MeshFilter*> meshFilters;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::MeshFilter*>) == 0x8);
    // private UnityEngine.Mesh _mesh
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Mesh* mesh;
    // Field size check
    static_assert(sizeof(::UnityEngine::Mesh*) == 0x8);
    // private System.Collections.Generic.List`1<VRVisuals.SetSpectrogramShaderValues/VRVisuals.TimestampedValues> _timestampedValues
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::List_1<::VRVisuals::SetSpectrogramShaderValues::TimestampedValues*>* timestampedValues;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::VRVisuals::SetSpectrogramShaderValues::TimestampedValues*>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Single _life
    [[deprecated("Use field access instead!")]] float& dyn__life();
    // Get instance field reference: private System.Single _minRange
    [[deprecated("Use field access instead!")]] float& dyn__minRange();
    // Get instance field reference: private System.Single _maxRange
    [[deprecated("Use field access instead!")]] float& dyn__maxRange();
    // Get instance field reference: private System.Single _scale
    [[deprecated("Use field access instead!")]] float& dyn__scale();
    // Get instance field reference: private UnityEngine.MeshFilter[] _meshFilters
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::MeshFilter*>& dyn__meshFilters();
    // Get instance field reference: private UnityEngine.Mesh _mesh
    [[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& dyn__mesh();
    // Get instance field reference: private System.Collections.Generic.List`1<VRVisuals.SetSpectrogramShaderValues/VRVisuals.TimestampedValues> _timestampedValues
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VRVisuals::SetSpectrogramShaderValues::TimestampedValues*>*& dyn__timestampedValues();
    // public System.Void .ctor()
    // Offset: 0x19259F4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SetSpectrogramShaderValues* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VRVisuals::SetSpectrogramShaderValues::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SetSpectrogramShaderValues*, creationType>()));
    }
    // private System.Void Awake()
    // Offset: 0x1924E2C
    void Awake();
    // private System.Void Update()
    // Offset: 0x1924EF8
    void Update();
    // private System.Void GetValuesFromAudioPeer()
    // Offset: 0x1924F1C
    void GetValuesFromAudioPeer();
    // private System.Void Generate()
    // Offset: 0x1925250
    void Generate();
    // private System.Collections.Generic.List`1<System.Single> Get64Values()
    // Offset: 0x1925644
    ::System::Collections::Generic::List_1<float>* Get64Values();
    // private System.Void OnDrawGizmosSelected()
    // Offset: 0x1925770
    void OnDrawGizmosSelected();
  }; // VRVisuals.SetSpectrogramShaderValues
  #pragma pack(pop)
  static check_size<sizeof(SetSpectrogramShaderValues), 56 + sizeof(::System::Collections::Generic::List_1<::VRVisuals::SetSpectrogramShaderValues::TimestampedValues*>*)> __VRVisuals_SetSpectrogramShaderValuesSizeCheck;
  static_assert(sizeof(SetSpectrogramShaderValues) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VRVisuals::SetSpectrogramShaderValues::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VRVisuals::SetSpectrogramShaderValues::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VRVisuals::SetSpectrogramShaderValues::*)()>(&VRVisuals::SetSpectrogramShaderValues::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VRVisuals::SetSpectrogramShaderValues*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VRVisuals::SetSpectrogramShaderValues::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VRVisuals::SetSpectrogramShaderValues::*)()>(&VRVisuals::SetSpectrogramShaderValues::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VRVisuals::SetSpectrogramShaderValues*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VRVisuals::SetSpectrogramShaderValues::GetValuesFromAudioPeer
// Il2CppName: GetValuesFromAudioPeer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VRVisuals::SetSpectrogramShaderValues::*)()>(&VRVisuals::SetSpectrogramShaderValues::GetValuesFromAudioPeer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VRVisuals::SetSpectrogramShaderValues*), "GetValuesFromAudioPeer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VRVisuals::SetSpectrogramShaderValues::Generate
// Il2CppName: Generate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VRVisuals::SetSpectrogramShaderValues::*)()>(&VRVisuals::SetSpectrogramShaderValues::Generate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VRVisuals::SetSpectrogramShaderValues*), "Generate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VRVisuals::SetSpectrogramShaderValues::Get64Values
// Il2CppName: Get64Values
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<float>* (VRVisuals::SetSpectrogramShaderValues::*)()>(&VRVisuals::SetSpectrogramShaderValues::Get64Values)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VRVisuals::SetSpectrogramShaderValues*), "Get64Values", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VRVisuals::SetSpectrogramShaderValues::OnDrawGizmosSelected
// Il2CppName: OnDrawGizmosSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VRVisuals::SetSpectrogramShaderValues::*)()>(&VRVisuals::SetSpectrogramShaderValues::OnDrawGizmosSelected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VRVisuals::SetSpectrogramShaderValues*), "OnDrawGizmosSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
