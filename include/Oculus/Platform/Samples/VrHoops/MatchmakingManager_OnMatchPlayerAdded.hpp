// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.MatchmakingManager
#include "Oculus/Platform/Samples/VrHoops/MatchmakingManager.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Platform::Samples::VrHoops
namespace Oculus::Platform::Samples::VrHoops {
  // Forward declaring type: Player
  class Player;
}
// Forward declaring namespace: Oculus::Platform::Models
namespace Oculus::Platform::Models {
  // Forward declaring type: User
  class User;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded*, "Oculus.Platform.Samples.VrHoops", "MatchmakingManager/OnMatchPlayerAdded");
// Type namespace: Oculus.Platform.Samples.VrHoops
namespace Oculus::Platform::Samples::VrHoops {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnMatchPlayerAdded
  // [TokenAttribute] Offset: FFFFFFFF
  class MatchmakingManager::OnMatchPlayerAdded : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x17228FC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MatchmakingManager::OnMatchPlayerAdded* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MatchmakingManager::OnMatchPlayerAdded*, creationType>(object, method)));
    }
    // public Oculus.Platform.Samples.VrHoops.Player Invoke(System.Int32 slot, Oculus.Platform.Models.User user)
    // Offset: 0x172290C
    ::Oculus::Platform::Samples::VrHoops::Player* Invoke(int slot, ::Oculus::Platform::Models::User* user);
    // public System.IAsyncResult BeginInvoke(System.Int32 slot, Oculus.Platform.Models.User user, System.AsyncCallback callback, System.Object object)
    // Offset: 0x1722B54
    ::System::IAsyncResult* BeginInvoke(int slot, ::Oculus::Platform::Models::User* user, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public Oculus.Platform.Samples.VrHoops.Player EndInvoke(System.IAsyncResult result)
    // Offset: 0x1722BE8
    ::Oculus::Platform::Samples::VrHoops::Player* EndInvoke(::System::IAsyncResult* result);
  }; // Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnMatchPlayerAdded
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::Samples::VrHoops::Player* (Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::*)(int, ::Oculus::Platform::Models::User*)>(&Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::Invoke)> {
  static const MethodInfo* get() {
    static auto* slot = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* user = &::il2cpp_utils::GetClassFromName("Oculus.Platform.Models", "User")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{slot, user});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::*)(int, ::Oculus::Platform::Models::User*, ::System::AsyncCallback*, ::Il2CppObject*)>(&Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* slot = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* user = &::il2cpp_utils::GetClassFromName("Oculus.Platform.Models", "User")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{slot, user, callback, object});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::Samples::VrHoops::Player* (Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::*)(::System::IAsyncResult*)>(&Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
