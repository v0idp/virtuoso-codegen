// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Oculus.Platform.Samples.NetChat
namespace Oculus::Platform::Samples::NetChat {
  // Forward declaring type: states
  struct states;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Platform::Samples::NetChat::states, "Oculus.Platform.Samples.NetChat", "states");
// Type namespace: Oculus.Platform.Samples.NetChat
namespace Oculus::Platform::Samples::NetChat {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Platform.Samples.NetChat.states
  // [TokenAttribute] Offset: FFFFFFFF
  struct states/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: states
    constexpr states(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Oculus.Platform.Samples.NetChat.states NOT_INIT
    static constexpr const int NOT_INIT = 0;
    // Get static field: static public Oculus.Platform.Samples.NetChat.states NOT_INIT
    static ::Oculus::Platform::Samples::NetChat::states _get_NOT_INIT();
    // Set static field: static public Oculus.Platform.Samples.NetChat.states NOT_INIT
    static void _set_NOT_INIT(::Oculus::Platform::Samples::NetChat::states value);
    // static field const value: static public Oculus.Platform.Samples.NetChat.states IDLE
    static constexpr const int IDLE = 1;
    // Get static field: static public Oculus.Platform.Samples.NetChat.states IDLE
    static ::Oculus::Platform::Samples::NetChat::states _get_IDLE();
    // Set static field: static public Oculus.Platform.Samples.NetChat.states IDLE
    static void _set_IDLE(::Oculus::Platform::Samples::NetChat::states value);
    // static field const value: static public Oculus.Platform.Samples.NetChat.states REQUEST_FIND
    static constexpr const int REQUEST_FIND = 2;
    // Get static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_FIND
    static ::Oculus::Platform::Samples::NetChat::states _get_REQUEST_FIND();
    // Set static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_FIND
    static void _set_REQUEST_FIND(::Oculus::Platform::Samples::NetChat::states value);
    // static field const value: static public Oculus.Platform.Samples.NetChat.states FINDING_ROOM
    static constexpr const int FINDING_ROOM = 3;
    // Get static field: static public Oculus.Platform.Samples.NetChat.states FINDING_ROOM
    static ::Oculus::Platform::Samples::NetChat::states _get_FINDING_ROOM();
    // Set static field: static public Oculus.Platform.Samples.NetChat.states FINDING_ROOM
    static void _set_FINDING_ROOM(::Oculus::Platform::Samples::NetChat::states value);
    // static field const value: static public Oculus.Platform.Samples.NetChat.states REQUEST_CREATE
    static constexpr const int REQUEST_CREATE = 4;
    // Get static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_CREATE
    static ::Oculus::Platform::Samples::NetChat::states _get_REQUEST_CREATE();
    // Set static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_CREATE
    static void _set_REQUEST_CREATE(::Oculus::Platform::Samples::NetChat::states value);
    // static field const value: static public Oculus.Platform.Samples.NetChat.states REQUEST_JOIN
    static constexpr const int REQUEST_JOIN = 5;
    // Get static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_JOIN
    static ::Oculus::Platform::Samples::NetChat::states _get_REQUEST_JOIN();
    // Set static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_JOIN
    static void _set_REQUEST_JOIN(::Oculus::Platform::Samples::NetChat::states value);
    // static field const value: static public Oculus.Platform.Samples.NetChat.states REQUEST_LEAVE
    static constexpr const int REQUEST_LEAVE = 6;
    // Get static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_LEAVE
    static ::Oculus::Platform::Samples::NetChat::states _get_REQUEST_LEAVE();
    // Set static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_LEAVE
    static void _set_REQUEST_LEAVE(::Oculus::Platform::Samples::NetChat::states value);
    // static field const value: static public Oculus.Platform.Samples.NetChat.states IN_EMPTY_ROOM
    static constexpr const int IN_EMPTY_ROOM = 7;
    // Get static field: static public Oculus.Platform.Samples.NetChat.states IN_EMPTY_ROOM
    static ::Oculus::Platform::Samples::NetChat::states _get_IN_EMPTY_ROOM();
    // Set static field: static public Oculus.Platform.Samples.NetChat.states IN_EMPTY_ROOM
    static void _set_IN_EMPTY_ROOM(::Oculus::Platform::Samples::NetChat::states value);
    // static field const value: static public Oculus.Platform.Samples.NetChat.states IN_FULL_ROOM
    static constexpr const int IN_FULL_ROOM = 8;
    // Get static field: static public Oculus.Platform.Samples.NetChat.states IN_FULL_ROOM
    static ::Oculus::Platform::Samples::NetChat::states _get_IN_FULL_ROOM();
    // Set static field: static public Oculus.Platform.Samples.NetChat.states IN_FULL_ROOM
    static void _set_IN_FULL_ROOM(::Oculus::Platform::Samples::NetChat::states value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Oculus.Platform.Samples.NetChat.states
  #pragma pack(pop)
  static check_size<sizeof(states), 0 + sizeof(int)> __Oculus_Platform_Samples_NetChat_statesSizeCheck;
  static_assert(sizeof(states) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
