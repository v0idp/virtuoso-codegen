// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Platform.Samples.VrVoiceChat.PlatformManager
#include "Oculus/Platform/Samples/VrVoiceChat/PlatformManager.hpp"
// Including type: Oculus.Platform.Samples.VrVoiceChat.RoomManager/Oculus.Platform.Samples.VrVoiceChat.Invite
#include "Oculus/Platform/Samples/VrVoiceChat/RoomManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::$$c__DisplayClass31_0);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::$$c__DisplayClass31_0*, "Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/<>c__DisplayClass31_0");
// Type namespace: Oculus.Platform.Samples.VrVoiceChat
namespace Oculus::Platform::Samples::VrVoiceChat {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.<>c__DisplayClass31_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class PlatformManager::$$c__DisplayClass31_0 : public ::Il2CppObject {
    public:
    public:
    // public Oculus.Platform.Samples.VrVoiceChat.RoomManager/Oculus.Platform.Samples.VrVoiceChat.Invite invite
    // Size: 0x10
    // Offset: 0x10
    ::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite invite;
    // Field size check
    static_assert(sizeof(::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite) == 0x10);
    public:
    // Creating conversion operator: operator ::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite
    constexpr operator ::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite() const noexcept {
      return invite;
    }
    // Get instance field reference: public Oculus.Platform.Samples.VrVoiceChat.RoomManager/Oculus.Platform.Samples.VrVoiceChat.Invite invite
    [[deprecated]] ::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite& dyn_invite();
    // System.Void <SetActiveInvites>b__0()
    // Offset: 0x172351C
    void $SetActiveInvites$b__0();
    // public System.Void .ctor()
    // Offset: 0x1723514
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlatformManager::$$c__DisplayClass31_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::$$c__DisplayClass31_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlatformManager::$$c__DisplayClass31_0*, creationType>()));
    }
  }; // Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.<>c__DisplayClass31_0
  #pragma pack(pop)
  static check_size<sizeof(PlatformManager::$$c__DisplayClass31_0), 16 + sizeof(::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite)> __Oculus_Platform_Samples_VrVoiceChat_PlatformManager_$$c__DisplayClass31_0SizeCheck;
  static_assert(sizeof(PlatformManager::$$c__DisplayClass31_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Platform::Samples::VrVoiceChat::PlatformManager::$$c__DisplayClass31_0::$SetActiveInvites$b__0
// Il2CppName: <SetActiveInvites>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Platform::Samples::VrVoiceChat::PlatformManager::$$c__DisplayClass31_0::*)()>(&Oculus::Platform::Samples::VrVoiceChat::PlatformManager::$$c__DisplayClass31_0::$SetActiveInvites$b__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::Samples::VrVoiceChat::PlatformManager::$$c__DisplayClass31_0*), "<SetActiveInvites>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::Samples::VrVoiceChat::PlatformManager::$$c__DisplayClass31_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
