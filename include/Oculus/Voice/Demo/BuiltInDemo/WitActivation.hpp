// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Voice
namespace Oculus::Voice {
  // Forward declaring type: AppVoiceExperience
  class AppVoiceExperience;
}
// Completed forward declares
// Type namespace: Oculus.Voice.Demo.BuiltInDemo
namespace Oculus::Voice::Demo::BuiltInDemo {
  // Forward declaring type: WitActivation
  class WitActivation;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Voice::Demo::BuiltInDemo::WitActivation);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Voice::Demo::BuiltInDemo::WitActivation*, "Oculus.Voice.Demo.BuiltInDemo", "WitActivation");
// Type namespace: Oculus.Voice.Demo.BuiltInDemo
namespace Oculus::Voice::Demo::BuiltInDemo {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Voice.Demo.BuiltInDemo.WitActivation
  // [TokenAttribute] Offset: FFFFFFFF
  class WitActivation : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private Oculus.Voice.AppVoiceExperience voiceExperience
    // Size: 0x8
    // Offset: 0x18
    ::Oculus::Voice::AppVoiceExperience* voiceExperience;
    // Field size check
    static_assert(sizeof(::Oculus::Voice::AppVoiceExperience*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private Oculus.Voice.AppVoiceExperience voiceExperience
    [[deprecated]] ::Oculus::Voice::AppVoiceExperience*& dyn_voiceExperience();
    // private System.Void OnValidate()
    // Offset: 0x953578
    void OnValidate();
    // private System.Void Start()
    // Offset: 0x95360C
    void Start();
    // private System.Void Update()
    // Offset: 0x953660
    void Update();
    // public System.Void ActivateWit()
    // Offset: 0x9536E4
    void ActivateWit();
    // public System.Void .ctor()
    // Offset: 0x953708
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WitActivation* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::WitActivation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WitActivation*, creationType>()));
    }
  }; // Oculus.Voice.Demo.BuiltInDemo.WitActivation
  #pragma pack(pop)
  static check_size<sizeof(WitActivation), 24 + sizeof(::Oculus::Voice::AppVoiceExperience*)> __Oculus_Voice_Demo_BuiltInDemo_WitActivationSizeCheck;
  static_assert(sizeof(WitActivation) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Voice::Demo::BuiltInDemo::WitActivation::OnValidate
// Il2CppName: OnValidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Demo::BuiltInDemo::WitActivation::*)()>(&Oculus::Voice::Demo::BuiltInDemo::WitActivation::OnValidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Demo::BuiltInDemo::WitActivation*), "OnValidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Demo::BuiltInDemo::WitActivation::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Demo::BuiltInDemo::WitActivation::*)()>(&Oculus::Voice::Demo::BuiltInDemo::WitActivation::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Demo::BuiltInDemo::WitActivation*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Demo::BuiltInDemo::WitActivation::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Demo::BuiltInDemo::WitActivation::*)()>(&Oculus::Voice::Demo::BuiltInDemo::WitActivation::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Demo::BuiltInDemo::WitActivation*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Demo::BuiltInDemo::WitActivation::ActivateWit
// Il2CppName: ActivateWit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Demo::BuiltInDemo::WitActivation::*)()>(&Oculus::Voice::Demo::BuiltInDemo::WitActivation::ActivateWit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Demo::BuiltInDemo::WitActivation*), "ActivateWit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Demo::BuiltInDemo::WitActivation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
