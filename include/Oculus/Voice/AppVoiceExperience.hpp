// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Facebook.WitAi.VoiceService
#include "Facebook/WitAi/VoiceService.hpp"
// Including type: Facebook.WitAi.IWitRuntimeConfigProvider
#include "Facebook/WitAi/IWitRuntimeConfigProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Facebook::WitAi::Configuration
namespace Facebook::WitAi::Configuration {
  // Forward declaring type: WitRuntimeConfiguration
  class WitRuntimeConfiguration;
  // Forward declaring type: WitRequestOptions
  class WitRequestOptions;
}
// Forward declaring namespace: Oculus::Voice::Interfaces
namespace Oculus::Voice::Interfaces {
  // Forward declaring type: IPlatformVoiceService
  class IPlatformVoiceService;
}
// Forward declaring namespace: Facebook::WitAi
namespace Facebook::WitAi {
  // Skipping declaration: IVoiceService because it is already included!
}
// Forward declaring namespace: Facebook::WitAi::Interfaces
namespace Facebook::WitAi::Interfaces {
  // Forward declaring type: ITranscriptionProvider
  class ITranscriptionProvider;
}
// Completed forward declares
// Type namespace: Oculus.Voice
namespace Oculus::Voice {
  // Forward declaring type: AppVoiceExperience
  class AppVoiceExperience;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Voice::AppVoiceExperience);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Voice::AppVoiceExperience*, "Oculus.Voice", "AppVoiceExperience");
// Type namespace: Oculus.Voice
namespace Oculus::Voice {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Voice.AppVoiceExperience
  // [TokenAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: 723608
  class AppVoiceExperience : public ::Facebook::WitAi::VoiceService/*, public ::Facebook::WitAi::IWitRuntimeConfigProvider*/ {
    public:
    public:
    // private Facebook.WitAi.Configuration.WitRuntimeConfiguration witRuntimeConfiguration
    // Size: 0x8
    // Offset: 0x20
    ::Facebook::WitAi::Configuration::WitRuntimeConfiguration* witRuntimeConfiguration;
    // Field size check
    static_assert(sizeof(::Facebook::WitAi::Configuration::WitRuntimeConfiguration*) == 0x8);
    // private Oculus.Voice.Interfaces.IPlatformVoiceService platformService
    // Size: 0x8
    // Offset: 0x28
    ::Oculus::Voice::Interfaces::IPlatformVoiceService* platformService;
    // Field size check
    static_assert(sizeof(::Oculus::Voice::Interfaces::IPlatformVoiceService*) == 0x8);
    // private Facebook.WitAi.IVoiceService voiceServiceImpl
    // Size: 0x8
    // Offset: 0x30
    ::Facebook::WitAi::IVoiceService* voiceServiceImpl;
    // Field size check
    static_assert(sizeof(::Facebook::WitAi::IVoiceService*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Facebook::WitAi::IWitRuntimeConfigProvider
    operator ::Facebook::WitAi::IWitRuntimeConfigProvider() noexcept {
      return *reinterpret_cast<::Facebook::WitAi::IWitRuntimeConfigProvider*>(this);
    }
    // Get instance field reference: private Facebook.WitAi.Configuration.WitRuntimeConfiguration witRuntimeConfiguration
    [[deprecated]] ::Facebook::WitAi::Configuration::WitRuntimeConfiguration*& dyn_witRuntimeConfiguration();
    // Get instance field reference: private Oculus.Voice.Interfaces.IPlatformVoiceService platformService
    [[deprecated]] ::Oculus::Voice::Interfaces::IPlatformVoiceService*& dyn_platformService();
    // Get instance field reference: private Facebook.WitAi.IVoiceService voiceServiceImpl
    [[deprecated]] ::Facebook::WitAi::IVoiceService*& dyn_voiceServiceImpl();
    // public Facebook.WitAi.Configuration.WitRuntimeConfiguration get_RuntimeConfiguration()
    // Offset: 0x18E86BC
    ::Facebook::WitAi::Configuration::WitRuntimeConfiguration* get_RuntimeConfiguration();
    // public System.Void set_RuntimeConfiguration(Facebook.WitAi.Configuration.WitRuntimeConfiguration value)
    // Offset: 0x18E86C4
    void set_RuntimeConfiguration(::Facebook::WitAi::Configuration::WitRuntimeConfiguration* value);
    // public System.Boolean get_HasPlatformIntegrations()
    // Offset: 0x18E8AB0
    bool get_HasPlatformIntegrations();
    // private System.Void Start()
    // Offset: 0x18E8FD0
    void Start();
    // private System.Void InitVoiceSDK()
    // Offset: 0x18E8FD4
    void InitVoiceSDK();
    // private System.Void RevertToWitUnity()
    // Offset: 0x18E9160
    void RevertToWitUnity();
    // private System.Void OnEnable()
    // Offset: 0x18E91EC
    void OnEnable();
    // public override System.Boolean get_Active()
    // Offset: 0x18E86CC
    // Implemented from: Facebook.WitAi.VoiceService
    // Base method: System.Boolean VoiceService::get_Active()
    bool get_Active();
    // public override System.Boolean get_IsRequestActive()
    // Offset: 0x18E8784
    // Implemented from: Facebook.WitAi.VoiceService
    // Base method: System.Boolean VoiceService::get_IsRequestActive()
    bool get_IsRequestActive();
    // public override Facebook.WitAi.Interfaces.ITranscriptionProvider get_TranscriptionProvider()
    // Offset: 0x18E8840
    // Implemented from: Facebook.WitAi.VoiceService
    // Base method: Facebook.WitAi.Interfaces.ITranscriptionProvider VoiceService::get_TranscriptionProvider()
    ::Facebook::WitAi::Interfaces::ITranscriptionProvider* get_TranscriptionProvider();
    // public override System.Void set_TranscriptionProvider(Facebook.WitAi.Interfaces.ITranscriptionProvider value)
    // Offset: 0x18E88F0
    // Implemented from: Facebook.WitAi.VoiceService
    // Base method: System.Void VoiceService::set_TranscriptionProvider(Facebook.WitAi.Interfaces.ITranscriptionProvider value)
    void set_TranscriptionProvider(::Facebook::WitAi::Interfaces::ITranscriptionProvider* value);
    // public override System.Boolean get_MicActive()
    // Offset: 0x18E89B0
    // Implemented from: Facebook.WitAi.VoiceService
    // Base method: System.Boolean VoiceService::get_MicActive()
    bool get_MicActive();
    // public override System.Boolean get_ShouldSendMicData()
    // Offset: 0x18E8A6C
    // Implemented from: Facebook.WitAi.VoiceService
    // Base method: System.Boolean VoiceService::get_ShouldSendMicData()
    bool get_ShouldSendMicData();
    // public System.Void .ctor()
    // Offset: 0x18E92BC
    // Implemented from: Facebook.WitAi.VoiceService
    // Base method: System.Void VoiceService::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AppVoiceExperience* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AppVoiceExperience*, creationType>()));
    }
    // public override System.Void Activate()
    // Offset: 0x18E8AB8
    // Implemented from: Facebook.WitAi.VoiceService
    // Base method: System.Void VoiceService::Activate()
    void Activate();
    // public override System.Void Activate(Facebook.WitAi.Configuration.WitRequestOptions options)
    // Offset: 0x18E8B68
    // Implemented from: Facebook.WitAi.VoiceService
    // Base method: System.Void VoiceService::Activate(Facebook.WitAi.Configuration.WitRequestOptions options)
    void Activate(::Facebook::WitAi::Configuration::WitRequestOptions* options);
    // public override System.Void ActivateImmediately()
    // Offset: 0x18E8C28
    // Implemented from: Facebook.WitAi.VoiceService
    // Base method: System.Void VoiceService::ActivateImmediately()
    void ActivateImmediately();
    // public override System.Void ActivateImmediately(Facebook.WitAi.Configuration.WitRequestOptions options)
    // Offset: 0x18E8CD8
    // Implemented from: Facebook.WitAi.VoiceService
    // Base method: System.Void VoiceService::ActivateImmediately(Facebook.WitAi.Configuration.WitRequestOptions options)
    void ActivateImmediately(::Facebook::WitAi::Configuration::WitRequestOptions* options);
    // public override System.Void Deactivate()
    // Offset: 0x18E8D98
    // Implemented from: Facebook.WitAi.VoiceService
    // Base method: System.Void VoiceService::Deactivate()
    void Deactivate();
    // public override System.Void Activate(System.String text)
    // Offset: 0x18E8E48
    // Implemented from: Facebook.WitAi.VoiceService
    // Base method: System.Void VoiceService::Activate(System.String text)
    void Activate(::StringW text);
    // public override System.Void Activate(System.String text, Facebook.WitAi.Configuration.WitRequestOptions requestOptions)
    // Offset: 0x18E8F08
    // Implemented from: Facebook.WitAi.VoiceService
    // Base method: System.Void VoiceService::Activate(System.String text, Facebook.WitAi.Configuration.WitRequestOptions requestOptions)
    void Activate(::StringW text, ::Facebook::WitAi::Configuration::WitRequestOptions* requestOptions);
  }; // Oculus.Voice.AppVoiceExperience
  #pragma pack(pop)
  static check_size<sizeof(AppVoiceExperience), 48 + sizeof(::Facebook::WitAi::IVoiceService*)> __Oculus_Voice_AppVoiceExperienceSizeCheck;
  static_assert(sizeof(AppVoiceExperience) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::get_RuntimeConfiguration
// Il2CppName: get_RuntimeConfiguration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Configuration::WitRuntimeConfiguration* (Oculus::Voice::AppVoiceExperience::*)()>(&Oculus::Voice::AppVoiceExperience::get_RuntimeConfiguration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "get_RuntimeConfiguration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::set_RuntimeConfiguration
// Il2CppName: set_RuntimeConfiguration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::AppVoiceExperience::*)(::Facebook::WitAi::Configuration::WitRuntimeConfiguration*)>(&Oculus::Voice::AppVoiceExperience::set_RuntimeConfiguration)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Configuration", "WitRuntimeConfiguration")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "set_RuntimeConfiguration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::get_HasPlatformIntegrations
// Il2CppName: get_HasPlatformIntegrations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Voice::AppVoiceExperience::*)()>(&Oculus::Voice::AppVoiceExperience::get_HasPlatformIntegrations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "get_HasPlatformIntegrations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::AppVoiceExperience::*)()>(&Oculus::Voice::AppVoiceExperience::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::InitVoiceSDK
// Il2CppName: InitVoiceSDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::AppVoiceExperience::*)()>(&Oculus::Voice::AppVoiceExperience::InitVoiceSDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "InitVoiceSDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::RevertToWitUnity
// Il2CppName: RevertToWitUnity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::AppVoiceExperience::*)()>(&Oculus::Voice::AppVoiceExperience::RevertToWitUnity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "RevertToWitUnity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::AppVoiceExperience::*)()>(&Oculus::Voice::AppVoiceExperience::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::get_Active
// Il2CppName: get_Active
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Voice::AppVoiceExperience::*)()>(&Oculus::Voice::AppVoiceExperience::get_Active)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "get_Active", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::get_IsRequestActive
// Il2CppName: get_IsRequestActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Voice::AppVoiceExperience::*)()>(&Oculus::Voice::AppVoiceExperience::get_IsRequestActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "get_IsRequestActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::get_TranscriptionProvider
// Il2CppName: get_TranscriptionProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Interfaces::ITranscriptionProvider* (Oculus::Voice::AppVoiceExperience::*)()>(&Oculus::Voice::AppVoiceExperience::get_TranscriptionProvider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "get_TranscriptionProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::set_TranscriptionProvider
// Il2CppName: set_TranscriptionProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::AppVoiceExperience::*)(::Facebook::WitAi::Interfaces::ITranscriptionProvider*)>(&Oculus::Voice::AppVoiceExperience::set_TranscriptionProvider)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Interfaces", "ITranscriptionProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "set_TranscriptionProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::get_MicActive
// Il2CppName: get_MicActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Voice::AppVoiceExperience::*)()>(&Oculus::Voice::AppVoiceExperience::get_MicActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "get_MicActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::get_ShouldSendMicData
// Il2CppName: get_ShouldSendMicData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Voice::AppVoiceExperience::*)()>(&Oculus::Voice::AppVoiceExperience::get_ShouldSendMicData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "get_ShouldSendMicData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::Activate
// Il2CppName: Activate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::AppVoiceExperience::*)()>(&Oculus::Voice::AppVoiceExperience::Activate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "Activate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::Activate
// Il2CppName: Activate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::AppVoiceExperience::*)(::Facebook::WitAi::Configuration::WitRequestOptions*)>(&Oculus::Voice::AppVoiceExperience::Activate)> {
  static const MethodInfo* get() {
    static auto* options = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Configuration", "WitRequestOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "Activate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{options});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::ActivateImmediately
// Il2CppName: ActivateImmediately
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::AppVoiceExperience::*)()>(&Oculus::Voice::AppVoiceExperience::ActivateImmediately)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "ActivateImmediately", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::ActivateImmediately
// Il2CppName: ActivateImmediately
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::AppVoiceExperience::*)(::Facebook::WitAi::Configuration::WitRequestOptions*)>(&Oculus::Voice::AppVoiceExperience::ActivateImmediately)> {
  static const MethodInfo* get() {
    static auto* options = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Configuration", "WitRequestOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "ActivateImmediately", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{options});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::Deactivate
// Il2CppName: Deactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::AppVoiceExperience::*)()>(&Oculus::Voice::AppVoiceExperience::Deactivate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "Deactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::Activate
// Il2CppName: Activate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::AppVoiceExperience::*)(::StringW)>(&Oculus::Voice::AppVoiceExperience::Activate)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "Activate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::AppVoiceExperience::Activate
// Il2CppName: Activate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::AppVoiceExperience::*)(::StringW, ::Facebook::WitAi::Configuration::WitRequestOptions*)>(&Oculus::Voice::AppVoiceExperience::Activate)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* requestOptions = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Configuration", "WitRequestOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::AppVoiceExperience*), "Activate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text, requestOptions});
  }
};
