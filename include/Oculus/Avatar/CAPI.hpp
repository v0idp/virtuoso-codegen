// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: ovrAvatarPBSMaterialState
#include "GlobalNamespace/ovrAvatarPBSMaterialState.hpp"
// Including type: ovrAvatarTransform
#include "GlobalNamespace/ovrAvatarTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Avatar
namespace Oculus::Avatar {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: Version
  class Version;
  // Skipping declaration: ValueType because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Skipping declaration: Vector4 because it is already included!
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ovrAvatarMessageType
  struct ovrAvatarMessageType;
  // Forward declaring type: ovrAvatarMessage_AvatarSpecification
  struct ovrAvatarMessage_AvatarSpecification;
  // Forward declaring type: ovrAvatarMessage_AssetLoaded
  struct ovrAvatarMessage_AssetLoaded;
  // Forward declaring type: ovrAvatarLookAndFeelVersion
  struct ovrAvatarLookAndFeelVersion;
  // Forward declaring type: ovrAvatarAssetLevelOfDetail
  struct ovrAvatarAssetLevelOfDetail;
  // Forward declaring type: ovrAvatarCapabilities
  struct ovrAvatarCapabilities;
  // Forward declaring type: ovrAvatarVisemes
  struct ovrAvatarVisemes;
  // Forward declaring type: ovrAvatarHandInputState
  struct ovrAvatarHandInputState;
  // Forward declaring type: ovrAvatarControllerType
  struct ovrAvatarControllerType;
  // Forward declaring type: ovrAvatarComponent
  struct ovrAvatarComponent;
  // Forward declaring type: ovrAvatarBaseComponent
  struct ovrAvatarBaseComponent;
  // Forward declaring type: ovrAvatarBodyComponent
  struct ovrAvatarBodyComponent;
  // Forward declaring type: ovrAvatarControllerComponent
  struct ovrAvatarControllerComponent;
  // Forward declaring type: ovrAvatarHandComponent
  struct ovrAvatarHandComponent;
  // Forward declaring type: ovrAvatarAssetType
  struct ovrAvatarAssetType;
  // Forward declaring type: ovrAvatarMeshAssetData
  struct ovrAvatarMeshAssetData;
  // Forward declaring type: ovrAvatarMeshAssetDataV2
  struct ovrAvatarMeshAssetDataV2;
  // Forward declaring type: ovrAvatarTextureAssetData
  struct ovrAvatarTextureAssetData;
  // Forward declaring type: ovrAvatarMaterialState
  struct ovrAvatarMaterialState;
  // Forward declaring type: ovrAvatarRenderPartType
  struct ovrAvatarRenderPartType;
  // Forward declaring type: ovrAvatarRenderPart_SkinnedMeshRender
  struct ovrAvatarRenderPart_SkinnedMeshRender;
  // Forward declaring type: ovrAvatarVisibilityFlags
  struct ovrAvatarVisibilityFlags;
  // Forward declaring type: ovrAvatarHandGesture
  struct ovrAvatarHandGesture;
  // Forward declaring type: ovrAvatarExpressiveParameters
  struct ovrAvatarExpressiveParameters;
  // Forward declaring type: ovrAvatarRenderPart_SkinnedMeshRenderPBS
  struct ovrAvatarRenderPart_SkinnedMeshRenderPBS;
  // Forward declaring type: ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
  struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2;
  // Forward declaring type: ovrAvatarBlendShapeParams
  struct ovrAvatarBlendShapeParams;
  // Forward declaring type: ovrAvatarRenderPart_ProjectorRender
  struct ovrAvatarRenderPart_ProjectorRender;
  // Forward declaring type: ovrAvatarGazeTargets
  struct ovrAvatarGazeTargets;
  // Forward declaring type: ovrAvatarLights
  struct ovrAvatarLights;
  // Forward declaring type: ovrAvatarLogLevel
  struct ovrAvatarLogLevel;
}
// Completed forward declares
// Type namespace: Oculus.Avatar
namespace Oculus::Avatar {
  // Forward declaring type: CAPI
  class CAPI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Avatar::CAPI);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Avatar::CAPI*, "Oculus.Avatar", "CAPI");
// Type namespace: Oculus.Avatar
namespace Oculus::Avatar {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Avatar.CAPI
  // [TokenAttribute] Offset: FFFFFFFF
  class CAPI : public ::Il2CppObject {
    public:
    // Nested type: ::Oculus::Avatar::CAPI::LoggingDelegate
    class LoggingDelegate;
    // Nested type: ::Oculus::Avatar::CAPI::Result
    struct Result;
    // Nested type: ::Oculus::Avatar::CAPI::OVRP_1_30_0
    class OVRP_1_30_0;
    // static field const value: static private System.String LibFile
    static constexpr const char* LibFile = "ovravatarloader";
    // Get static field: static private System.String LibFile
    static ::StringW _get_LibFile();
    // Set static field: static private System.String LibFile
    static void _set_LibFile(::StringW value);
    // Get static field: static private System.IntPtr nativeVisemeData
    static ::System::IntPtr _get_nativeVisemeData();
    // Set static field: static private System.IntPtr nativeVisemeData
    static void _set_nativeVisemeData(::System::IntPtr value);
    // Get static field: static private System.IntPtr nativeGazeTargetsData
    static ::System::IntPtr _get_nativeGazeTargetsData();
    // Set static field: static private System.IntPtr nativeGazeTargetsData
    static void _set_nativeGazeTargetsData(::System::IntPtr value);
    // Get static field: static private System.IntPtr nativeAvatarLightsData
    static ::System::IntPtr _get_nativeAvatarLightsData();
    // Set static field: static private System.IntPtr nativeAvatarLightsData
    static void _set_nativeAvatarLightsData(::System::IntPtr value);
    // Get static field: static private System.IntPtr DebugLineCountData
    static ::System::IntPtr _get_DebugLineCountData();
    // Set static field: static private System.IntPtr DebugLineCountData
    static void _set_DebugLineCountData(::System::IntPtr value);
    // Get static field: static private System.Single[] scratchBufferFloat
    static ::ArrayW<float> _get_scratchBufferFloat();
    // Set static field: static private System.Single[] scratchBufferFloat
    static void _set_scratchBufferFloat(::ArrayW<float> value);
    // Get static field: static private UnityEngine.GameObject debugLineGo
    static ::UnityEngine::GameObject* _get_debugLineGo();
    // Set static field: static private UnityEngine.GameObject debugLineGo
    static void _set_debugLineGo(::UnityEngine::GameObject* value);
    // Get static field: static private System.String SDKRuntimePrefix
    static ::StringW _get_SDKRuntimePrefix();
    // Set static field: static private System.String SDKRuntimePrefix
    static void _set_SDKRuntimePrefix(::StringW value);
    // static field const value: static private System.String ovrPluginDLL
    static constexpr const char* ovrPluginDLL = "OVRPlugin";
    // Get static field: static private System.String ovrPluginDLL
    static ::StringW _get_ovrPluginDLL();
    // Set static field: static private System.String ovrPluginDLL
    static void _set_ovrPluginDLL(::StringW value);
    // Get static field: static private System.Version ovrPluginVersion
    static ::System::Version* _get_ovrPluginVersion();
    // Set static field: static private System.Version ovrPluginVersion
    static void _set_ovrPluginVersion(::System::Version* value);
    // public System.Void .ctor()
    // Offset: 0x943D44
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CAPI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CAPI*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x943D4C
    static void _cctor();
    // static public System.Void ovrAvatar_InitializeAndroidUnity(System.String appID)
    // Offset: 0x93C000
    static void ovrAvatar_InitializeAndroidUnity(::StringW appID);
    // static public System.Void Initialize()
    // Offset: 0x93C090
    static void Initialize();
    // static public System.Void Shutdown()
    // Offset: 0x93C2A8
    static void Shutdown();
    // static public System.Void ovrAvatar_Shutdown()
    // Offset: 0x93C390
    static void ovrAvatar_Shutdown();
    // static public System.IntPtr ovrAvatarMessage_Pop()
    // Offset: 0x93C400
    static ::System::IntPtr ovrAvatarMessage_Pop();
    // static public ovrAvatarMessageType ovrAvatarMessage_GetType(System.IntPtr msg)
    // Offset: 0x93C474
    static ::GlobalNamespace::ovrAvatarMessageType ovrAvatarMessage_GetType(::System::IntPtr msg);
    // static public ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(System.IntPtr msg)
    // Offset: 0x93C4F4
    static ::GlobalNamespace::ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(::System::IntPtr msg);
    // static private System.IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(System.IntPtr msg)
    // Offset: 0x93C638
    static ::System::IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(::System::IntPtr msg);
    // static public ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(System.IntPtr msg)
    // Offset: 0x93C6B8
    static ::GlobalNamespace::ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(::System::IntPtr msg);
    // static private System.IntPtr ovrAvatarMessage_GetAssetLoaded_Native(System.IntPtr msg)
    // Offset: 0x93C7FC
    static ::System::IntPtr ovrAvatarMessage_GetAssetLoaded_Native(::System::IntPtr msg);
    // static public System.Void ovrAvatarMessage_Free(System.IntPtr msg)
    // Offset: 0x93C87C
    static void ovrAvatarMessage_Free(::System::IntPtr msg);
    // static public System.IntPtr ovrAvatarSpecificationRequest_Create(System.UInt64 userID)
    // Offset: 0x93C8FC
    static ::System::IntPtr ovrAvatarSpecificationRequest_Create(uint64_t userID);
    // static public System.Void ovrAvatarSpecificationRequest_Destroy(System.IntPtr specificationRequest)
    // Offset: 0x93C97C
    static void ovrAvatarSpecificationRequest_Destroy(::System::IntPtr specificationRequest);
    // static public System.Void ovrAvatarSpecificationRequest_SetCombineMeshes(System.IntPtr specificationRequest, System.Boolean useCombinedMesh)
    // Offset: 0x93C9FC
    static void ovrAvatarSpecificationRequest_SetCombineMeshes(::System::IntPtr specificationRequest, bool useCombinedMesh);
    // static public System.Void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(System.IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version)
    // Offset: 0x93CA8C
    static void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(::System::IntPtr specificationRequest, ::GlobalNamespace::ovrAvatarLookAndFeelVersion version);
    // static public System.Void ovrAvatarSpecificationRequest_SetLevelOfDetail(System.IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod)
    // Offset: 0x93CB1C
    static void ovrAvatarSpecificationRequest_SetLevelOfDetail(::System::IntPtr specificationRequest, ::GlobalNamespace::ovrAvatarAssetLevelOfDetail lod);
    // static public System.Void ovrAvatar_RequestAvatarSpecification(System.UInt64 userID)
    // Offset: 0x93CBAC
    static void ovrAvatar_RequestAvatarSpecification(uint64_t userID);
    // static public System.Void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(System.IntPtr specificationRequest)
    // Offset: 0x93CC2C
    static void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(::System::IntPtr specificationRequest);
    // static public System.Void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(System.IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version)
    // Offset: 0x93CCAC
    static void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(::System::IntPtr specificationRequest, ::GlobalNamespace::ovrAvatarLookAndFeelVersion version);
    // static public System.Void ovrAvatarSpecificationRequest_SetExpressiveFlag(System.IntPtr specificationRequest, System.Boolean enable)
    // Offset: 0x93CD3C
    static void ovrAvatarSpecificationRequest_SetExpressiveFlag(::System::IntPtr specificationRequest, bool enable);
    // static public System.IntPtr ovrAvatar_Create(System.IntPtr avatarSpecification, ovrAvatarCapabilities capabilities)
    // Offset: 0x93CDCC
    static ::System::IntPtr ovrAvatar_Create(::System::IntPtr avatarSpecification, ::GlobalNamespace::ovrAvatarCapabilities capabilities);
    // static public System.Void ovrAvatar_Destroy(System.IntPtr avatar)
    // Offset: 0x93CE5C
    static void ovrAvatar_Destroy(::System::IntPtr avatar);
    // static public System.Void ovrAvatarPose_UpdateBody(System.IntPtr avatar, ovrAvatarTransform headPose)
    // Offset: 0x93CEDC
    static void ovrAvatarPose_UpdateBody(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarTransform headPose);
    // static public System.Void ovrAvatarPose_UpdateVoiceVisualization(System.IntPtr avatar, System.Single[] pcmData)
    // Offset: 0x93CF7C
    static void ovrAvatarPose_UpdateVoiceVisualization(::System::IntPtr avatar, ::ArrayW<float> pcmData);
    // static private System.Void ovrAvatarPose_UpdateVoiceVisualization_Native(System.IntPtr avatar, System.UInt32 pcmDataSize, in System.Single[] pcmData)
    // Offset: 0x93CFF8
    static void ovrAvatarPose_UpdateVoiceVisualization_Native(::System::IntPtr avatar, uint pcmDataSize, ByRef<::ArrayW<float>> pcmData);
    // static public System.Void ovrAvatarPose_UpdateHands(System.IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight)
    // Offset: 0x93D098
    static void ovrAvatarPose_UpdateHands(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarHandInputState inputStateLeft, ::GlobalNamespace::ovrAvatarHandInputState inputStateRight);
    // static public System.Void ovrAvatarPose_UpdateHandsWithType(System.IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type)
    // Offset: 0x93D158
    static void ovrAvatarPose_UpdateHandsWithType(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarHandInputState inputStateLeft, ::GlobalNamespace::ovrAvatarHandInputState inputStateRight, ::GlobalNamespace::ovrAvatarControllerType type);
    // static public System.Void ovrAvatarPose_Finalize(System.IntPtr avatar, System.Single elapsedSeconds)
    // Offset: 0x93D228
    static void ovrAvatarPose_Finalize(::System::IntPtr avatar, float elapsedSeconds);
    // static public System.Void ovrAvatar_SetLeftControllerVisibility(System.IntPtr avatar, System.Boolean show)
    // Offset: 0x93D2B8
    static void ovrAvatar_SetLeftControllerVisibility(::System::IntPtr avatar, bool show);
    // static public System.Void ovrAvatar_SetRightControllerVisibility(System.IntPtr avatar, System.Boolean show)
    // Offset: 0x93D348
    static void ovrAvatar_SetRightControllerVisibility(::System::IntPtr avatar, bool show);
    // static public System.Void ovrAvatar_SetLeftHandVisibility(System.IntPtr avatar, System.Boolean show)
    // Offset: 0x93D3D8
    static void ovrAvatar_SetLeftHandVisibility(::System::IntPtr avatar, bool show);
    // static public System.Void ovrAvatar_SetRightHandVisibility(System.IntPtr avatar, System.Boolean show)
    // Offset: 0x93D468
    static void ovrAvatar_SetRightHandVisibility(::System::IntPtr avatar, bool show);
    // static public System.UInt32 ovrAvatarComponent_Count(System.IntPtr avatar)
    // Offset: 0x93D4F8
    static uint ovrAvatarComponent_Count(::System::IntPtr avatar);
    // static public System.Void ovrAvatarComponent_Get(System.IntPtr avatar, System.UInt32 index, System.Boolean includeName, ref ovrAvatarComponent component)
    // Offset: 0x93D578
    static void ovrAvatarComponent_Get(::System::IntPtr avatar, uint index, bool includeName, ByRef<::GlobalNamespace::ovrAvatarComponent> component);
    // static public System.Void ovrAvatarComponent_Get(System.IntPtr componentPtr, System.Boolean includeName, ref ovrAvatarComponent component)
    // Offset: 0x93D694
    static void ovrAvatarComponent_Get(::System::IntPtr componentPtr, bool includeName, ByRef<::GlobalNamespace::ovrAvatarComponent> component);
    // static public System.IntPtr ovrAvatarComponent_Get_Native(System.IntPtr avatar, System.UInt32 index)
    // Offset: 0x93D604
    static ::System::IntPtr ovrAvatarComponent_Get_Native(::System::IntPtr avatar, uint index);
    // static public System.Boolean ovrAvatarPose_GetBaseComponent(System.IntPtr avatar, ref ovrAvatarBaseComponent component)
    // Offset: 0x93D8A8
    static bool ovrAvatarPose_GetBaseComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarBaseComponent> component);
    // static private System.IntPtr ovrAvatarPose_GetBaseComponent_Native(System.IntPtr avatar)
    // Offset: 0x93DA18
    static ::System::IntPtr ovrAvatarPose_GetBaseComponent_Native(::System::IntPtr avatar);
    // static public System.IntPtr MarshalRenderComponent(System.IntPtr ptr)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::System::IntPtr MarshalRenderComponent(::System::IntPtr ptr) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::MarshalRenderComponent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "MarshalRenderComponent", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, ptr);
    }
    // static public System.Boolean ovrAvatarPose_GetBodyComponent(System.IntPtr avatar, ref ovrAvatarBodyComponent component)
    // Offset: 0x93DA98
    static bool ovrAvatarPose_GetBodyComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarBodyComponent> component);
    // static private System.IntPtr ovrAvatarPose_GetBodyComponent_Native(System.IntPtr avatar)
    // Offset: 0x93DD40
    static ::System::IntPtr ovrAvatarPose_GetBodyComponent_Native(::System::IntPtr avatar);
    // static public System.Boolean ovrAvatarPose_GetLeftControllerComponent(System.IntPtr avatar, ref ovrAvatarControllerComponent component)
    // Offset: 0x93DDC0
    static bool ovrAvatarPose_GetLeftControllerComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarControllerComponent> component);
    // static private System.IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(System.IntPtr avatar)
    // Offset: 0x93DF30
    static ::System::IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(::System::IntPtr avatar);
    // static public System.Boolean ovrAvatarPose_GetRightControllerComponent(System.IntPtr avatar, ref ovrAvatarControllerComponent component)
    // Offset: 0x93DFB0
    static bool ovrAvatarPose_GetRightControllerComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarControllerComponent> component);
    // static private System.IntPtr ovrAvatarPose_GetRightControllerComponent_Native(System.IntPtr avatar)
    // Offset: 0x93E120
    static ::System::IntPtr ovrAvatarPose_GetRightControllerComponent_Native(::System::IntPtr avatar);
    // static public System.Boolean ovrAvatarPose_GetLeftHandComponent(System.IntPtr avatar, ref ovrAvatarHandComponent component)
    // Offset: 0x93E1A0
    static bool ovrAvatarPose_GetLeftHandComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarHandComponent> component);
    // static private System.IntPtr ovrAvatarPose_GetLeftHandComponent_Native(System.IntPtr avatar)
    // Offset: 0x93E310
    static ::System::IntPtr ovrAvatarPose_GetLeftHandComponent_Native(::System::IntPtr avatar);
    // static public System.Boolean ovrAvatarPose_GetRightHandComponent(System.IntPtr avatar, ref ovrAvatarHandComponent component)
    // Offset: 0x93E390
    static bool ovrAvatarPose_GetRightHandComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarHandComponent> component);
    // static private System.IntPtr ovrAvatarPose_GetRightHandComponent_Native(System.IntPtr avatar)
    // Offset: 0x93E500
    static ::System::IntPtr ovrAvatarPose_GetRightHandComponent_Native(::System::IntPtr avatar);
    // static public System.Void ovrAvatarAsset_BeginLoading(System.UInt64 assetID)
    // Offset: 0x93E580
    static void ovrAvatarAsset_BeginLoading(uint64_t assetID);
    // static public System.Boolean ovrAvatarAsset_BeginLoadingLOD(System.UInt64 assetId, ovrAvatarAssetLevelOfDetail lod)
    // Offset: 0x93E600
    static bool ovrAvatarAsset_BeginLoadingLOD(uint64_t assetId, ::GlobalNamespace::ovrAvatarAssetLevelOfDetail lod);
    // static public ovrAvatarAssetType ovrAvatarAsset_GetType(System.IntPtr assetHandle)
    // Offset: 0x93E698
    static ::GlobalNamespace::ovrAvatarAssetType ovrAvatarAsset_GetType(::System::IntPtr assetHandle);
    // static public ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(System.IntPtr assetPtr)
    // Offset: 0x93E718
    static ::GlobalNamespace::ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(::System::IntPtr assetPtr);
    // static public ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(System.IntPtr assetPtr)
    // Offset: 0x93E8F0
    static ::GlobalNamespace::ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(::System::IntPtr assetPtr);
    // static private System.IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(System.IntPtr assetPtr)
    // Offset: 0x93EA48
    static ::System::IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(::System::IntPtr assetPtr);
    // static private System.IntPtr ovrAvatarAsset_GetMeshData_Native(System.IntPtr assetPtr)
    // Offset: 0x93E870
    static ::System::IntPtr ovrAvatarAsset_GetMeshData_Native(::System::IntPtr assetPtr);
    // static public System.UInt32 ovrAvatarAsset_GetMeshBlendShapeCount(System.IntPtr assetPtr)
    // Offset: 0x93EAC8
    static uint ovrAvatarAsset_GetMeshBlendShapeCount(::System::IntPtr assetPtr);
    // static public System.IntPtr ovrAvatarAsset_GetMeshBlendShapeName(System.IntPtr assetPtr, System.UInt32 index)
    // Offset: 0x93EB48
    static ::System::IntPtr ovrAvatarAsset_GetMeshBlendShapeName(::System::IntPtr assetPtr, uint index);
    // static public System.UInt32 ovrAvatarAsset_GetSubmeshCount(System.IntPtr assetPtr)
    // Offset: 0x93EBD8
    static uint ovrAvatarAsset_GetSubmeshCount(::System::IntPtr assetPtr);
    // static public System.UInt32 ovrAvatarAsset_GetSubmeshLastIndex(System.IntPtr assetPtr, System.UInt32 index)
    // Offset: 0x93EC58
    static uint ovrAvatarAsset_GetSubmeshLastIndex(::System::IntPtr assetPtr, uint index);
    // static public System.IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(System.IntPtr assetPtr)
    // Offset: 0x93ECE8
    static ::System::IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(::System::IntPtr assetPtr);
    // static public System.IntPtr ovrAvatarAsset_GetAvatar(System.IntPtr assetHandle)
    // Offset: 0x93ED68
    static ::System::IntPtr ovrAvatarAsset_GetAvatar(::System::IntPtr assetHandle);
    // static public System.UInt64[] ovrAvatarAsset_GetCombinedMeshIDs(System.IntPtr assetHandle)
    // Offset: 0x93EDE8
    static ::ArrayW<uint64_t> ovrAvatarAsset_GetCombinedMeshIDs(::System::IntPtr assetHandle);
    // static public System.IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(System.IntPtr assetHandle, System.IntPtr count)
    // Offset: 0x93F074
    static ::System::IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(::System::IntPtr assetHandle, ::System::IntPtr count);
    // static public System.Void ovrAvatar_GetCombinedMeshAlphaData(System.IntPtr avatar, ref System.UInt64 textureID, ref UnityEngine.Vector4 offset)
    // Offset: 0x93F104
    static void ovrAvatar_GetCombinedMeshAlphaData(::System::IntPtr avatar, ByRef<uint64_t> textureID, ByRef<::UnityEngine::Vector4> offset);
    // static public System.IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(System.IntPtr avatar, System.IntPtr textureIDPtr, System.IntPtr offsetPtr)
    // Offset: 0x93F334
    static ::System::IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(::System::IntPtr avatar, ::System::IntPtr textureIDPtr, ::System::IntPtr offsetPtr);
    // static public ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(System.IntPtr assetPtr)
    // Offset: 0x93F3CC
    static ::GlobalNamespace::ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(::System::IntPtr assetPtr);
    // static private System.IntPtr ovrAvatarAsset_GetTextureData_Native(System.IntPtr assetPtr)
    // Offset: 0x93F51C
    static ::System::IntPtr ovrAvatarAsset_GetTextureData_Native(::System::IntPtr assetPtr);
    // static private System.IntPtr ovrAvatarAsset_GetMaterialData_Native(System.IntPtr assetPtr)
    // Offset: 0x93F59C
    static ::System::IntPtr ovrAvatarAsset_GetMaterialData_Native(::System::IntPtr assetPtr);
    // static public ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(System.IntPtr assetPtr)
    // Offset: 0x93F61C
    static ::GlobalNamespace::ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(::System::IntPtr assetPtr);
    // static public ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(System.IntPtr renderPart)
    // Offset: 0x93F770
    static ::GlobalNamespace::ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(::System::IntPtr renderPart);
    // static public ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(System.IntPtr renderPart)
    // Offset: 0x93F7F0
    static ::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(::System::IntPtr renderPart);
    // static private System.IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(System.IntPtr renderPart)
    // Offset: 0x93F944
    static ::System::IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(::System::IntPtr renderPart);
    // static public ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(System.IntPtr renderPart)
    // Offset: 0x93F9C4
    static ::GlobalNamespace::ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(::System::IntPtr renderPart);
    // static public ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(System.IntPtr renderPart)
    // Offset: 0x93FA54
    static ::GlobalNamespace::ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(::System::IntPtr renderPart);
    // static public ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(System.IntPtr renderPart)
    // Offset: 0x93FAE4
    static ::GlobalNamespace::ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(::System::IntPtr renderPart);
    // static public ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(System.IntPtr renderPart)
    // Offset: 0x93FB74
    static ::GlobalNamespace::ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(::System::IntPtr renderPart);
    // static public System.Boolean ovrAvatarSkinnedMeshRender_MaterialStateChanged(System.IntPtr renderPart)
    // Offset: 0x93FBF4
    static bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(::System::IntPtr renderPart);
    // static public System.Boolean ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(System.IntPtr renderPart)
    // Offset: 0x93FC7C
    static bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(::System::IntPtr renderPart);
    // static public ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(System.IntPtr renderPart)
    // Offset: 0x93FD04
    static ::GlobalNamespace::ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(::System::IntPtr renderPart);
    // static public ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(System.IntPtr renderPart)
    // Offset: 0x93FD84
    static ::GlobalNamespace::ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(::System::IntPtr renderPart);
    // static public ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(System.IntPtr renderPart)
    // Offset: 0x93FE04
    static ::GlobalNamespace::ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(::System::IntPtr renderPart);
    // static public ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(System.IntPtr renderPart)
    // Offset: 0x93FEB8
    static ::GlobalNamespace::ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(::System::IntPtr renderPart);
    // static public ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(System.IntPtr avatar)
    // Offset: 0x93FF48
    static ::GlobalNamespace::ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(::System::IntPtr avatar);
    // static public System.UInt64 ovrAvatarSkinnedMeshRender_GetDirtyJoints(System.IntPtr renderPart)
    // Offset: 0x93FFD8
    static uint64_t ovrAvatarSkinnedMeshRender_GetDirtyJoints(::System::IntPtr renderPart);
    // static public System.UInt64 ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(System.IntPtr renderPart)
    // Offset: 0x940058
    static uint64_t ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(::System::IntPtr renderPart);
    // static public System.UInt64 ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(System.IntPtr renderPart)
    // Offset: 0x9400D8
    static uint64_t ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(::System::IntPtr renderPart);
    // static public ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(System.IntPtr renderPart, System.UInt32 jointIndex)
    // Offset: 0x940158
    static ::GlobalNamespace::ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(::System::IntPtr renderPart, uint jointIndex);
    // static public System.Void ovrAvatar_SetActionUnitOnsetSpeed(System.IntPtr avatar, System.Single onsetSpeed)
    // Offset: 0x9401F0
    static void ovrAvatar_SetActionUnitOnsetSpeed(::System::IntPtr avatar, float onsetSpeed);
    // static public System.Void ovrAvatar_SetActionUnitFalloffSpeed(System.IntPtr avatar, System.Single falloffSpeed)
    // Offset: 0x940280
    static void ovrAvatar_SetActionUnitFalloffSpeed(::System::IntPtr avatar, float falloffSpeed);
    // static public System.Void ovrAvatar_SetVisemeMultiplier(System.IntPtr avatar, System.Single visemeMultiplier)
    // Offset: 0x940310
    static void ovrAvatar_SetVisemeMultiplier(::System::IntPtr avatar, float visemeMultiplier);
    // static public ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(System.IntPtr renderPart, System.UInt32 jointIndex)
    // Offset: 0x9403A0
    static ::GlobalNamespace::ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(::System::IntPtr renderPart, uint jointIndex);
    // static public ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(System.IntPtr renderPart, System.UInt32 jointIndex)
    // Offset: 0x940438
    static ::GlobalNamespace::ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(::System::IntPtr renderPart, uint jointIndex);
    // static public System.UInt64 ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(System.IntPtr renderPart)
    // Offset: 0x9404D0
    static uint64_t ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(::System::IntPtr renderPart);
    // static public System.UInt64 ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(System.IntPtr renderPart)
    // Offset: 0x940550
    static uint64_t ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(::System::IntPtr renderPart);
    // static public ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(System.IntPtr renderPart)
    // Offset: 0x9405D0
    static ::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(::System::IntPtr renderPart);
    // static private System.IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(System.IntPtr renderPart)
    // Offset: 0x940724
    static ::System::IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(::System::IntPtr renderPart);
    // static public ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(System.IntPtr renderPart)
    // Offset: 0x9407A4
    static ::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(::System::IntPtr renderPart);
    // static private System.IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(System.IntPtr renderPart)
    // Offset: 0x9408F8
    static ::System::IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(::System::IntPtr renderPart);
    // static public System.Void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(System.IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
    // Offset: 0x940978
    static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(::System::IntPtr renderPart, ByRef<::GlobalNamespace::ovrAvatarBlendShapeParams> blendParams);
    // static private System.IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(System.IntPtr renderPart)
    // Offset: 0x940AB4
    static ::System::IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(::System::IntPtr renderPart);
    // static public ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(System.IntPtr renderPart)
    // Offset: 0x940B34
    static ::GlobalNamespace::ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(::System::IntPtr renderPart);
    // static public ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(System.IntPtr renderPart)
    // Offset: 0x940D08
    static ::ArrayW<::GlobalNamespace::ovrAvatarPBSMaterialState> ovrAvatar_GetBodyPBSMaterialStates(::System::IntPtr renderPart);
    // static private System.IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(System.IntPtr avatar, System.IntPtr count)
    // Offset: 0x940FE8
    static ::System::IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(::System::IntPtr avatar, ::System::IntPtr count);
    // static private System.IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(System.IntPtr renderPart)
    // Offset: 0x940C88
    static ::System::IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(::System::IntPtr renderPart);
    // static public System.UInt32 ovrAvatar_GetReferencedAssetCount(System.IntPtr avatar)
    // Offset: 0x941078
    static uint ovrAvatar_GetReferencedAssetCount(::System::IntPtr avatar);
    // static public System.UInt64 ovrAvatar_GetReferencedAsset(System.IntPtr avatar, System.UInt32 index)
    // Offset: 0x9410F8
    static uint64_t ovrAvatar_GetReferencedAsset(::System::IntPtr avatar, uint index);
    // static public System.Void ovrAvatar_SetLeftHandGesture(System.IntPtr avatar, ovrAvatarHandGesture gesture)
    // Offset: 0x941188
    static void ovrAvatar_SetLeftHandGesture(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarHandGesture gesture);
    // static public System.Void ovrAvatar_SetRightHandGesture(System.IntPtr avatar, ovrAvatarHandGesture gesture)
    // Offset: 0x941218
    static void ovrAvatar_SetRightHandGesture(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarHandGesture gesture);
    // static public System.Void ovrAvatar_SetLeftHandCustomGesture(System.IntPtr avatar, System.UInt32 jointCount, in ovrAvatarTransform[] customJointTransforms)
    // Offset: 0x9412A8
    static void ovrAvatar_SetLeftHandCustomGesture(::System::IntPtr avatar, uint jointCount, ByRef<::ArrayW<::GlobalNamespace::ovrAvatarTransform>> customJointTransforms);
    // static public System.Void ovrAvatar_SetRightHandCustomGesture(System.IntPtr avatar, System.UInt32 jointCount, in ovrAvatarTransform[] customJointTransforms)
    // Offset: 0x941348
    static void ovrAvatar_SetRightHandCustomGesture(::System::IntPtr avatar, uint jointCount, ByRef<::ArrayW<::GlobalNamespace::ovrAvatarTransform>> customJointTransforms);
    // static public System.Void ovrAvatar_UpdatePoseFromPacket(System.IntPtr avatar, System.IntPtr packet, System.Single secondsFromStart)
    // Offset: 0x9413E8
    static void ovrAvatar_UpdatePoseFromPacket(::System::IntPtr avatar, ::System::IntPtr packet, float secondsFromStart);
    // static public System.Void ovrAvatarPacket_BeginRecording(System.IntPtr avatar)
    // Offset: 0x941488
    static void ovrAvatarPacket_BeginRecording(::System::IntPtr avatar);
    // static public System.IntPtr ovrAvatarPacket_EndRecording(System.IntPtr avatar)
    // Offset: 0x941508
    static ::System::IntPtr ovrAvatarPacket_EndRecording(::System::IntPtr avatar);
    // static public System.UInt32 ovrAvatarPacket_GetSize(System.IntPtr packet)
    // Offset: 0x941588
    static uint ovrAvatarPacket_GetSize(::System::IntPtr packet);
    // static public System.Single ovrAvatarPacket_GetDurationSeconds(System.IntPtr packet)
    // Offset: 0x941608
    static float ovrAvatarPacket_GetDurationSeconds(::System::IntPtr packet);
    // static public System.Void ovrAvatarPacket_Free(System.IntPtr packet)
    // Offset: 0x941688
    static void ovrAvatarPacket_Free(::System::IntPtr packet);
    // static public System.Boolean ovrAvatarPacket_Write(System.IntPtr packet, System.UInt32 bufferSize, out System.Byte[] buffer)
    // Offset: 0x941708
    static bool ovrAvatarPacket_Write(::System::IntPtr packet, uint bufferSize, ByRef<::ArrayW<uint8_t>> buffer);
    // static public System.IntPtr ovrAvatarPacket_Read(System.UInt32 bufferSize, in System.Byte[] buffer)
    // Offset: 0x941830
    static ::System::IntPtr ovrAvatarPacket_Read(uint bufferSize, ByRef<::ArrayW<uint8_t>> buffer);
    // static private System.Void ovrAvatar_SetInternalForceASTCTextures(System.Boolean value)
    // Offset: 0x9418C8
    static void ovrAvatar_SetInternalForceASTCTextures(bool value);
    // static public System.Void ovrAvatar_SetForceASTCTextures(System.Boolean value)
    // Offset: 0x941948
    static void ovrAvatar_SetForceASTCTextures(bool value);
    // static public System.Void ovrAvatar_OverrideExpressiveLogic(System.IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
    // Offset: 0x9419A8
    static void ovrAvatar_OverrideExpressiveLogic(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarBlendShapeParams blendParams);
    // static private System.Void ovrAvatar_OverrideExpressiveLogic_Native(System.IntPtr avatar, System.IntPtr state)
    // Offset: 0x941AF0
    static void ovrAvatar_OverrideExpressiveLogic_Native(::System::IntPtr avatar, ::System::IntPtr state);
    // static public System.Void ovrAvatar_SetVisemes(System.IntPtr avatar, ovrAvatarVisemes visemes)
    // Offset: 0x941B80
    static void ovrAvatar_SetVisemes(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarVisemes visemes);
    // static private System.Void ovrAvatar_SetVisemes_Native(System.IntPtr avatar, System.IntPtr visemes)
    // Offset: 0x941CD8
    static void ovrAvatar_SetVisemes_Native(::System::IntPtr avatar, ::System::IntPtr visemes);
    // static public System.Void ovrAvatar_UpdateWorldTransform(System.IntPtr avatar, ovrAvatarTransform transform)
    // Offset: 0x941D68
    static void ovrAvatar_UpdateWorldTransform(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarTransform transform);
    // static public System.Void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
    // Offset: 0x941E08
    static void ovrAvatar_UpdateGazeTargets(::GlobalNamespace::ovrAvatarGazeTargets targets);
    // static private System.Void ovrAvatar_UpdateGazeTargets_Native(System.IntPtr targets)
    // Offset: 0x9421D8
    static void ovrAvatar_UpdateGazeTargets_Native(::System::IntPtr targets);
    // static public System.Void ovrAvatar_RemoveGazeTargets(System.UInt32 targetCount, System.UInt32[] ids)
    // Offset: 0x942258
    static void ovrAvatar_RemoveGazeTargets(uint targetCount, ::ArrayW<uint> ids);
    // static public System.Void ovrAvatar_UpdateLights(ovrAvatarLights lights)
    // Offset: 0x9422F0
    static void ovrAvatar_UpdateLights(::GlobalNamespace::ovrAvatarLights lights);
    // static private System.Void ovrAvatar_UpdateLights_Native(System.IntPtr lights)
    // Offset: 0x942B50
    static void ovrAvatar_UpdateLights_Native(::System::IntPtr lights);
    // static public System.Void ovrAvatar_RemoveLights(System.UInt32 lightCount, System.UInt32[] ids)
    // Offset: 0x942BD0
    static void ovrAvatar_RemoveLights(uint lightCount, ::ArrayW<uint> ids);
    // static public System.Void LoggingCallback(System.IntPtr str)
    // Offset: 0x93BF9C
    static void LoggingCallback(::System::IntPtr str);
    // static public System.Void ovrAvatar_RegisterLoggingCallback(Oculus.Avatar.CAPI/Oculus.Avatar.LoggingDelegate callback)
    // Offset: 0x942C68
    static void ovrAvatar_RegisterLoggingCallback(::Oculus::Avatar::CAPI::LoggingDelegate* callback);
    // static public System.Void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level)
    // Offset: 0x942CEC
    static void ovrAvatar_SetLoggingLevel(::GlobalNamespace::ovrAvatarLogLevel level);
    // static public System.IntPtr ovrAvatar_GetDebugTransforms_Native(System.IntPtr count)
    // Offset: 0x942D6C
    static ::System::IntPtr ovrAvatar_GetDebugTransforms_Native(::System::IntPtr count);
    // static public System.IntPtr ovrAvatar_GetDebugLines_Native(System.IntPtr count)
    // Offset: 0x942DEC
    static ::System::IntPtr ovrAvatar_GetDebugLines_Native(::System::IntPtr count);
    // static public System.Void ovrAvatar_DrawDebugLines()
    // Offset: 0x942E6C
    static void ovrAvatar_DrawDebugLines();
    // static public System.Void ovrAvatar_SetDebugDrawContext(System.UInt32 context)
    // Offset: 0x943830
    static void ovrAvatar_SetDebugDrawContext(uint context);
    // static public System.Boolean SendEvent(System.String name, System.String param, System.String source)
    // Offset: 0x9438B0
    static bool SendEvent(::StringW name, ::StringW param, ::StringW source);
    // static private System.IntPtr _ovrp_GetVersion()
    // Offset: 0x943CD0
    static ::System::IntPtr _ovrp_GetVersion();
    // static public System.String ovrp_GetVersion()
    // Offset: 0x943C38
    static ::StringW ovrp_GetVersion();
  }; // Oculus.Avatar.CAPI
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Avatar::CAPI::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_InitializeAndroidUnity
// Il2CppName: ovrAvatar_InitializeAndroidUnity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&Oculus::Avatar::CAPI::ovrAvatar_InitializeAndroidUnity)> {
  static const MethodInfo* get() {
    static auto* appID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_InitializeAndroidUnity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appID});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Avatar::CAPI::Initialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::Shutdown
// Il2CppName: Shutdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Avatar::CAPI::Shutdown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "Shutdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_Shutdown
// Il2CppName: ovrAvatar_Shutdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Avatar::CAPI::ovrAvatar_Shutdown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_Shutdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarMessage_Pop
// Il2CppName: ovrAvatarMessage_Pop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Avatar::CAPI::ovrAvatarMessage_Pop)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarMessage_Pop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarMessage_GetType
// Il2CppName: ovrAvatarMessage_GetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarMessageType (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarMessage_GetType)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarMessage_GetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarMessage_GetAvatarSpecification
// Il2CppName: ovrAvatarMessage_GetAvatarSpecification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarMessage_AvatarSpecification (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarMessage_GetAvatarSpecification)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarMessage_GetAvatarSpecification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarMessage_GetAvatarSpecification_Native
// Il2CppName: ovrAvatarMessage_GetAvatarSpecification_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarMessage_GetAvatarSpecification_Native)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarMessage_GetAvatarSpecification_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarMessage_GetAssetLoaded
// Il2CppName: ovrAvatarMessage_GetAssetLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarMessage_AssetLoaded (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarMessage_GetAssetLoaded)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarMessage_GetAssetLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarMessage_GetAssetLoaded_Native
// Il2CppName: ovrAvatarMessage_GetAssetLoaded_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarMessage_GetAssetLoaded_Native)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarMessage_GetAssetLoaded_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarMessage_Free
// Il2CppName: ovrAvatarMessage_Free
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarMessage_Free)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarMessage_Free", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_Create
// Il2CppName: ovrAvatarSpecificationRequest_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(uint64_t)>(&Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_Create)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSpecificationRequest_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_Destroy
// Il2CppName: ovrAvatarSpecificationRequest_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_Destroy)> {
  static const MethodInfo* get() {
    static auto* specificationRequest = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSpecificationRequest_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{specificationRequest});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetCombineMeshes
// Il2CppName: ovrAvatarSpecificationRequest_SetCombineMeshes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetCombineMeshes)> {
  static const MethodInfo* get() {
    static auto* specificationRequest = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* useCombinedMesh = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSpecificationRequest_SetCombineMeshes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{specificationRequest, useCombinedMesh});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetLookAndFeelVersion
// Il2CppName: ovrAvatarSpecificationRequest_SetLookAndFeelVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::GlobalNamespace::ovrAvatarLookAndFeelVersion)>(&Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetLookAndFeelVersion)> {
  static const MethodInfo* get() {
    static auto* specificationRequest = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* version = &::il2cpp_utils::GetClassFromName("", "ovrAvatarLookAndFeelVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSpecificationRequest_SetLookAndFeelVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{specificationRequest, version});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetLevelOfDetail
// Il2CppName: ovrAvatarSpecificationRequest_SetLevelOfDetail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::GlobalNamespace::ovrAvatarAssetLevelOfDetail)>(&Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetLevelOfDetail)> {
  static const MethodInfo* get() {
    static auto* specificationRequest = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* lod = &::il2cpp_utils::GetClassFromName("", "ovrAvatarAssetLevelOfDetail")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSpecificationRequest_SetLevelOfDetail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{specificationRequest, lod});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_RequestAvatarSpecification
// Il2CppName: ovrAvatar_RequestAvatarSpecification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Oculus::Avatar::CAPI::ovrAvatar_RequestAvatarSpecification)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_RequestAvatarSpecification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_RequestAvatarSpecificationFromSpecRequest
// Il2CppName: ovrAvatar_RequestAvatarSpecificationFromSpecRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatar_RequestAvatarSpecificationFromSpecRequest)> {
  static const MethodInfo* get() {
    static auto* specificationRequest = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_RequestAvatarSpecificationFromSpecRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{specificationRequest});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion
// Il2CppName: ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::GlobalNamespace::ovrAvatarLookAndFeelVersion)>(&Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion)> {
  static const MethodInfo* get() {
    static auto* specificationRequest = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* version = &::il2cpp_utils::GetClassFromName("", "ovrAvatarLookAndFeelVersion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{specificationRequest, version});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetExpressiveFlag
// Il2CppName: ovrAvatarSpecificationRequest_SetExpressiveFlag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetExpressiveFlag)> {
  static const MethodInfo* get() {
    static auto* specificationRequest = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* enable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSpecificationRequest_SetExpressiveFlag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{specificationRequest, enable});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_Create
// Il2CppName: ovrAvatar_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::GlobalNamespace::ovrAvatarCapabilities)>(&Oculus::Avatar::CAPI::ovrAvatar_Create)> {
  static const MethodInfo* get() {
    static auto* avatarSpecification = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* capabilities = &::il2cpp_utils::GetClassFromName("", "ovrAvatarCapabilities")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatarSpecification, capabilities});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_Destroy
// Il2CppName: ovrAvatar_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatar_Destroy)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_UpdateBody
// Il2CppName: ovrAvatarPose_UpdateBody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::GlobalNamespace::ovrAvatarTransform)>(&Oculus::Avatar::CAPI::ovrAvatarPose_UpdateBody)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* headPose = &::il2cpp_utils::GetClassFromName("", "ovrAvatarTransform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_UpdateBody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, headPose});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_UpdateVoiceVisualization
// Il2CppName: ovrAvatarPose_UpdateVoiceVisualization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::ArrayW<float>)>(&Oculus::Avatar::CAPI::ovrAvatarPose_UpdateVoiceVisualization)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* pcmData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_UpdateVoiceVisualization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, pcmData});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_UpdateVoiceVisualization_Native
// Il2CppName: ovrAvatarPose_UpdateVoiceVisualization_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint, ByRef<::ArrayW<float>>)>(&Oculus::Avatar::CAPI::ovrAvatarPose_UpdateVoiceVisualization_Native)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* pcmDataSize = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* pcmData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_UpdateVoiceVisualization_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, pcmDataSize, pcmData});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_UpdateHands
// Il2CppName: ovrAvatarPose_UpdateHands
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::GlobalNamespace::ovrAvatarHandInputState, ::GlobalNamespace::ovrAvatarHandInputState)>(&Oculus::Avatar::CAPI::ovrAvatarPose_UpdateHands)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* inputStateLeft = &::il2cpp_utils::GetClassFromName("", "ovrAvatarHandInputState")->byval_arg;
    static auto* inputStateRight = &::il2cpp_utils::GetClassFromName("", "ovrAvatarHandInputState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_UpdateHands", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, inputStateLeft, inputStateRight});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_UpdateHandsWithType
// Il2CppName: ovrAvatarPose_UpdateHandsWithType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::GlobalNamespace::ovrAvatarHandInputState, ::GlobalNamespace::ovrAvatarHandInputState, ::GlobalNamespace::ovrAvatarControllerType)>(&Oculus::Avatar::CAPI::ovrAvatarPose_UpdateHandsWithType)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* inputStateLeft = &::il2cpp_utils::GetClassFromName("", "ovrAvatarHandInputState")->byval_arg;
    static auto* inputStateRight = &::il2cpp_utils::GetClassFromName("", "ovrAvatarHandInputState")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("", "ovrAvatarControllerType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_UpdateHandsWithType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, inputStateLeft, inputStateRight, type});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_Finalize
// Il2CppName: ovrAvatarPose_Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, float)>(&Oculus::Avatar::CAPI::ovrAvatarPose_Finalize)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* elapsedSeconds = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, elapsedSeconds});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_SetLeftControllerVisibility
// Il2CppName: ovrAvatar_SetLeftControllerVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Avatar::CAPI::ovrAvatar_SetLeftControllerVisibility)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* show = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_SetLeftControllerVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, show});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_SetRightControllerVisibility
// Il2CppName: ovrAvatar_SetRightControllerVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Avatar::CAPI::ovrAvatar_SetRightControllerVisibility)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* show = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_SetRightControllerVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, show});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandVisibility
// Il2CppName: ovrAvatar_SetLeftHandVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandVisibility)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* show = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_SetLeftHandVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, show});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_SetRightHandVisibility
// Il2CppName: ovrAvatar_SetRightHandVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Avatar::CAPI::ovrAvatar_SetRightHandVisibility)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* show = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_SetRightHandVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, show});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarComponent_Count
// Il2CppName: ovrAvatarComponent_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarComponent_Count)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarComponent_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarComponent_Get
// Il2CppName: ovrAvatarComponent_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint, bool, ByRef<::GlobalNamespace::ovrAvatarComponent>)>(&Oculus::Avatar::CAPI::ovrAvatarComponent_Get)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* includeName = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("", "ovrAvatarComponent")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarComponent_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, index, includeName, component});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarComponent_Get
// Il2CppName: ovrAvatarComponent_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool, ByRef<::GlobalNamespace::ovrAvatarComponent>)>(&Oculus::Avatar::CAPI::ovrAvatarComponent_Get)> {
  static const MethodInfo* get() {
    static auto* componentPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* includeName = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("", "ovrAvatarComponent")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarComponent_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{componentPtr, includeName, component});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarComponent_Get_Native
// Il2CppName: ovrAvatarComponent_Get_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, uint)>(&Oculus::Avatar::CAPI::ovrAvatarComponent_Get_Native)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarComponent_Get_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, index});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_GetBaseComponent
// Il2CppName: ovrAvatarPose_GetBaseComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr, ByRef<::GlobalNamespace::ovrAvatarBaseComponent>)>(&Oculus::Avatar::CAPI::ovrAvatarPose_GetBaseComponent)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("", "ovrAvatarBaseComponent")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_GetBaseComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, component});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_GetBaseComponent_Native
// Il2CppName: ovrAvatarPose_GetBaseComponent_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarPose_GetBaseComponent_Native)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_GetBaseComponent_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::MarshalRenderComponent
// Il2CppName: MarshalRenderComponent
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_GetBodyComponent
// Il2CppName: ovrAvatarPose_GetBodyComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr, ByRef<::GlobalNamespace::ovrAvatarBodyComponent>)>(&Oculus::Avatar::CAPI::ovrAvatarPose_GetBodyComponent)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("", "ovrAvatarBodyComponent")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_GetBodyComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, component});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_GetBodyComponent_Native
// Il2CppName: ovrAvatarPose_GetBodyComponent_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarPose_GetBodyComponent_Native)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_GetBodyComponent_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftControllerComponent
// Il2CppName: ovrAvatarPose_GetLeftControllerComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr, ByRef<::GlobalNamespace::ovrAvatarControllerComponent>)>(&Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftControllerComponent)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("", "ovrAvatarControllerComponent")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_GetLeftControllerComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, component});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftControllerComponent_Native
// Il2CppName: ovrAvatarPose_GetLeftControllerComponent_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftControllerComponent_Native)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_GetLeftControllerComponent_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_GetRightControllerComponent
// Il2CppName: ovrAvatarPose_GetRightControllerComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr, ByRef<::GlobalNamespace::ovrAvatarControllerComponent>)>(&Oculus::Avatar::CAPI::ovrAvatarPose_GetRightControllerComponent)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("", "ovrAvatarControllerComponent")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_GetRightControllerComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, component});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_GetRightControllerComponent_Native
// Il2CppName: ovrAvatarPose_GetRightControllerComponent_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarPose_GetRightControllerComponent_Native)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_GetRightControllerComponent_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftHandComponent
// Il2CppName: ovrAvatarPose_GetLeftHandComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr, ByRef<::GlobalNamespace::ovrAvatarHandComponent>)>(&Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftHandComponent)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("", "ovrAvatarHandComponent")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_GetLeftHandComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, component});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftHandComponent_Native
// Il2CppName: ovrAvatarPose_GetLeftHandComponent_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftHandComponent_Native)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_GetLeftHandComponent_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_GetRightHandComponent
// Il2CppName: ovrAvatarPose_GetRightHandComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr, ByRef<::GlobalNamespace::ovrAvatarHandComponent>)>(&Oculus::Avatar::CAPI::ovrAvatarPose_GetRightHandComponent)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("", "ovrAvatarHandComponent")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_GetRightHandComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, component});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPose_GetRightHandComponent_Native
// Il2CppName: ovrAvatarPose_GetRightHandComponent_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarPose_GetRightHandComponent_Native)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPose_GetRightHandComponent_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_BeginLoading
// Il2CppName: ovrAvatarAsset_BeginLoading
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_BeginLoading)> {
  static const MethodInfo* get() {
    static auto* assetID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_BeginLoading", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetID});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_BeginLoadingLOD
// Il2CppName: ovrAvatarAsset_BeginLoadingLOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::GlobalNamespace::ovrAvatarAssetLevelOfDetail)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_BeginLoadingLOD)> {
  static const MethodInfo* get() {
    static auto* assetId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* lod = &::il2cpp_utils::GetClassFromName("", "ovrAvatarAssetLevelOfDetail")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_BeginLoadingLOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetId, lod});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_GetType
// Il2CppName: ovrAvatarAsset_GetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarAssetType (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_GetType)> {
  static const MethodInfo* get() {
    static auto* assetHandle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_GetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetHandle});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshData
// Il2CppName: ovrAvatarAsset_GetMeshData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarMeshAssetData (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshData)> {
  static const MethodInfo* get() {
    static auto* assetPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_GetMeshData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetPtr});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshData
// Il2CppName: ovrAvatarAsset_GetCombinedMeshData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarMeshAssetDataV2 (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshData)> {
  static const MethodInfo* get() {
    static auto* assetPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_GetCombinedMeshData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetPtr});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshData_Native
// Il2CppName: ovrAvatarAsset_GetCombinedMeshData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshData_Native)> {
  static const MethodInfo* get() {
    static auto* assetPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_GetCombinedMeshData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetPtr});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshData_Native
// Il2CppName: ovrAvatarAsset_GetMeshData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshData_Native)> {
  static const MethodInfo* get() {
    static auto* assetPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_GetMeshData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetPtr});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeCount
// Il2CppName: ovrAvatarAsset_GetMeshBlendShapeCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeCount)> {
  static const MethodInfo* get() {
    static auto* assetPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_GetMeshBlendShapeCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetPtr});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeName
// Il2CppName: ovrAvatarAsset_GetMeshBlendShapeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, uint)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeName)> {
  static const MethodInfo* get() {
    static auto* assetPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_GetMeshBlendShapeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetPtr, index});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_GetSubmeshCount
// Il2CppName: ovrAvatarAsset_GetSubmeshCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_GetSubmeshCount)> {
  static const MethodInfo* get() {
    static auto* assetPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_GetSubmeshCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetPtr});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_GetSubmeshLastIndex
// Il2CppName: ovrAvatarAsset_GetSubmeshLastIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr, uint)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_GetSubmeshLastIndex)> {
  static const MethodInfo* get() {
    static auto* assetPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_GetSubmeshLastIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetPtr, index});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeVertices
// Il2CppName: ovrAvatarAsset_GetMeshBlendShapeVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeVertices)> {
  static const MethodInfo* get() {
    static auto* assetPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_GetMeshBlendShapeVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetPtr});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_GetAvatar
// Il2CppName: ovrAvatarAsset_GetAvatar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_GetAvatar)> {
  static const MethodInfo* get() {
    static auto* assetHandle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_GetAvatar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetHandle});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshIDs
// Il2CppName: ovrAvatarAsset_GetCombinedMeshIDs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint64_t> (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshIDs)> {
  static const MethodInfo* get() {
    static auto* assetHandle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_GetCombinedMeshIDs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetHandle});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshIDs_Native
// Il2CppName: ovrAvatarAsset_GetCombinedMeshIDs_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshIDs_Native)> {
  static const MethodInfo* get() {
    static auto* assetHandle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_GetCombinedMeshIDs_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetHandle, count});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_GetCombinedMeshAlphaData
// Il2CppName: ovrAvatar_GetCombinedMeshAlphaData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ByRef<uint64_t>, ByRef<::UnityEngine::Vector4>)>(&Oculus::Avatar::CAPI::ovrAvatar_GetCombinedMeshAlphaData)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* textureID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_GetCombinedMeshAlphaData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, textureID, offset});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_GetCombinedMeshAlphaData_Native
// Il2CppName: ovrAvatar_GetCombinedMeshAlphaData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::IntPtr, ::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatar_GetCombinedMeshAlphaData_Native)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* textureIDPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* offsetPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_GetCombinedMeshAlphaData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, textureIDPtr, offsetPtr});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_GetTextureData
// Il2CppName: ovrAvatarAsset_GetTextureData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarTextureAssetData (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_GetTextureData)> {
  static const MethodInfo* get() {
    static auto* assetPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_GetTextureData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetPtr});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_GetTextureData_Native
// Il2CppName: ovrAvatarAsset_GetTextureData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_GetTextureData_Native)> {
  static const MethodInfo* get() {
    static auto* assetPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_GetTextureData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetPtr});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_GetMaterialData_Native
// Il2CppName: ovrAvatarAsset_GetMaterialData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_GetMaterialData_Native)> {
  static const MethodInfo* get() {
    static auto* assetPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_GetMaterialData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetPtr});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarAsset_GetMaterialState
// Il2CppName: ovrAvatarAsset_GetMaterialState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarMaterialState (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarAsset_GetMaterialState)> {
  static const MethodInfo* get() {
    static auto* assetPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarAsset_GetMaterialState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetPtr});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetType
// Il2CppName: ovrAvatarRenderPart_GetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarRenderPartType (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetType)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarRenderPart_GetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRender
// Il2CppName: ovrAvatarRenderPart_GetSkinnedMeshRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRender (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRender)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarRenderPart_GetSkinnedMeshRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRender_Native
// Il2CppName: ovrAvatarRenderPart_GetSkinnedMeshRender_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRender_Native)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarRenderPart_GetSkinnedMeshRender_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetTransform
// Il2CppName: ovrAvatarSkinnedMeshRender_GetTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarTransform (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetTransform)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRender_GetTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetTransform
// Il2CppName: ovrAvatarSkinnedMeshRenderPBS_GetTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarTransform (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetTransform)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRenderPBS_GetTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetTransform
// Il2CppName: ovrAvatarSkinnedMeshRenderPBSV2_GetTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarTransform (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetTransform)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRenderPBSV2_GetTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetVisibilityMask
// Il2CppName: ovrAvatarSkinnedMeshRender_GetVisibilityMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarVisibilityFlags (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetVisibilityMask)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRender_GetVisibilityMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_MaterialStateChanged
// Il2CppName: ovrAvatarSkinnedMeshRender_MaterialStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_MaterialStateChanged)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRender_MaterialStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged
// Il2CppName: ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask
// Il2CppName: ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarVisibilityFlags (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask
// Il2CppName: ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarVisibilityFlags (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetMaterialState
// Il2CppName: ovrAvatarSkinnedMeshRender_GetMaterialState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarMaterialState (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetMaterialState)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRender_GetMaterialState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState
// Il2CppName: ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarPBSMaterialState (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_GetExpressiveParameters
// Il2CppName: ovrAvatar_GetExpressiveParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarExpressiveParameters (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatar_GetExpressiveParameters)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_GetExpressiveParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetDirtyJoints
// Il2CppName: ovrAvatarSkinnedMeshRender_GetDirtyJoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetDirtyJoints)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRender_GetDirtyJoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints
// Il2CppName: ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints
// Il2CppName: ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetJointTransform
// Il2CppName: ovrAvatarSkinnedMeshRender_GetJointTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarTransform (*)(::System::IntPtr, uint)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetJointTransform)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* jointIndex = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRender_GetJointTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart, jointIndex});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_SetActionUnitOnsetSpeed
// Il2CppName: ovrAvatar_SetActionUnitOnsetSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, float)>(&Oculus::Avatar::CAPI::ovrAvatar_SetActionUnitOnsetSpeed)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* onsetSpeed = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_SetActionUnitOnsetSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, onsetSpeed});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_SetActionUnitFalloffSpeed
// Il2CppName: ovrAvatar_SetActionUnitFalloffSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, float)>(&Oculus::Avatar::CAPI::ovrAvatar_SetActionUnitFalloffSpeed)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* falloffSpeed = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_SetActionUnitFalloffSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, falloffSpeed});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_SetVisemeMultiplier
// Il2CppName: ovrAvatar_SetVisemeMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, float)>(&Oculus::Avatar::CAPI::ovrAvatar_SetVisemeMultiplier)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* visemeMultiplier = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_SetVisemeMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, visemeMultiplier});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetJointTransform
// Il2CppName: ovrAvatarSkinnedMeshRenderPBS_GetJointTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarTransform (*)(::System::IntPtr, uint)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetJointTransform)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* jointIndex = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRenderPBS_GetJointTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart, jointIndex});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform
// Il2CppName: ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarTransform (*)(::System::IntPtr, uint)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* jointIndex = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart, jointIndex});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID
// Il2CppName: ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID
// Il2CppName: ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBS
// Il2CppName: ovrAvatarRenderPart_GetSkinnedMeshRenderPBS
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBS)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarRenderPart_GetSkinnedMeshRenderPBS", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native
// Il2CppName: ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2
// Il2CppName: ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native
// Il2CppName: ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetBlendShapeParams
// Il2CppName: ovrAvatarSkinnedMeshRender_GetBlendShapeParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ByRef<::GlobalNamespace::ovrAvatarBlendShapeParams>)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetBlendShapeParams)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* blendParams = &::il2cpp_utils::GetClassFromName("", "ovrAvatarBlendShapeParams")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRender_GetBlendShapeParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart, blendParams});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native
// Il2CppName: ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetProjectorRender
// Il2CppName: ovrAvatarRenderPart_GetProjectorRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ovrAvatarRenderPart_ProjectorRender (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetProjectorRender)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarRenderPart_GetProjectorRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_GetBodyPBSMaterialStates
// Il2CppName: ovrAvatar_GetBodyPBSMaterialStates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::GlobalNamespace::ovrAvatarPBSMaterialState> (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatar_GetBodyPBSMaterialStates)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_GetBodyPBSMaterialStates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_GetBodyPBSMaterialStates_Native
// Il2CppName: ovrAvatar_GetBodyPBSMaterialStates_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatar_GetBodyPBSMaterialStates_Native)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_GetBodyPBSMaterialStates_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, count});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetProjectorRender_Native
// Il2CppName: ovrAvatarRenderPart_GetProjectorRender_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetProjectorRender_Native)> {
  static const MethodInfo* get() {
    static auto* renderPart = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarRenderPart_GetProjectorRender_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderPart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_GetReferencedAssetCount
// Il2CppName: ovrAvatar_GetReferencedAssetCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatar_GetReferencedAssetCount)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_GetReferencedAssetCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_GetReferencedAsset
// Il2CppName: ovrAvatar_GetReferencedAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, uint)>(&Oculus::Avatar::CAPI::ovrAvatar_GetReferencedAsset)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_GetReferencedAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, index});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandGesture
// Il2CppName: ovrAvatar_SetLeftHandGesture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::GlobalNamespace::ovrAvatarHandGesture)>(&Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandGesture)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* gesture = &::il2cpp_utils::GetClassFromName("", "ovrAvatarHandGesture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_SetLeftHandGesture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, gesture});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_SetRightHandGesture
// Il2CppName: ovrAvatar_SetRightHandGesture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::GlobalNamespace::ovrAvatarHandGesture)>(&Oculus::Avatar::CAPI::ovrAvatar_SetRightHandGesture)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* gesture = &::il2cpp_utils::GetClassFromName("", "ovrAvatarHandGesture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_SetRightHandGesture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, gesture});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandCustomGesture
// Il2CppName: ovrAvatar_SetLeftHandCustomGesture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint, ByRef<::ArrayW<::GlobalNamespace::ovrAvatarTransform>>)>(&Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandCustomGesture)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* jointCount = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* customJointTransforms = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("", "ovrAvatarTransform"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_SetLeftHandCustomGesture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, jointCount, customJointTransforms});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_SetRightHandCustomGesture
// Il2CppName: ovrAvatar_SetRightHandCustomGesture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint, ByRef<::ArrayW<::GlobalNamespace::ovrAvatarTransform>>)>(&Oculus::Avatar::CAPI::ovrAvatar_SetRightHandCustomGesture)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* jointCount = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* customJointTransforms = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("", "ovrAvatarTransform"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_SetRightHandCustomGesture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, jointCount, customJointTransforms});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_UpdatePoseFromPacket
// Il2CppName: ovrAvatar_UpdatePoseFromPacket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr, float)>(&Oculus::Avatar::CAPI::ovrAvatar_UpdatePoseFromPacket)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* packet = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* secondsFromStart = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_UpdatePoseFromPacket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, packet, secondsFromStart});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPacket_BeginRecording
// Il2CppName: ovrAvatarPacket_BeginRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarPacket_BeginRecording)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPacket_BeginRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPacket_EndRecording
// Il2CppName: ovrAvatarPacket_EndRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarPacket_EndRecording)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPacket_EndRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPacket_GetSize
// Il2CppName: ovrAvatarPacket_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarPacket_GetSize)> {
  static const MethodInfo* get() {
    static auto* packet = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPacket_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{packet});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPacket_GetDurationSeconds
// Il2CppName: ovrAvatarPacket_GetDurationSeconds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarPacket_GetDurationSeconds)> {
  static const MethodInfo* get() {
    static auto* packet = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPacket_GetDurationSeconds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{packet});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPacket_Free
// Il2CppName: ovrAvatarPacket_Free
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatarPacket_Free)> {
  static const MethodInfo* get() {
    static auto* packet = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPacket_Free", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{packet});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPacket_Write
// Il2CppName: ovrAvatarPacket_Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr, uint, ByRef<::ArrayW<uint8_t>>)>(&Oculus::Avatar::CAPI::ovrAvatarPacket_Write)> {
  static const MethodInfo* get() {
    static auto* packet = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* bufferSize = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPacket_Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{packet, bufferSize, buffer});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatarPacket_Read
// Il2CppName: ovrAvatarPacket_Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(uint, ByRef<::ArrayW<uint8_t>>)>(&Oculus::Avatar::CAPI::ovrAvatarPacket_Read)> {
  static const MethodInfo* get() {
    static auto* bufferSize = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatarPacket_Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bufferSize, buffer});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_SetInternalForceASTCTextures
// Il2CppName: ovrAvatar_SetInternalForceASTCTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Oculus::Avatar::CAPI::ovrAvatar_SetInternalForceASTCTextures)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_SetInternalForceASTCTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_SetForceASTCTextures
// Il2CppName: ovrAvatar_SetForceASTCTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Oculus::Avatar::CAPI::ovrAvatar_SetForceASTCTextures)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_SetForceASTCTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_OverrideExpressiveLogic
// Il2CppName: ovrAvatar_OverrideExpressiveLogic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::GlobalNamespace::ovrAvatarBlendShapeParams)>(&Oculus::Avatar::CAPI::ovrAvatar_OverrideExpressiveLogic)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* blendParams = &::il2cpp_utils::GetClassFromName("", "ovrAvatarBlendShapeParams")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_OverrideExpressiveLogic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, blendParams});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_OverrideExpressiveLogic_Native
// Il2CppName: ovrAvatar_OverrideExpressiveLogic_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatar_OverrideExpressiveLogic_Native)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_OverrideExpressiveLogic_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, state});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_SetVisemes
// Il2CppName: ovrAvatar_SetVisemes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::GlobalNamespace::ovrAvatarVisemes)>(&Oculus::Avatar::CAPI::ovrAvatar_SetVisemes)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* visemes = &::il2cpp_utils::GetClassFromName("", "ovrAvatarVisemes")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_SetVisemes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, visemes});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_SetVisemes_Native
// Il2CppName: ovrAvatar_SetVisemes_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatar_SetVisemes_Native)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* visemes = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_SetVisemes_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, visemes});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_UpdateWorldTransform
// Il2CppName: ovrAvatar_UpdateWorldTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::GlobalNamespace::ovrAvatarTransform)>(&Oculus::Avatar::CAPI::ovrAvatar_UpdateWorldTransform)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* transform = &::il2cpp_utils::GetClassFromName("", "ovrAvatarTransform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_UpdateWorldTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, transform});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_UpdateGazeTargets
// Il2CppName: ovrAvatar_UpdateGazeTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::ovrAvatarGazeTargets)>(&Oculus::Avatar::CAPI::ovrAvatar_UpdateGazeTargets)> {
  static const MethodInfo* get() {
    static auto* targets = &::il2cpp_utils::GetClassFromName("", "ovrAvatarGazeTargets")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_UpdateGazeTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targets});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_UpdateGazeTargets_Native
// Il2CppName: ovrAvatar_UpdateGazeTargets_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatar_UpdateGazeTargets_Native)> {
  static const MethodInfo* get() {
    static auto* targets = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_UpdateGazeTargets_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targets});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_RemoveGazeTargets
// Il2CppName: ovrAvatar_RemoveGazeTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint, ::ArrayW<uint>)>(&Oculus::Avatar::CAPI::ovrAvatar_RemoveGazeTargets)> {
  static const MethodInfo* get() {
    static auto* targetCount = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* ids = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_RemoveGazeTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetCount, ids});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_UpdateLights
// Il2CppName: ovrAvatar_UpdateLights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::ovrAvatarLights)>(&Oculus::Avatar::CAPI::ovrAvatar_UpdateLights)> {
  static const MethodInfo* get() {
    static auto* lights = &::il2cpp_utils::GetClassFromName("", "ovrAvatarLights")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_UpdateLights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lights});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_UpdateLights_Native
// Il2CppName: ovrAvatar_UpdateLights_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatar_UpdateLights_Native)> {
  static const MethodInfo* get() {
    static auto* lights = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_UpdateLights_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lights});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_RemoveLights
// Il2CppName: ovrAvatar_RemoveLights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint, ::ArrayW<uint>)>(&Oculus::Avatar::CAPI::ovrAvatar_RemoveLights)> {
  static const MethodInfo* get() {
    static auto* lightCount = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* ids = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_RemoveLights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lightCount, ids});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::LoggingCallback
// Il2CppName: LoggingCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::LoggingCallback)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "LoggingCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_RegisterLoggingCallback
// Il2CppName: ovrAvatar_RegisterLoggingCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Avatar::CAPI::LoggingDelegate*)>(&Oculus::Avatar::CAPI::ovrAvatar_RegisterLoggingCallback)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("Oculus.Avatar", "CAPI/LoggingDelegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_RegisterLoggingCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_SetLoggingLevel
// Il2CppName: ovrAvatar_SetLoggingLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::ovrAvatarLogLevel)>(&Oculus::Avatar::CAPI::ovrAvatar_SetLoggingLevel)> {
  static const MethodInfo* get() {
    static auto* level = &::il2cpp_utils::GetClassFromName("", "ovrAvatarLogLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_SetLoggingLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{level});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_GetDebugTransforms_Native
// Il2CppName: ovrAvatar_GetDebugTransforms_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatar_GetDebugTransforms_Native)> {
  static const MethodInfo* get() {
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_GetDebugTransforms_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{count});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_GetDebugLines_Native
// Il2CppName: ovrAvatar_GetDebugLines_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Avatar::CAPI::ovrAvatar_GetDebugLines_Native)> {
  static const MethodInfo* get() {
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_GetDebugLines_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{count});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_DrawDebugLines
// Il2CppName: ovrAvatar_DrawDebugLines
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Avatar::CAPI::ovrAvatar_DrawDebugLines)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_DrawDebugLines", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrAvatar_SetDebugDrawContext
// Il2CppName: ovrAvatar_SetDebugDrawContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint)>(&Oculus::Avatar::CAPI::ovrAvatar_SetDebugDrawContext)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrAvatar_SetDebugDrawContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::SendEvent
// Il2CppName: SendEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW, ::StringW)>(&Oculus::Avatar::CAPI::SendEvent)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* param = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "SendEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, param, source});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::_ovrp_GetVersion
// Il2CppName: _ovrp_GetVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Avatar::CAPI::_ovrp_GetVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "_ovrp_GetVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Avatar::CAPI::ovrp_GetVersion
// Il2CppName: ovrp_GetVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&Oculus::Avatar::CAPI::ovrp_GetVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Avatar::CAPI*), "ovrp_GetVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
