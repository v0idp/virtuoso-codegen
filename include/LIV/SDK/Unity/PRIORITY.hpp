// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: LIV.SDK.Unity
namespace LIV::SDK::Unity {
  // Forward declaring type: PRIORITY
  struct PRIORITY;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::LIV::SDK::Unity::PRIORITY, "LIV.SDK.Unity", "PRIORITY");
// Type namespace: LIV.SDK.Unity
namespace LIV::SDK::Unity {
  // Size: 0x1
  #pragma pack(push, 1)
  // Autogenerated type: LIV.SDK.Unity.PRIORITY
  // [TokenAttribute] Offset: FFFFFFFF
  struct PRIORITY/*, public ::System::Enum*/ {
    public:
    public:
    // public System.SByte value__
    // Size: 0x1
    // Offset: 0x0
    int8_t value;
    // Field size check
    static_assert(sizeof(int8_t) == 0x1);
    public:
    // Creating value type constructor for type: PRIORITY
    constexpr PRIORITY(int8_t value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int8_t
    constexpr operator int8_t() const noexcept {
      return value;
    }
    // static field const value: static public LIV.SDK.Unity.PRIORITY NONE
    static constexpr const int8_t NONE = 0;
    // Get static field: static public LIV.SDK.Unity.PRIORITY NONE
    static ::LIV::SDK::Unity::PRIORITY _get_NONE();
    // Set static field: static public LIV.SDK.Unity.PRIORITY NONE
    static void _set_NONE(::LIV::SDK::Unity::PRIORITY value);
    // static field const value: static public LIV.SDK.Unity.PRIORITY GAME
    static constexpr const int8_t GAME = 63;
    // Get static field: static public LIV.SDK.Unity.PRIORITY GAME
    static ::LIV::SDK::Unity::PRIORITY _get_GAME();
    // Set static field: static public LIV.SDK.Unity.PRIORITY GAME
    static void _set_GAME(::LIV::SDK::Unity::PRIORITY value);
    // Get instance field reference: public System.SByte value__
    int8_t& dyn_value__();
  }; // LIV.SDK.Unity.PRIORITY
  #pragma pack(pop)
  static check_size<sizeof(PRIORITY), 0 + sizeof(int8_t)> __LIV_SDK_Unity_PRIORITYSizeCheck;
  static_assert(sizeof(PRIORITY) == 0x1);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
