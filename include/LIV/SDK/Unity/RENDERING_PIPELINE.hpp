// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: LIV.SDK.Unity
namespace LIV::SDK::Unity {
  // Forward declaring type: RENDERING_PIPELINE
  struct RENDERING_PIPELINE;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::LIV::SDK::Unity::RENDERING_PIPELINE, "LIV.SDK.Unity", "RENDERING_PIPELINE");
// Type namespace: LIV.SDK.Unity
namespace LIV::SDK::Unity {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: LIV.SDK.Unity.RENDERING_PIPELINE
  // [TokenAttribute] Offset: FFFFFFFF
  struct RENDERING_PIPELINE/*, public ::System::Enum*/ {
    public:
    public:
    // public System.UInt32 value__
    // Size: 0x4
    // Offset: 0x0
    uint value;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    public:
    // Creating value type constructor for type: RENDERING_PIPELINE
    constexpr RENDERING_PIPELINE(uint value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint
    constexpr operator uint() const noexcept {
      return value;
    }
    // static field const value: static public LIV.SDK.Unity.RENDERING_PIPELINE UNDEFINED
    static constexpr const uint UNDEFINED = 0u;
    // Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNDEFINED
    static ::LIV::SDK::Unity::RENDERING_PIPELINE _get_UNDEFINED();
    // Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNDEFINED
    static void _set_UNDEFINED(::LIV::SDK::Unity::RENDERING_PIPELINE value);
    // static field const value: static public LIV.SDK.Unity.RENDERING_PIPELINE FORWARD
    static constexpr const uint FORWARD = 1u;
    // Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE FORWARD
    static ::LIV::SDK::Unity::RENDERING_PIPELINE _get_FORWARD();
    // Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE FORWARD
    static void _set_FORWARD(::LIV::SDK::Unity::RENDERING_PIPELINE value);
    // static field const value: static public LIV.SDK.Unity.RENDERING_PIPELINE DEFERRED
    static constexpr const uint DEFERRED = 2u;
    // Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE DEFERRED
    static ::LIV::SDK::Unity::RENDERING_PIPELINE _get_DEFERRED();
    // Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE DEFERRED
    static void _set_DEFERRED(::LIV::SDK::Unity::RENDERING_PIPELINE value);
    // static field const value: static public LIV.SDK.Unity.RENDERING_PIPELINE VERTEX_LIT
    static constexpr const uint VERTEX_LIT = 3u;
    // Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE VERTEX_LIT
    static ::LIV::SDK::Unity::RENDERING_PIPELINE _get_VERTEX_LIT();
    // Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE VERTEX_LIT
    static void _set_VERTEX_LIT(::LIV::SDK::Unity::RENDERING_PIPELINE value);
    // static field const value: static public LIV.SDK.Unity.RENDERING_PIPELINE UNIVERSAL
    static constexpr const uint UNIVERSAL = 4u;
    // Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNIVERSAL
    static ::LIV::SDK::Unity::RENDERING_PIPELINE _get_UNIVERSAL();
    // Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNIVERSAL
    static void _set_UNIVERSAL(::LIV::SDK::Unity::RENDERING_PIPELINE value);
    // static field const value: static public LIV.SDK.Unity.RENDERING_PIPELINE HIGH_DEFINITION
    static constexpr const uint HIGH_DEFINITION = 5u;
    // Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE HIGH_DEFINITION
    static ::LIV::SDK::Unity::RENDERING_PIPELINE _get_HIGH_DEFINITION();
    // Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE HIGH_DEFINITION
    static void _set_HIGH_DEFINITION(::LIV::SDK::Unity::RENDERING_PIPELINE value);
    // Get instance field reference: public System.UInt32 value__
    [[deprecated("Use field access instead!")]] uint& dyn_value__();
  }; // LIV.SDK.Unity.RENDERING_PIPELINE
  #pragma pack(pop)
  static check_size<sizeof(RENDERING_PIPELINE), 0 + sizeof(uint)> __LIV_SDK_Unity_RENDERING_PIPELINESizeCheck;
  static_assert(sizeof(RENDERING_PIPELINE) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
