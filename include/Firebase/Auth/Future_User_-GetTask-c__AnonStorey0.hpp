// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Firebase.Auth.Future_User
#include "Firebase/Auth/Future_User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: TaskCompletionSource`1<TResult>
  template<typename TResult>
  class TaskCompletionSource_1;
}
// Forward declaring namespace: Firebase::Auth
namespace Firebase::Auth {
  // Forward declaring type: FirebaseUser
  class FirebaseUser;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Auth::Future_User::$GetTask$c__AnonStorey0);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Auth::Future_User::$GetTask$c__AnonStorey0*, "Firebase.Auth", "Future_User/<GetTask>c__AnonStorey0");
// Type namespace: Firebase.Auth
namespace Firebase::Auth {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Auth.Future_User/Firebase.Auth.<GetTask>c__AnonStorey0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class Future_User::$GetTask$c__AnonStorey0 : public ::Il2CppObject {
    public:
    public:
    // Firebase.Auth.Future_User fu
    // Size: 0x8
    // Offset: 0x10
    ::Firebase::Auth::Future_User* fu;
    // Field size check
    static_assert(sizeof(::Firebase::Auth::Future_User*) == 0x8);
    // System.Threading.Tasks.TaskCompletionSource`1<Firebase.Auth.FirebaseUser> tcs
    // Size: 0x8
    // Offset: 0x18
    ::System::Threading::Tasks::TaskCompletionSource_1<::Firebase::Auth::FirebaseUser*>* tcs;
    // Field size check
    static_assert(sizeof(::System::Threading::Tasks::TaskCompletionSource_1<::Firebase::Auth::FirebaseUser*>*) == 0x8);
    public:
    // Get instance field reference: Firebase.Auth.Future_User fu
    [[deprecated]] ::Firebase::Auth::Future_User*& dyn_fu();
    // Get instance field reference: System.Threading.Tasks.TaskCompletionSource`1<Firebase.Auth.FirebaseUser> tcs
    [[deprecated]] ::System::Threading::Tasks::TaskCompletionSource_1<::Firebase::Auth::FirebaseUser*>*& dyn_tcs();
    // System.Void <>m__0()
    // Offset: 0x18B4934
    void $$m__0();
    // public System.Void .ctor()
    // Offset: 0x18B280C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Future_User::$GetTask$c__AnonStorey0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::$GetTask$c__AnonStorey0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Future_User::$GetTask$c__AnonStorey0*, creationType>()));
    }
  }; // Firebase.Auth.Future_User/Firebase.Auth.<GetTask>c__AnonStorey0
  #pragma pack(pop)
  static check_size<sizeof(Future_User::$GetTask$c__AnonStorey0), 24 + sizeof(::System::Threading::Tasks::TaskCompletionSource_1<::Firebase::Auth::FirebaseUser*>*)> __Firebase_Auth_Future_User_$GetTask$c__AnonStorey0SizeCheck;
  static_assert(sizeof(Future_User::$GetTask$c__AnonStorey0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Auth::Future_User::$GetTask$c__AnonStorey0::$$m__0
// Il2CppName: <>m__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Auth::Future_User::$GetTask$c__AnonStorey0::*)()>(&Firebase::Auth::Future_User::$GetTask$c__AnonStorey0::$$m__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Auth::Future_User::$GetTask$c__AnonStorey0*), "<>m__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Auth::Future_User::$GetTask$c__AnonStorey0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
