// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Firebase.Platform.IAppConfigExtensions
#include "Firebase/Platform/IAppConfigExtensions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Uri
  class Uri;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: Firebase.Platform.Default
namespace Firebase::Platform::Default {
  // Forward declaring type: AppConfigExtensions
  class AppConfigExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Platform::Default::AppConfigExtensions);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Platform::Default::AppConfigExtensions*, "Firebase.Platform.Default", "AppConfigExtensions");
// Type namespace: Firebase.Platform.Default
namespace Firebase::Platform::Default {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Platform.Default.AppConfigExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  class AppConfigExtensions : public ::Il2CppObject/*, public ::Firebase::Platform::IAppConfigExtensions*/ {
    public:
    // Creating interface conversion operator: operator ::Firebase::Platform::IAppConfigExtensions
    operator ::Firebase::Platform::IAppConfigExtensions() noexcept {
      return *reinterpret_cast<::Firebase::Platform::IAppConfigExtensions*>(this);
    }
    // Get static field: static private readonly System.Uri DefaultUpdateUrl
    static ::System::Uri* _get_DefaultUpdateUrl();
    // Set static field: static private readonly System.Uri DefaultUpdateUrl
    static void _set_DefaultUpdateUrl(::System::Uri* value);
    // Get static field: static private readonly System.String Default
    static ::StringW _get_Default();
    // Set static field: static private readonly System.String Default
    static void _set_Default(::StringW value);
    // Get static field: static private readonly System.Object Sync
    static ::Il2CppObject* _get_Sync();
    // Set static field: static private readonly System.Object Sync
    static void _set_Sync(::Il2CppObject* value);
    // Get static field: static private Firebase.Platform.Default.AppConfigExtensions _instance
    static ::Firebase::Platform::Default::AppConfigExtensions* _get__instance();
    // Set static field: static private Firebase.Platform.Default.AppConfigExtensions _instance
    static void _set__instance(::Firebase::Platform::Default::AppConfigExtensions* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.Dictionary`2<System.String,System.String>> SStringState
    static ::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* _get_SStringState();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.Dictionary`2<System.String,System.String>> SStringState
    static void _set_SStringState(::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* value);
    // static public Firebase.Platform.IAppConfigExtensions get_Instance()
    // Offset: 0x18C72C0
    static ::Firebase::Platform::IAppConfigExtensions* get_Instance();
    // static private System.Void .cctor()
    // Offset: 0x18C7324
    static void _cctor();
    // protected System.Void .ctor()
    // Offset: 0x18C72B8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AppConfigExtensions* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AppConfigExtensions*, creationType>()));
    }
  }; // Firebase.Platform.Default.AppConfigExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Platform::Default::AppConfigExtensions::get_Instance
// Il2CppName: get_Instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Platform::IAppConfigExtensions* (*)()>(&Firebase::Platform::Default::AppConfigExtensions::get_Instance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Platform::Default::AppConfigExtensions*), "get_Instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Platform::Default::AppConfigExtensions::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Firebase::Platform::Default::AppConfigExtensions::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Platform::Default::AppConfigExtensions*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Platform::Default::AppConfigExtensions::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
