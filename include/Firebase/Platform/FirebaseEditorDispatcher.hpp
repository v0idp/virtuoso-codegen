// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: FieldInfo
  class FieldInfo;
}
// Completed forward declares
// Type namespace: Firebase.Platform
namespace Firebase::Platform {
  // Forward declaring type: FirebaseEditorDispatcher
  class FirebaseEditorDispatcher;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Platform::FirebaseEditorDispatcher);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Platform::FirebaseEditorDispatcher*, "Firebase.Platform", "FirebaseEditorDispatcher");
// Type namespace: Firebase.Platform
namespace Firebase::Platform {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Platform.FirebaseEditorDispatcher
  // [TokenAttribute] Offset: FFFFFFFF
  class FirebaseEditorDispatcher : public ::Il2CppObject {
    public:
    // Get static field: static private System.Action <>f__mg$cache0
    static ::System::Action* _get_$$f__mg$cache0();
    // Set static field: static private System.Action <>f__mg$cache0
    static void _set_$$f__mg$cache0(::System::Action* value);
    // Get static field: static private System.Action <>f__mg$cache1
    static ::System::Action* _get_$$f__mg$cache1();
    // Set static field: static private System.Action <>f__mg$cache1
    static void _set_$$f__mg$cache1(::System::Action* value);
    // Get static field: static private System.Action <>f__mg$cache2
    static ::System::Action* _get_$$f__mg$cache2();
    // Set static field: static private System.Action <>f__mg$cache2
    static void _set_$$f__mg$cache2(::System::Action* value);
    // static private System.Type get_EditorApplicationType()
    // Offset: 0x18C80C8
    static ::System::Type* get_EditorApplicationType();
    // static public System.Boolean get_EditorIsPlaying()
    // Offset: 0x18C8168
    static bool get_EditorIsPlaying();
    // static public System.Boolean get_EditorIsPlayingOrWillChangePlaymode()
    // Offset: 0x18C8228
    static bool get_EditorIsPlayingOrWillChangePlaymode();
    // static public System.Void StartEditorUpdate()
    // Offset: 0x18C82E8
    static void StartEditorUpdate();
    // static public System.Void StopEditorUpdate()
    // Offset: 0x18C85E0
    static void StopEditorUpdate();
    // static public System.Void Update()
    // Offset: 0x18C86DC
    static void Update();
    // static public System.Void ListenToPlayState(System.Boolean start)
    // Offset: 0x18C8984
    static void ListenToPlayState(bool start);
    // static private System.Void PlayModeStateChanged()
    // Offset: 0x18C8C90
    static void PlayModeStateChanged();
    // static private System.Void PlayModeStateChangedWithArg(T t)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void PlayModeStateChangedWithArg(T t) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::PlayModeStateChangedWithArg");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "PlayModeStateChangedWithArg", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, t);
    }
    // static private System.Void AddRemoveCallbackToField(System.Reflection.FieldInfo eventField, System.Action callback, System.Object target, System.Boolean add, System.String errorMessage)
    // Offset: 0x18C83FC
    static void AddRemoveCallbackToField(::System::Reflection::FieldInfo* eventField, ::System::Action* callback, ::Il2CppObject* target, bool add, ::StringW errorMessage);
  }; // Firebase.Platform.FirebaseEditorDispatcher
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Platform::FirebaseEditorDispatcher::get_EditorApplicationType
// Il2CppName: get_EditorApplicationType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (*)()>(&Firebase::Platform::FirebaseEditorDispatcher::get_EditorApplicationType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Platform::FirebaseEditorDispatcher*), "get_EditorApplicationType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Platform::FirebaseEditorDispatcher::get_EditorIsPlaying
// Il2CppName: get_EditorIsPlaying
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Firebase::Platform::FirebaseEditorDispatcher::get_EditorIsPlaying)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Platform::FirebaseEditorDispatcher*), "get_EditorIsPlaying", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Platform::FirebaseEditorDispatcher::get_EditorIsPlayingOrWillChangePlaymode
// Il2CppName: get_EditorIsPlayingOrWillChangePlaymode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Firebase::Platform::FirebaseEditorDispatcher::get_EditorIsPlayingOrWillChangePlaymode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Platform::FirebaseEditorDispatcher*), "get_EditorIsPlayingOrWillChangePlaymode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Platform::FirebaseEditorDispatcher::StartEditorUpdate
// Il2CppName: StartEditorUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Firebase::Platform::FirebaseEditorDispatcher::StartEditorUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Platform::FirebaseEditorDispatcher*), "StartEditorUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Platform::FirebaseEditorDispatcher::StopEditorUpdate
// Il2CppName: StopEditorUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Firebase::Platform::FirebaseEditorDispatcher::StopEditorUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Platform::FirebaseEditorDispatcher*), "StopEditorUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Platform::FirebaseEditorDispatcher::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Firebase::Platform::FirebaseEditorDispatcher::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Platform::FirebaseEditorDispatcher*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Platform::FirebaseEditorDispatcher::ListenToPlayState
// Il2CppName: ListenToPlayState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Firebase::Platform::FirebaseEditorDispatcher::ListenToPlayState)> {
  static const MethodInfo* get() {
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Platform::FirebaseEditorDispatcher*), "ListenToPlayState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{start});
  }
};
// Writing MetadataGetter for method: Firebase::Platform::FirebaseEditorDispatcher::PlayModeStateChanged
// Il2CppName: PlayModeStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Firebase::Platform::FirebaseEditorDispatcher::PlayModeStateChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Platform::FirebaseEditorDispatcher*), "PlayModeStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Platform::FirebaseEditorDispatcher::PlayModeStateChangedWithArg
// Il2CppName: PlayModeStateChangedWithArg
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Firebase::Platform::FirebaseEditorDispatcher::AddRemoveCallbackToField
// Il2CppName: AddRemoveCallbackToField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Reflection::FieldInfo*, ::System::Action*, ::Il2CppObject*, bool, ::StringW)>(&Firebase::Platform::FirebaseEditorDispatcher::AddRemoveCallbackToField)> {
  static const MethodInfo* get() {
    static auto* eventField = &::il2cpp_utils::GetClassFromName("System.Reflection", "FieldInfo")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* add = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* errorMessage = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Platform::FirebaseEditorDispatcher*), "AddRemoveCallbackToField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventField, callback, target, add, errorMessage});
  }
};
