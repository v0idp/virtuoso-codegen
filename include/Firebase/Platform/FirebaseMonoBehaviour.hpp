// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Firebase::Platform
namespace Firebase::Platform {
  // Forward declaring type: FirebaseHandler
  class FirebaseHandler;
}
// Completed forward declares
// Type namespace: Firebase.Platform
namespace Firebase::Platform {
  // Forward declaring type: FirebaseMonoBehaviour
  class FirebaseMonoBehaviour;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Platform::FirebaseMonoBehaviour);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Platform::FirebaseMonoBehaviour*, "Firebase.Platform", "FirebaseMonoBehaviour");
// Type namespace: Firebase.Platform
namespace Firebase::Platform {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Platform.FirebaseMonoBehaviour
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: FFFFFFFF
  class FirebaseMonoBehaviour : public ::UnityEngine::MonoBehaviour {
    public:
    // private Firebase.Platform.FirebaseHandler GetFirebaseHandlerOrDestroyGameObject()
    // Offset: 0x18CA310
    ::Firebase::Platform::FirebaseHandler* GetFirebaseHandlerOrDestroyGameObject();
    // private System.Void OnEnable()
    // Offset: 0x18CA40C
    void OnEnable();
    // private System.Void Update()
    // Offset: 0x18CA410
    void Update();
    // private System.Void OnApplicationFocus(System.Boolean hasFocus)
    // Offset: 0x18CA498
    void OnApplicationFocus(bool hasFocus);
    // private System.Void OnDestroy()
    // Offset: 0x18CA4CC
    void OnDestroy();
    // public System.Void .ctor()
    // Offset: 0x18CA308
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FirebaseMonoBehaviour* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseMonoBehaviour::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FirebaseMonoBehaviour*, creationType>()));
    }
  }; // Firebase.Platform.FirebaseMonoBehaviour
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Platform::FirebaseMonoBehaviour::GetFirebaseHandlerOrDestroyGameObject
// Il2CppName: GetFirebaseHandlerOrDestroyGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Platform::FirebaseHandler* (Firebase::Platform::FirebaseMonoBehaviour::*)()>(&Firebase::Platform::FirebaseMonoBehaviour::GetFirebaseHandlerOrDestroyGameObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Platform::FirebaseMonoBehaviour*), "GetFirebaseHandlerOrDestroyGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Platform::FirebaseMonoBehaviour::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Platform::FirebaseMonoBehaviour::*)()>(&Firebase::Platform::FirebaseMonoBehaviour::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Platform::FirebaseMonoBehaviour*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Platform::FirebaseMonoBehaviour::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Platform::FirebaseMonoBehaviour::*)()>(&Firebase::Platform::FirebaseMonoBehaviour::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Platform::FirebaseMonoBehaviour*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Platform::FirebaseMonoBehaviour::OnApplicationFocus
// Il2CppName: OnApplicationFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Platform::FirebaseMonoBehaviour::*)(bool)>(&Firebase::Platform::FirebaseMonoBehaviour::OnApplicationFocus)> {
  static const MethodInfo* get() {
    static auto* hasFocus = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Platform::FirebaseMonoBehaviour*), "OnApplicationFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hasFocus});
  }
};
// Writing MetadataGetter for method: Firebase::Platform::FirebaseMonoBehaviour::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Platform::FirebaseMonoBehaviour::*)()>(&Firebase::Platform::FirebaseMonoBehaviour::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Platform::FirebaseMonoBehaviour*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Platform::FirebaseMonoBehaviour::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
