// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Firebase::Firestore
namespace Firebase::Firestore {
  // Forward declaring type: TimestampProxy
  class TimestampProxy;
  // Forward declaring type: SWIGTYPE_p_unsigned_char
  class SWIGTYPE_p_unsigned_char;
  // Forward declaring type: DocumentReferenceProxy
  class DocumentReferenceProxy;
  // Forward declaring type: GeoPointProxy
  class GeoPointProxy;
}
// Completed forward declares
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // Forward declaring type: FieldValueProxy
  class FieldValueProxy;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Firestore::FieldValueProxy);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Firestore::FieldValueProxy*, "Firebase.Firestore", "FieldValueProxy");
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Firestore.FieldValueProxy
  // [TokenAttribute] Offset: FFFFFFFF
  class FieldValueProxy : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    // Nested type: ::Firebase::Firestore::FieldValueProxy::Type
    struct Type;
    public:
    // private System.Runtime.InteropServices.HandleRef swigCPtr
    // Size: 0x10
    // Offset: 0x10
    ::System::Runtime::InteropServices::HandleRef swigCPtr;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::HandleRef) == 0x10);
    // protected System.Boolean swigCMemOwn
    // Size: 0x1
    // Offset: 0x20
    bool swigCMemOwn;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private System.Runtime.InteropServices.HandleRef swigCPtr
    [[deprecated]] ::System::Runtime::InteropServices::HandleRef& dyn_swigCPtr();
    // Get instance field reference: protected System.Boolean swigCMemOwn
    [[deprecated]] bool& dyn_swigCMemOwn();
    // System.Void .ctor(System.IntPtr cPtr, System.Boolean cMemoryOwn)
    // Offset: 0xD544BC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FieldValueProxy* New_ctor(::System::IntPtr cPtr, bool cMemoryOwn) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FieldValueProxy*, creationType>(cPtr, cMemoryOwn)));
    }
    // static System.Runtime.InteropServices.HandleRef getCPtr(Firebase.Firestore.FieldValueProxy obj)
    // Offset: 0xD56DE0
    static ::System::Runtime::InteropServices::HandleRef getCPtr(::Firebase::Firestore::FieldValueProxy* obj);
    // public System.Void Dispose()
    // Offset: 0xD5778C
    void Dispose();
    // static public Firebase.Firestore.FieldValueProxy Boolean(System.Boolean value)
    // Offset: 0xD4B140
    static ::Firebase::Firestore::FieldValueProxy* Boolean(bool value);
    // static public Firebase.Firestore.FieldValueProxy Integer(System.Int64 value)
    // Offset: 0xD4B49C
    static ::Firebase::Firestore::FieldValueProxy* Integer(int64_t value);
    // static public Firebase.Firestore.FieldValueProxy Double(System.Double value)
    // Offset: 0xD549E4
    static ::Firebase::Firestore::FieldValueProxy* Double(double value);
    // static public Firebase.Firestore.FieldValueProxy Timestamp(Firebase.Firestore.TimestampProxy value)
    // Offset: 0xD5128C
    static ::Firebase::Firestore::FieldValueProxy* Timestamp(::Firebase::Firestore::TimestampProxy* value);
    // static public Firebase.Firestore.FieldValueProxy String(System.String value)
    // Offset: 0xD57C10
    static ::Firebase::Firestore::FieldValueProxy* String(::StringW value);
    // static public Firebase.Firestore.FieldValueProxy Blob(Firebase.Firestore.SWIGTYPE_p_unsigned_char value, System.UInt32 size)
    // Offset: 0xD4E144
    static ::Firebase::Firestore::FieldValueProxy* Blob(::Firebase::Firestore::SWIGTYPE_p_unsigned_char* value, uint size);
    // static public Firebase.Firestore.FieldValueProxy Reference(Firebase.Firestore.DocumentReferenceProxy value)
    // Offset: 0xD5295C
    static ::Firebase::Firestore::FieldValueProxy* Reference(::Firebase::Firestore::DocumentReferenceProxy* value);
    // static public Firebase.Firestore.FieldValueProxy GeoPoint(Firebase.Firestore.GeoPointProxy value)
    // Offset: 0xD57E7C
    static ::Firebase::Firestore::FieldValueProxy* GeoPoint(::Firebase::Firestore::GeoPointProxy* value);
    // public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type type()
    // Offset: 0xD47760
    ::Firebase::Firestore::FieldValueProxy::Type type();
    // public System.Boolean is_null()
    // Offset: 0xD580C0
    bool is_null();
    // public System.Boolean is_map()
    // Offset: 0xD52278
    bool is_map();
    // public System.Boolean boolean_value()
    // Offset: 0xD4CB88
    bool boolean_value();
    // public System.Int64 integer_value()
    // Offset: 0xD4CEC0
    int64_t integer_value();
    // public System.Double double_value()
    // Offset: 0xD4CCF4
    double double_value();
    // public Firebase.Firestore.TimestampProxy timestamp_value()
    // Offset: 0xD4D0EC
    ::Firebase::Firestore::TimestampProxy* timestamp_value();
    // public System.String string_value()
    // Offset: 0xD4D050
    ::StringW string_value();
    // public Firebase.Firestore.SWIGTYPE_p_unsigned_char blob_value()
    // Offset: 0xD4DEE0
    ::Firebase::Firestore::SWIGTYPE_p_unsigned_char* blob_value();
    // public System.UInt32 blob_size()
    // Offset: 0xD4E058
    uint blob_size();
    // public Firebase.Firestore.DocumentReferenceProxy reference_value()
    // Offset: 0xD4CF5C
    ::Firebase::Firestore::DocumentReferenceProxy* reference_value();
    // public Firebase.Firestore.GeoPointProxy geo_point_value()
    // Offset: 0xD4CD98
    ::Firebase::Firestore::GeoPointProxy* geo_point_value();
    // public System.Boolean is_valid()
    // Offset: 0xD587D4
    bool is_valid();
    // static public Firebase.Firestore.FieldValueProxy Null()
    // Offset: 0xD588F8
    static ::Firebase::Firestore::FieldValueProxy* Null();
    // static public Firebase.Firestore.FieldValueProxy Delete()
    // Offset: 0xD57660
    static ::Firebase::Firestore::FieldValueProxy* Delete();
    // static public Firebase.Firestore.FieldValueProxy ServerTimestamp()
    // Offset: 0xD575A4
    static ::Firebase::Firestore::FieldValueProxy* ServerTimestamp();
    // static public Firebase.Firestore.FieldValueProxy IntegerIncrement(System.Int64 byValue)
    // Offset: 0xD57480
    static ::Firebase::Firestore::FieldValueProxy* IntegerIncrement(int64_t byValue);
    // protected override System.Void Finalize()
    // Offset: 0xD5771C
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // Firebase.Firestore.FieldValueProxy
  #pragma pack(pop)
  static check_size<sizeof(FieldValueProxy), 32 + sizeof(bool)> __Firebase_Firestore_FieldValueProxySizeCheck;
  static_assert(sizeof(FieldValueProxy) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::getCPtr
// Il2CppName: getCPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::InteropServices::HandleRef (*)(::Firebase::Firestore::FieldValueProxy*)>(&Firebase::Firestore::FieldValueProxy::getCPtr)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldValueProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "getCPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Firestore::FieldValueProxy::*)()>(&Firebase::Firestore::FieldValueProxy::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::Boolean
// Il2CppName: Boolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)(bool)>(&Firebase::Firestore::FieldValueProxy::Boolean)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "Boolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::Integer
// Il2CppName: Integer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)(int64_t)>(&Firebase::Firestore::FieldValueProxy::Integer)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "Integer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::Double
// Il2CppName: Double
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)(double)>(&Firebase::Firestore::FieldValueProxy::Double)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "Double", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::Timestamp
// Il2CppName: Timestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)(::Firebase::Firestore::TimestampProxy*)>(&Firebase::Firestore::FieldValueProxy::Timestamp)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "TimestampProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "Timestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::String
// Il2CppName: String
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)(::StringW)>(&Firebase::Firestore::FieldValueProxy::String)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "String", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::Blob
// Il2CppName: Blob
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)(::Firebase::Firestore::SWIGTYPE_p_unsigned_char*, uint)>(&Firebase::Firestore::FieldValueProxy::Blob)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "SWIGTYPE_p_unsigned_char")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "Blob", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, size});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::Reference
// Il2CppName: Reference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)(::Firebase::Firestore::DocumentReferenceProxy*)>(&Firebase::Firestore::FieldValueProxy::Reference)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DocumentReferenceProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "Reference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::GeoPoint
// Il2CppName: GeoPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)(::Firebase::Firestore::GeoPointProxy*)>(&Firebase::Firestore::FieldValueProxy::GeoPoint)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "GeoPointProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "GeoPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::type
// Il2CppName: type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy::Type (Firebase::Firestore::FieldValueProxy::*)()>(&Firebase::Firestore::FieldValueProxy::type)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::is_null
// Il2CppName: is_null
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Firebase::Firestore::FieldValueProxy::*)()>(&Firebase::Firestore::FieldValueProxy::is_null)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "is_null", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::is_map
// Il2CppName: is_map
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Firebase::Firestore::FieldValueProxy::*)()>(&Firebase::Firestore::FieldValueProxy::is_map)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "is_map", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::boolean_value
// Il2CppName: boolean_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Firebase::Firestore::FieldValueProxy::*)()>(&Firebase::Firestore::FieldValueProxy::boolean_value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "boolean_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::integer_value
// Il2CppName: integer_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (Firebase::Firestore::FieldValueProxy::*)()>(&Firebase::Firestore::FieldValueProxy::integer_value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "integer_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::double_value
// Il2CppName: double_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (Firebase::Firestore::FieldValueProxy::*)()>(&Firebase::Firestore::FieldValueProxy::double_value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "double_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::timestamp_value
// Il2CppName: timestamp_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::TimestampProxy* (Firebase::Firestore::FieldValueProxy::*)()>(&Firebase::Firestore::FieldValueProxy::timestamp_value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "timestamp_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::string_value
// Il2CppName: string_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Firebase::Firestore::FieldValueProxy::*)()>(&Firebase::Firestore::FieldValueProxy::string_value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "string_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::blob_value
// Il2CppName: blob_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::SWIGTYPE_p_unsigned_char* (Firebase::Firestore::FieldValueProxy::*)()>(&Firebase::Firestore::FieldValueProxy::blob_value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "blob_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::blob_size
// Il2CppName: blob_size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (Firebase::Firestore::FieldValueProxy::*)()>(&Firebase::Firestore::FieldValueProxy::blob_size)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "blob_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::reference_value
// Il2CppName: reference_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::DocumentReferenceProxy* (Firebase::Firestore::FieldValueProxy::*)()>(&Firebase::Firestore::FieldValueProxy::reference_value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "reference_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::geo_point_value
// Il2CppName: geo_point_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::GeoPointProxy* (Firebase::Firestore::FieldValueProxy::*)()>(&Firebase::Firestore::FieldValueProxy::geo_point_value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "geo_point_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::is_valid
// Il2CppName: is_valid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Firebase::Firestore::FieldValueProxy::*)()>(&Firebase::Firestore::FieldValueProxy::is_valid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "is_valid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::Null
// Il2CppName: Null
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)()>(&Firebase::Firestore::FieldValueProxy::Null)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "Null", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::Delete
// Il2CppName: Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)()>(&Firebase::Firestore::FieldValueProxy::Delete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::ServerTimestamp
// Il2CppName: ServerTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)()>(&Firebase::Firestore::FieldValueProxy::ServerTimestamp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "ServerTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::IntegerIncrement
// Il2CppName: IntegerIncrement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)(int64_t)>(&Firebase::Firestore::FieldValueProxy::IntegerIncrement)> {
  static const MethodInfo* get() {
    static auto* byValue = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "IntegerIncrement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{byValue});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValueProxy::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Firestore::FieldValueProxy::*)()>(&Firebase::Firestore::FieldValueProxy::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValueProxy*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
