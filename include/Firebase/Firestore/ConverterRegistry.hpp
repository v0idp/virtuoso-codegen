// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: Firebase::Firestore::Converters
namespace Firebase::Firestore::Converters {
  // Forward declaring type: IFirestoreInternalConverter
  class IFirestoreInternalConverter;
}
// Completed forward declares
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // Forward declaring type: ConverterRegistry
  class ConverterRegistry;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Firestore::ConverterRegistry);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Firestore::ConverterRegistry*, "Firebase.Firestore", "ConverterRegistry");
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Firestore.ConverterRegistry
  // [TokenAttribute] Offset: FFFFFFFF
  class ConverterRegistry : public ::Il2CppObject {
    public:
    public:
    // private readonly System.Collections.Generic.Dictionary`2<System.Type,Firebase.Firestore.Converters.IFirestoreInternalConverter> _converters
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>* converters;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>*
    constexpr operator ::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>*() const noexcept {
      return converters;
    }
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<System.Type,Firebase.Firestore.Converters.IFirestoreInternalConverter> _converters
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>*& dyn__converters();
    // System.Collections.Generic.IDictionary`2<System.Type,Firebase.Firestore.Converters.IFirestoreInternalConverter> ToConverterDictionary()
    // Offset: 0xD50F94
    ::System::Collections::Generic::IDictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>* ToConverterDictionary();
  }; // Firebase.Firestore.ConverterRegistry
  #pragma pack(pop)
  static check_size<sizeof(ConverterRegistry), 16 + sizeof(::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>*)> __Firebase_Firestore_ConverterRegistrySizeCheck;
  static_assert(sizeof(ConverterRegistry) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Firestore::ConverterRegistry::ToConverterDictionary
// Il2CppName: ToConverterDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IDictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>* (Firebase::Firestore::ConverterRegistry::*)()>(&Firebase::Firestore::ConverterRegistry::ToConverterDictionary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::ConverterRegistry*), "ToConverterDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
