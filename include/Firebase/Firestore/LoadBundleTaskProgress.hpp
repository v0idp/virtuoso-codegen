// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Firebase::Firestore
namespace Firebase::Firestore {
  // Skipping declaration: LoadBundleTaskState because it is already included!
  // Forward declaring type: LoadBundleTaskProgressProxy
  class LoadBundleTaskProgressProxy;
}
// Completed forward declares
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // Forward declaring type: LoadBundleTaskProgress
  class LoadBundleTaskProgress;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Firestore::LoadBundleTaskProgress);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Firestore::LoadBundleTaskProgress*, "Firebase.Firestore", "LoadBundleTaskProgress");
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Firestore.LoadBundleTaskProgress
  // [TokenAttribute] Offset: FFFFFFFF
  class LoadBundleTaskProgress : public ::System::EventArgs {
    public:
    // Nested type: ::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState
    struct LoadBundleTaskState;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState
    // [TokenAttribute] Offset: FFFFFFFF
    struct LoadBundleTaskState/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: LoadBundleTaskState
      constexpr LoadBundleTaskState(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState Error
      static constexpr const int Error = 0;
      // Get static field: static public Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState Error
      static ::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState _get_Error();
      // Set static field: static public Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState Error
      static void _set_Error(::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState value);
      // static field const value: static public Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState InProgress
      static constexpr const int InProgress = 1;
      // Get static field: static public Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState InProgress
      static ::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState _get_InProgress();
      // Set static field: static public Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState InProgress
      static void _set_InProgress(::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState value);
      // static field const value: static public Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState Success
      static constexpr const int Success = 2;
      // Get static field: static public Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState Success
      static ::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState _get_Success();
      // Set static field: static public Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState Success
      static void _set_Success(::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState
    #pragma pack(pop)
    static check_size<sizeof(LoadBundleTaskProgress::LoadBundleTaskState), 0 + sizeof(int)> __Firebase_Firestore_LoadBundleTaskProgress_LoadBundleTaskStateSizeCheck;
    static_assert(sizeof(LoadBundleTaskProgress::LoadBundleTaskState) == 0x4);
    public:
    // [DebuggerBrowsableAttribute] Offset: 0x6D83F8
    // private System.Int32 <DocumentsLoaded>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    int DocumentsLoaded;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [DebuggerBrowsableAttribute] Offset: 0x6D8434
    // private System.Int32 <TotalDocuments>k__BackingField
    // Size: 0x4
    // Offset: 0x14
    int TotalDocuments;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [DebuggerBrowsableAttribute] Offset: 0x6D8470
    // private System.Int64 <BytesLoaded>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    int64_t BytesLoaded;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // [DebuggerBrowsableAttribute] Offset: 0x6D84AC
    // private System.Int64 <TotalBytes>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    int64_t TotalBytes;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // [DebuggerBrowsableAttribute] Offset: 0x6D84E8
    // private Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState <State>k__BackingField
    // Size: 0x4
    // Offset: 0x28
    ::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState State;
    // Field size check
    static_assert(sizeof(::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState) == 0x4);
    public:
    // Get instance field reference: private System.Int32 <DocumentsLoaded>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$DocumentsLoaded$k__BackingField();
    // Get instance field reference: private System.Int32 <TotalDocuments>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$TotalDocuments$k__BackingField();
    // Get instance field reference: private System.Int64 <BytesLoaded>k__BackingField
    [[deprecated("Use field access instead!")]] int64_t& dyn_$BytesLoaded$k__BackingField();
    // Get instance field reference: private System.Int64 <TotalBytes>k__BackingField
    [[deprecated("Use field access instead!")]] int64_t& dyn_$TotalBytes$k__BackingField();
    // Get instance field reference: private Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState <State>k__BackingField
    [[deprecated("Use field access instead!")]] ::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState& dyn_$State$k__BackingField();
    // public System.Int32 get_DocumentsLoaded()
    // Offset: 0xD62804
    int get_DocumentsLoaded();
    // private System.Void set_DocumentsLoaded(System.Int32 value)
    // Offset: 0xD6280C
    void set_DocumentsLoaded(int value);
    // public System.Int32 get_TotalDocuments()
    // Offset: 0xD62814
    int get_TotalDocuments();
    // private System.Void set_TotalDocuments(System.Int32 value)
    // Offset: 0xD6281C
    void set_TotalDocuments(int value);
    // public System.Int64 get_BytesLoaded()
    // Offset: 0xD62824
    int64_t get_BytesLoaded();
    // private System.Void set_BytesLoaded(System.Int64 value)
    // Offset: 0xD6282C
    void set_BytesLoaded(int64_t value);
    // public System.Int64 get_TotalBytes()
    // Offset: 0xD62834
    int64_t get_TotalBytes();
    // private System.Void set_TotalBytes(System.Int64 value)
    // Offset: 0xD6283C
    void set_TotalBytes(int64_t value);
    // public Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState get_State()
    // Offset: 0xD62844
    ::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState get_State();
    // private System.Void set_State(Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState value)
    // Offset: 0xD6284C
    void set_State(::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState value);
    // System.Void .ctor(Firebase.Firestore.LoadBundleTaskProgressProxy proxy)
    // Offset: 0xD5A9B0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoadBundleTaskProgress* New_ctor(::Firebase::Firestore::LoadBundleTaskProgressProxy* proxy) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoadBundleTaskProgress*, creationType>(proxy)));
    }
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xD62854
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0xD6291C
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
  }; // Firebase.Firestore.LoadBundleTaskProgress
  #pragma pack(pop)
  static check_size<sizeof(LoadBundleTaskProgress), 40 + sizeof(::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState)> __Firebase_Firestore_LoadBundleTaskProgressSizeCheck;
  static_assert(sizeof(LoadBundleTaskProgress) == 0x2C);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState, "Firebase.Firestore", "LoadBundleTaskProgress/LoadBundleTaskState");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Firestore::LoadBundleTaskProgress::get_DocumentsLoaded
// Il2CppName: get_DocumentsLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Firebase::Firestore::LoadBundleTaskProgress::*)()>(&Firebase::Firestore::LoadBundleTaskProgress::get_DocumentsLoaded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::LoadBundleTaskProgress*), "get_DocumentsLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::LoadBundleTaskProgress::set_DocumentsLoaded
// Il2CppName: set_DocumentsLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Firestore::LoadBundleTaskProgress::*)(int)>(&Firebase::Firestore::LoadBundleTaskProgress::set_DocumentsLoaded)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::LoadBundleTaskProgress*), "set_DocumentsLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::LoadBundleTaskProgress::get_TotalDocuments
// Il2CppName: get_TotalDocuments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Firebase::Firestore::LoadBundleTaskProgress::*)()>(&Firebase::Firestore::LoadBundleTaskProgress::get_TotalDocuments)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::LoadBundleTaskProgress*), "get_TotalDocuments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::LoadBundleTaskProgress::set_TotalDocuments
// Il2CppName: set_TotalDocuments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Firestore::LoadBundleTaskProgress::*)(int)>(&Firebase::Firestore::LoadBundleTaskProgress::set_TotalDocuments)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::LoadBundleTaskProgress*), "set_TotalDocuments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::LoadBundleTaskProgress::get_BytesLoaded
// Il2CppName: get_BytesLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (Firebase::Firestore::LoadBundleTaskProgress::*)()>(&Firebase::Firestore::LoadBundleTaskProgress::get_BytesLoaded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::LoadBundleTaskProgress*), "get_BytesLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::LoadBundleTaskProgress::set_BytesLoaded
// Il2CppName: set_BytesLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Firestore::LoadBundleTaskProgress::*)(int64_t)>(&Firebase::Firestore::LoadBundleTaskProgress::set_BytesLoaded)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::LoadBundleTaskProgress*), "set_BytesLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::LoadBundleTaskProgress::get_TotalBytes
// Il2CppName: get_TotalBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (Firebase::Firestore::LoadBundleTaskProgress::*)()>(&Firebase::Firestore::LoadBundleTaskProgress::get_TotalBytes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::LoadBundleTaskProgress*), "get_TotalBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::LoadBundleTaskProgress::set_TotalBytes
// Il2CppName: set_TotalBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Firestore::LoadBundleTaskProgress::*)(int64_t)>(&Firebase::Firestore::LoadBundleTaskProgress::set_TotalBytes)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::LoadBundleTaskProgress*), "set_TotalBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::LoadBundleTaskProgress::get_State
// Il2CppName: get_State
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState (Firebase::Firestore::LoadBundleTaskProgress::*)()>(&Firebase::Firestore::LoadBundleTaskProgress::get_State)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::LoadBundleTaskProgress*), "get_State", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::LoadBundleTaskProgress::set_State
// Il2CppName: set_State
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Firestore::LoadBundleTaskProgress::*)(::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState)>(&Firebase::Firestore::LoadBundleTaskProgress::set_State)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "LoadBundleTaskProgress/LoadBundleTaskState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::LoadBundleTaskProgress*), "set_State", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::LoadBundleTaskProgress::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Firebase::Firestore::LoadBundleTaskProgress::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Firebase::Firestore::LoadBundleTaskProgress::*)(::Il2CppObject*)>(&Firebase::Firestore::LoadBundleTaskProgress::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::LoadBundleTaskProgress*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::LoadBundleTaskProgress::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Firebase::Firestore::LoadBundleTaskProgress::*)()>(&Firebase::Firestore::LoadBundleTaskProgress::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::LoadBundleTaskProgress*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
