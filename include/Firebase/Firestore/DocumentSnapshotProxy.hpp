// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Firebase::Firestore
namespace Firebase::Firestore {
  // Forward declaring type: DocumentReferenceProxy
  class DocumentReferenceProxy;
  // Forward declaring type: FieldValueProxy
  class FieldValueProxy;
  // Forward declaring type: FieldPathProxy
  class FieldPathProxy;
}
// Completed forward declares
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // Forward declaring type: DocumentSnapshotProxy
  class DocumentSnapshotProxy;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Firestore::DocumentSnapshotProxy);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Firestore::DocumentSnapshotProxy*, "Firebase.Firestore", "DocumentSnapshotProxy");
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Firestore.DocumentSnapshotProxy
  // [TokenAttribute] Offset: FFFFFFFF
  class DocumentSnapshotProxy : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    // Nested type: ::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior
    struct ServerTimestampBehavior;
    public:
    // private System.Runtime.InteropServices.HandleRef swigCPtr
    // Size: 0x10
    // Offset: 0x10
    ::System::Runtime::InteropServices::HandleRef swigCPtr;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::HandleRef) == 0x10);
    // protected System.Boolean swigCMemOwn
    // Size: 0x1
    // Offset: 0x20
    bool swigCMemOwn;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private System.Runtime.InteropServices.HandleRef swigCPtr
    [[deprecated]] ::System::Runtime::InteropServices::HandleRef& dyn_swigCPtr();
    // Get instance field reference: protected System.Boolean swigCMemOwn
    [[deprecated]] bool& dyn_swigCMemOwn();
    // System.Void .ctor(System.IntPtr cPtr, System.Boolean cMemoryOwn)
    // Offset: 0xD525C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DocumentSnapshotProxy* New_ctor(::System::IntPtr cPtr, bool cMemoryOwn) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DocumentSnapshotProxy*, creationType>(cPtr, cMemoryOwn)));
    }
    // static System.Runtime.InteropServices.HandleRef getCPtr(Firebase.Firestore.DocumentSnapshotProxy obj)
    // Offset: 0xD53C2C
    static ::System::Runtime::InteropServices::HandleRef getCPtr(::Firebase::Firestore::DocumentSnapshotProxy* obj);
    // public System.Void Dispose()
    // Offset: 0xD53D08
    void Dispose();
    // public System.String id()
    // Offset: 0xD53F18
    ::StringW id();
    // public Firebase.Firestore.DocumentReferenceProxy reference()
    // Offset: 0xD5404C
    ::Firebase::Firestore::DocumentReferenceProxy* reference();
    // public System.Boolean exists()
    // Offset: 0xD54198
    bool exists();
    // public Firebase.Firestore.FieldValueProxy Get(Firebase.Firestore.FieldPathProxy field, Firebase.Firestore.DocumentSnapshotProxy/Firebase.Firestore.ServerTimestampBehavior stb)
    // Offset: 0xD542BC
    ::Firebase::Firestore::FieldValueProxy* Get(::Firebase::Firestore::FieldPathProxy* field, ::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior stb);
    // protected override System.Void Finalize()
    // Offset: 0xD53C98
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // Firebase.Firestore.DocumentSnapshotProxy
  #pragma pack(pop)
  static check_size<sizeof(DocumentSnapshotProxy), 32 + sizeof(bool)> __Firebase_Firestore_DocumentSnapshotProxySizeCheck;
  static_assert(sizeof(DocumentSnapshotProxy) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Firestore::DocumentSnapshotProxy::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Firebase::Firestore::DocumentSnapshotProxy::getCPtr
// Il2CppName: getCPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::InteropServices::HandleRef (*)(::Firebase::Firestore::DocumentSnapshotProxy*)>(&Firebase::Firestore::DocumentSnapshotProxy::getCPtr)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DocumentSnapshotProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentSnapshotProxy*), "getCPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentSnapshotProxy::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Firestore::DocumentSnapshotProxy::*)()>(&Firebase::Firestore::DocumentSnapshotProxy::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentSnapshotProxy*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentSnapshotProxy::id
// Il2CppName: id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Firebase::Firestore::DocumentSnapshotProxy::*)()>(&Firebase::Firestore::DocumentSnapshotProxy::id)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentSnapshotProxy*), "id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentSnapshotProxy::reference
// Il2CppName: reference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::DocumentReferenceProxy* (Firebase::Firestore::DocumentSnapshotProxy::*)()>(&Firebase::Firestore::DocumentSnapshotProxy::reference)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentSnapshotProxy*), "reference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentSnapshotProxy::exists
// Il2CppName: exists
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Firebase::Firestore::DocumentSnapshotProxy::*)()>(&Firebase::Firestore::DocumentSnapshotProxy::exists)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentSnapshotProxy*), "exists", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentSnapshotProxy::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (Firebase::Firestore::DocumentSnapshotProxy::*)(::Firebase::Firestore::FieldPathProxy*, ::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior)>(&Firebase::Firestore::DocumentSnapshotProxy::Get)> {
  static const MethodInfo* get() {
    static auto* field = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldPathProxy")->byval_arg;
    static auto* stb = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DocumentSnapshotProxy/ServerTimestampBehavior")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentSnapshotProxy*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{field, stb});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentSnapshotProxy::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Firestore::DocumentSnapshotProxy::*)()>(&Firebase::Firestore::DocumentSnapshotProxy::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentSnapshotProxy*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
