// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: Firebase.Firestore.FirestoreError
#include "Firebase/Firestore/FirestoreError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Firebase::Firestore
namespace Firebase::Firestore {
  // Forward declaring type: DocumentReferenceProxy
  class DocumentReferenceProxy;
  // Forward declaring type: FirebaseFirestore
  class FirebaseFirestore;
  // Forward declaring type: ListenerRegistrationMap`1<T>
  template<typename T>
  class ListenerRegistrationMap_1;
  // Forward declaring type: DocumentSnapshotProxy
  class DocumentSnapshotProxy;
  // Forward declaring type: CollectionReference
  class CollectionReference;
  // Forward declaring type: SetOptions
  class SetOptions;
  // Forward declaring type: DocumentSnapshot
  class DocumentSnapshot;
  // Forward declaring type: Source
  struct Source;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Action_3;
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
}
// Completed forward declares
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // Forward declaring type: DocumentReference
  class DocumentReference;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Firestore::DocumentReference);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Firestore::DocumentReference*, "Firebase.Firestore", "DocumentReference");
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Firestore.DocumentReference
  // [TokenAttribute] Offset: FFFFFFFF
  class DocumentReference : public ::Il2CppObject/*, public ::System::IEquatable_1<::Firebase::Firestore::DocumentReference*>*/ {
    public:
    // Nested type: ::Firebase::Firestore::DocumentReference::ListenerDelegate
    class ListenerDelegate;
    public:
    // private readonly Firebase.Firestore.DocumentReferenceProxy _proxy
    // Size: 0x8
    // Offset: 0x10
    ::Firebase::Firestore::DocumentReferenceProxy* proxy;
    // Field size check
    static_assert(sizeof(::Firebase::Firestore::DocumentReferenceProxy*) == 0x8);
    // private readonly Firebase.Firestore.FirebaseFirestore _firestore
    // Size: 0x8
    // Offset: 0x18
    ::Firebase::Firestore::FirebaseFirestore* firestore;
    // Field size check
    static_assert(sizeof(::Firebase::Firestore::FirebaseFirestore*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::IEquatable_1<::Firebase::Firestore::DocumentReference*>
    operator ::System::IEquatable_1<::Firebase::Firestore::DocumentReference*>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::Firebase::Firestore::DocumentReference*>*>(this);
    }
    // Get static field: static private Firebase.Firestore.ListenerRegistrationMap`1<System.Action`3<Firebase.Firestore.DocumentSnapshotProxy,Firebase.Firestore.FirestoreError,System.String>> snapshotListenerCallbacks
    static ::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action_3<::Firebase::Firestore::DocumentSnapshotProxy*, ::Firebase::Firestore::FirestoreError, ::StringW>*>* _get_snapshotListenerCallbacks();
    // Set static field: static private Firebase.Firestore.ListenerRegistrationMap`1<System.Action`3<Firebase.Firestore.DocumentSnapshotProxy,Firebase.Firestore.FirestoreError,System.String>> snapshotListenerCallbacks
    static void _set_snapshotListenerCallbacks(::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action_3<::Firebase::Firestore::DocumentSnapshotProxy*, ::Firebase::Firestore::FirestoreError, ::StringW>*>* value);
    // Get static field: static private Firebase.Firestore.DocumentReference/Firebase.Firestore.ListenerDelegate documentSnapshotsHandler
    static ::Firebase::Firestore::DocumentReference::ListenerDelegate* _get_documentSnapshotsHandler();
    // Set static field: static private Firebase.Firestore.DocumentReference/Firebase.Firestore.ListenerDelegate documentSnapshotsHandler
    static void _set_documentSnapshotsHandler(::Firebase::Firestore::DocumentReference::ListenerDelegate* value);
    // Get instance field reference: private readonly Firebase.Firestore.DocumentReferenceProxy _proxy
    [[deprecated]] ::Firebase::Firestore::DocumentReferenceProxy*& dyn__proxy();
    // Get instance field reference: private readonly Firebase.Firestore.FirebaseFirestore _firestore
    [[deprecated]] ::Firebase::Firestore::FirebaseFirestore*& dyn__firestore();
    // Firebase.Firestore.DocumentReferenceProxy get_Proxy()
    // Offset: 0xD51BE4
    ::Firebase::Firestore::DocumentReferenceProxy* get_Proxy();
    // public Firebase.Firestore.FirebaseFirestore get_Firestore()
    // Offset: 0xD51C78
    ::Firebase::Firestore::FirebaseFirestore* get_Firestore();
    // public System.String get_Id()
    // Offset: 0xD48074
    ::StringW get_Id();
    // public System.String get_Path()
    // Offset: 0xD51C80
    ::StringW get_Path();
    // System.Void .ctor(Firebase.Firestore.DocumentReferenceProxy proxy, Firebase.Firestore.FirebaseFirestore firestore)
    // Offset: 0xD4B828
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DocumentReference* New_ctor(::Firebase::Firestore::DocumentReferenceProxy* proxy, ::Firebase::Firestore::FirebaseFirestore* firestore) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DocumentReference*, creationType>(proxy, firestore)));
    }
    // static private System.Void .cctor()
    // Offset: 0xD52704
    static void _cctor();
    // static System.Void ClearCallbacksForOwner(Firebase.Firestore.FirebaseFirestore owner)
    // Offset: 0xD51BEC
    static void ClearCallbacksForOwner(::Firebase::Firestore::FirebaseFirestore* owner);
    // public Firebase.Firestore.CollectionReference Collection(System.String path)
    // Offset: 0xD51CA0
    ::Firebase::Firestore::CollectionReference* Collection(::StringW path);
    // public System.Boolean Equals(Firebase.Firestore.DocumentReference other)
    // Offset: 0xD51E48
    bool Equals(::Firebase::Firestore::DocumentReference* other);
    // public System.Threading.Tasks.Task DeleteAsync()
    // Offset: 0xD51FC8
    ::System::Threading::Tasks::Task* DeleteAsync();
    // public System.Threading.Tasks.Task UpdateAsync(System.Collections.Generic.IDictionary`2<System.String,System.Object> updates)
    // Offset: 0xD51FE8
    ::System::Threading::Tasks::Task* UpdateAsync(::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* updates);
    // public System.Threading.Tasks.Task SetAsync(System.Object documentData, Firebase.Firestore.SetOptions options)
    // Offset: 0xD4BB28
    ::System::Threading::Tasks::Task* SetAsync(::Il2CppObject* documentData, ::Firebase::Firestore::SetOptions* options);
    // public System.Threading.Tasks.Task`1<Firebase.Firestore.DocumentSnapshot> GetSnapshotAsync(Firebase.Firestore.Source source)
    // Offset: 0xD52424
    ::System::Threading::Tasks::Task_1<::Firebase::Firestore::DocumentSnapshot*>* GetSnapshotAsync(::Firebase::Firestore::Source source);
    // static private System.Void DocumentSnapshotsHandler(System.Int32 callbackId, System.IntPtr snapshotPtr, Firebase.Firestore.FirestoreError errorCode, System.String errorMessage)
    // Offset: 0xD51994
    static void DocumentSnapshotsHandler(int callbackId, ::System::IntPtr snapshotPtr, ::Firebase::Firestore::FirestoreError errorCode, ::StringW errorMessage);
    // private Firebase.Firestore.DocumentSnapshot <GetSnapshotAsync>m__0(Firebase.Firestore.DocumentSnapshotProxy taskResult)
    // Offset: 0xD527E8
    ::Firebase::Firestore::DocumentSnapshot* $GetSnapshotAsync$m__0(::Firebase::Firestore::DocumentSnapshotProxy* taskResult);
    // public override System.Int32 GetHashCode()
    // Offset: 0xD51D6C
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xD51DD8
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.String ToString()
    // Offset: 0xD51ED4
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // Firebase.Firestore.DocumentReference
  #pragma pack(pop)
  static check_size<sizeof(DocumentReference), 24 + sizeof(::Firebase::Firestore::FirebaseFirestore*)> __Firebase_Firestore_DocumentReferenceSizeCheck;
  static_assert(sizeof(DocumentReference) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::get_Proxy
// Il2CppName: get_Proxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::DocumentReferenceProxy* (Firebase::Firestore::DocumentReference::*)()>(&Firebase::Firestore::DocumentReference::get_Proxy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentReference*), "get_Proxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::get_Firestore
// Il2CppName: get_Firestore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FirebaseFirestore* (Firebase::Firestore::DocumentReference::*)()>(&Firebase::Firestore::DocumentReference::get_Firestore)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentReference*), "get_Firestore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::get_Id
// Il2CppName: get_Id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Firebase::Firestore::DocumentReference::*)()>(&Firebase::Firestore::DocumentReference::get_Id)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentReference*), "get_Id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::get_Path
// Il2CppName: get_Path
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Firebase::Firestore::DocumentReference::*)()>(&Firebase::Firestore::DocumentReference::get_Path)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentReference*), "get_Path", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Firebase::Firestore::DocumentReference::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentReference*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::ClearCallbacksForOwner
// Il2CppName: ClearCallbacksForOwner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Firebase::Firestore::FirebaseFirestore*)>(&Firebase::Firestore::DocumentReference::ClearCallbacksForOwner)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FirebaseFirestore")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentReference*), "ClearCallbacksForOwner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::Collection
// Il2CppName: Collection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::CollectionReference* (Firebase::Firestore::DocumentReference::*)(::StringW)>(&Firebase::Firestore::DocumentReference::Collection)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentReference*), "Collection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Firebase::Firestore::DocumentReference::*)(::Firebase::Firestore::DocumentReference*)>(&Firebase::Firestore::DocumentReference::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DocumentReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentReference*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::DeleteAsync
// Il2CppName: DeleteAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (Firebase::Firestore::DocumentReference::*)()>(&Firebase::Firestore::DocumentReference::DeleteAsync)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentReference*), "DeleteAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::UpdateAsync
// Il2CppName: UpdateAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (Firebase::Firestore::DocumentReference::*)(::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>*)>(&Firebase::Firestore::DocumentReference::UpdateAsync)> {
  static const MethodInfo* get() {
    static auto* updates = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentReference*), "UpdateAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updates});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::SetAsync
// Il2CppName: SetAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (Firebase::Firestore::DocumentReference::*)(::Il2CppObject*, ::Firebase::Firestore::SetOptions*)>(&Firebase::Firestore::DocumentReference::SetAsync)> {
  static const MethodInfo* get() {
    static auto* documentData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "SetOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentReference*), "SetAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{documentData, options});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::GetSnapshotAsync
// Il2CppName: GetSnapshotAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::Firebase::Firestore::DocumentSnapshot*>* (Firebase::Firestore::DocumentReference::*)(::Firebase::Firestore::Source)>(&Firebase::Firestore::DocumentReference::GetSnapshotAsync)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "Source")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentReference*), "GetSnapshotAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::DocumentSnapshotsHandler
// Il2CppName: DocumentSnapshotsHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::System::IntPtr, ::Firebase::Firestore::FirestoreError, ::StringW)>(&Firebase::Firestore::DocumentReference::DocumentSnapshotsHandler)> {
  static const MethodInfo* get() {
    static auto* callbackId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* snapshotPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* errorCode = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FirestoreError")->byval_arg;
    static auto* errorMessage = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentReference*), "DocumentSnapshotsHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callbackId, snapshotPtr, errorCode, errorMessage});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::$GetSnapshotAsync$m__0
// Il2CppName: <GetSnapshotAsync>m__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::DocumentSnapshot* (Firebase::Firestore::DocumentReference::*)(::Firebase::Firestore::DocumentSnapshotProxy*)>(&Firebase::Firestore::DocumentReference::$GetSnapshotAsync$m__0)> {
  static const MethodInfo* get() {
    static auto* taskResult = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DocumentSnapshotProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentReference*), "<GetSnapshotAsync>m__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{taskResult});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Firebase::Firestore::DocumentReference::*)()>(&Firebase::Firestore::DocumentReference::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentReference*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Firebase::Firestore::DocumentReference::*)(::Il2CppObject*)>(&Firebase::Firestore::DocumentReference::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentReference*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::DocumentReference::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Firebase::Firestore::DocumentReference::*)()>(&Firebase::Firestore::DocumentReference::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::DocumentReference*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
