// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // Forward declaring type: FieldValue
  class FieldValue;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Firestore::FieldValue);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Firestore::FieldValue*, "Firebase.Firestore", "FieldValue");
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Firestore.FieldValue
  // [TokenAttribute] Offset: FFFFFFFF
  class FieldValue : public ::Il2CppObject {
    public:
    // [DebuggerBrowsableAttribute] Offset: 0x6D869C
    // Get static field: static private readonly System.Object <ServerTimestamp>k__BackingField
    static ::Il2CppObject* _get_$ServerTimestamp$k__BackingField();
    // Set static field: static private readonly System.Object <ServerTimestamp>k__BackingField
    static void _set_$ServerTimestamp$k__BackingField(::Il2CppObject* value);
    // [DebuggerBrowsableAttribute] Offset: 0x6D86D8
    // Get static field: static private readonly System.Object <Delete>k__BackingField
    static ::Il2CppObject* _get_$Delete$k__BackingField();
    // Set static field: static private readonly System.Object <Delete>k__BackingField
    static void _set_$Delete$k__BackingField(::Il2CppObject* value);
    // static private System.Void .cctor()
    // Offset: 0xD57544
    static void _cctor();
    // static public System.Object Increment(System.Int64 value)
    // Offset: 0xD5747C
    static ::Il2CppObject* Increment(int64_t value);
  }; // Firebase.Firestore.FieldValue
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Firestore::FieldValue::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Firebase::Firestore::FieldValue::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValue*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FieldValue::Increment
// Il2CppName: Increment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(int64_t)>(&Firebase::Firestore::FieldValue::Increment)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FieldValue*), "Increment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
