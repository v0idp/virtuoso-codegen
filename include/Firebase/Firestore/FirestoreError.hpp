// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // Forward declaring type: FirestoreError
  struct FirestoreError;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Firestore::FirestoreError, "Firebase.Firestore", "FirestoreError");
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Firestore.FirestoreError
  // [TokenAttribute] Offset: FFFFFFFF
  struct FirestoreError/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: FirestoreError
    constexpr FirestoreError(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Firebase.Firestore.FirestoreError Ok
    static constexpr const int Ok = 0;
    // Get static field: static public Firebase.Firestore.FirestoreError Ok
    static ::Firebase::Firestore::FirestoreError _get_Ok();
    // Set static field: static public Firebase.Firestore.FirestoreError Ok
    static void _set_Ok(::Firebase::Firestore::FirestoreError value);
    // static field const value: static public Firebase.Firestore.FirestoreError None
    static constexpr const int None = 0;
    // Get static field: static public Firebase.Firestore.FirestoreError None
    static ::Firebase::Firestore::FirestoreError _get_None();
    // Set static field: static public Firebase.Firestore.FirestoreError None
    static void _set_None(::Firebase::Firestore::FirestoreError value);
    // static field const value: static public Firebase.Firestore.FirestoreError Cancelled
    static constexpr const int Cancelled = 1;
    // Get static field: static public Firebase.Firestore.FirestoreError Cancelled
    static ::Firebase::Firestore::FirestoreError _get_Cancelled();
    // Set static field: static public Firebase.Firestore.FirestoreError Cancelled
    static void _set_Cancelled(::Firebase::Firestore::FirestoreError value);
    // static field const value: static public Firebase.Firestore.FirestoreError Unknown
    static constexpr const int Unknown = 2;
    // Get static field: static public Firebase.Firestore.FirestoreError Unknown
    static ::Firebase::Firestore::FirestoreError _get_Unknown();
    // Set static field: static public Firebase.Firestore.FirestoreError Unknown
    static void _set_Unknown(::Firebase::Firestore::FirestoreError value);
    // static field const value: static public Firebase.Firestore.FirestoreError InvalidArgument
    static constexpr const int InvalidArgument = 3;
    // Get static field: static public Firebase.Firestore.FirestoreError InvalidArgument
    static ::Firebase::Firestore::FirestoreError _get_InvalidArgument();
    // Set static field: static public Firebase.Firestore.FirestoreError InvalidArgument
    static void _set_InvalidArgument(::Firebase::Firestore::FirestoreError value);
    // static field const value: static public Firebase.Firestore.FirestoreError DeadlineExceeded
    static constexpr const int DeadlineExceeded = 4;
    // Get static field: static public Firebase.Firestore.FirestoreError DeadlineExceeded
    static ::Firebase::Firestore::FirestoreError _get_DeadlineExceeded();
    // Set static field: static public Firebase.Firestore.FirestoreError DeadlineExceeded
    static void _set_DeadlineExceeded(::Firebase::Firestore::FirestoreError value);
    // static field const value: static public Firebase.Firestore.FirestoreError NotFound
    static constexpr const int NotFound = 5;
    // Get static field: static public Firebase.Firestore.FirestoreError NotFound
    static ::Firebase::Firestore::FirestoreError _get_NotFound();
    // Set static field: static public Firebase.Firestore.FirestoreError NotFound
    static void _set_NotFound(::Firebase::Firestore::FirestoreError value);
    // static field const value: static public Firebase.Firestore.FirestoreError AlreadyExists
    static constexpr const int AlreadyExists = 6;
    // Get static field: static public Firebase.Firestore.FirestoreError AlreadyExists
    static ::Firebase::Firestore::FirestoreError _get_AlreadyExists();
    // Set static field: static public Firebase.Firestore.FirestoreError AlreadyExists
    static void _set_AlreadyExists(::Firebase::Firestore::FirestoreError value);
    // static field const value: static public Firebase.Firestore.FirestoreError PermissionDenied
    static constexpr const int PermissionDenied = 7;
    // Get static field: static public Firebase.Firestore.FirestoreError PermissionDenied
    static ::Firebase::Firestore::FirestoreError _get_PermissionDenied();
    // Set static field: static public Firebase.Firestore.FirestoreError PermissionDenied
    static void _set_PermissionDenied(::Firebase::Firestore::FirestoreError value);
    // static field const value: static public Firebase.Firestore.FirestoreError ResourceExhausted
    static constexpr const int ResourceExhausted = 8;
    // Get static field: static public Firebase.Firestore.FirestoreError ResourceExhausted
    static ::Firebase::Firestore::FirestoreError _get_ResourceExhausted();
    // Set static field: static public Firebase.Firestore.FirestoreError ResourceExhausted
    static void _set_ResourceExhausted(::Firebase::Firestore::FirestoreError value);
    // static field const value: static public Firebase.Firestore.FirestoreError FailedPrecondition
    static constexpr const int FailedPrecondition = 9;
    // Get static field: static public Firebase.Firestore.FirestoreError FailedPrecondition
    static ::Firebase::Firestore::FirestoreError _get_FailedPrecondition();
    // Set static field: static public Firebase.Firestore.FirestoreError FailedPrecondition
    static void _set_FailedPrecondition(::Firebase::Firestore::FirestoreError value);
    // static field const value: static public Firebase.Firestore.FirestoreError Aborted
    static constexpr const int Aborted = 10;
    // Get static field: static public Firebase.Firestore.FirestoreError Aborted
    static ::Firebase::Firestore::FirestoreError _get_Aborted();
    // Set static field: static public Firebase.Firestore.FirestoreError Aborted
    static void _set_Aborted(::Firebase::Firestore::FirestoreError value);
    // static field const value: static public Firebase.Firestore.FirestoreError OutOfRange
    static constexpr const int OutOfRange = 11;
    // Get static field: static public Firebase.Firestore.FirestoreError OutOfRange
    static ::Firebase::Firestore::FirestoreError _get_OutOfRange();
    // Set static field: static public Firebase.Firestore.FirestoreError OutOfRange
    static void _set_OutOfRange(::Firebase::Firestore::FirestoreError value);
    // static field const value: static public Firebase.Firestore.FirestoreError Unimplemented
    static constexpr const int Unimplemented = 12;
    // Get static field: static public Firebase.Firestore.FirestoreError Unimplemented
    static ::Firebase::Firestore::FirestoreError _get_Unimplemented();
    // Set static field: static public Firebase.Firestore.FirestoreError Unimplemented
    static void _set_Unimplemented(::Firebase::Firestore::FirestoreError value);
    // static field const value: static public Firebase.Firestore.FirestoreError Internal
    static constexpr const int Internal = 13;
    // Get static field: static public Firebase.Firestore.FirestoreError Internal
    static ::Firebase::Firestore::FirestoreError _get_Internal();
    // Set static field: static public Firebase.Firestore.FirestoreError Internal
    static void _set_Internal(::Firebase::Firestore::FirestoreError value);
    // static field const value: static public Firebase.Firestore.FirestoreError Unavailable
    static constexpr const int Unavailable = 14;
    // Get static field: static public Firebase.Firestore.FirestoreError Unavailable
    static ::Firebase::Firestore::FirestoreError _get_Unavailable();
    // Set static field: static public Firebase.Firestore.FirestoreError Unavailable
    static void _set_Unavailable(::Firebase::Firestore::FirestoreError value);
    // static field const value: static public Firebase.Firestore.FirestoreError DataLoss
    static constexpr const int DataLoss = 15;
    // Get static field: static public Firebase.Firestore.FirestoreError DataLoss
    static ::Firebase::Firestore::FirestoreError _get_DataLoss();
    // Set static field: static public Firebase.Firestore.FirestoreError DataLoss
    static void _set_DataLoss(::Firebase::Firestore::FirestoreError value);
    // static field const value: static public Firebase.Firestore.FirestoreError Unauthenticated
    static constexpr const int Unauthenticated = 16;
    // Get static field: static public Firebase.Firestore.FirestoreError Unauthenticated
    static ::Firebase::Firestore::FirestoreError _get_Unauthenticated();
    // Set static field: static public Firebase.Firestore.FirestoreError Unauthenticated
    static void _set_Unauthenticated(::Firebase::Firestore::FirestoreError value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Firebase.Firestore.FirestoreError
  #pragma pack(pop)
  static check_size<sizeof(FirestoreError), 0 + sizeof(int)> __Firebase_Firestore_FirestoreErrorSizeCheck;
  static_assert(sizeof(FirestoreError) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
