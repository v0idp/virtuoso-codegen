// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // Forward declaring type: FirestoreConverter`1<T>
  template<typename T>
  class FirestoreConverter_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Firebase::Firestore::FirestoreConverter_1, "Firebase.Firestore", "FirestoreConverter`1");
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // WARNING Size may be invalid!
  // Autogenerated type: Firebase.Firestore.FirestoreConverter`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class FirestoreConverter_1 : public ::Il2CppObject {
    public:
    // public System.Object ToFirestore(T value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* ToFirestore(T value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreConverter_1::ToFirestore");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::FirestoreConverter_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
    }
    // public T FromFirestore(System.Object value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    T FromFirestore(::Il2CppObject* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreConverter_1::FromFirestore");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::FirestoreConverter_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method, value);
    }
  }; // Firebase.Firestore.FirestoreConverter`1
  // Could not write size check! Type: Firebase.Firestore.FirestoreConverter`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
