// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Firebase.Firestore.DocumentSnapshotProxy
#include "Firebase/Firestore/DocumentSnapshotProxy.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Firebase::Firestore
namespace Firebase::Firestore {
  // Forward declaring type: QueryProxy
  class QueryProxy;
  // Forward declaring type: QuerySnapshotProxy
  class QuerySnapshotProxy;
  // Forward declaring type: WriteBatchProxy
  class WriteBatchProxy;
  // Forward declaring type: FieldToValueMap
  class FieldToValueMap;
  // Forward declaring type: FieldValueProxy
  class FieldValueProxy;
  // Forward declaring type: DocumentReferenceProxy
  class DocumentReferenceProxy;
  // Forward declaring type: SetOptionsProxy
  class SetOptionsProxy;
  // Forward declaring type: FieldValueVector
  class FieldValueVector;
  // Forward declaring type: DocumentSnapshotVector
  class DocumentSnapshotVector;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
}
// Completed forward declares
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // Forward declaring type: FirestoreCpp
  class FirestoreCpp;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Firestore::FirestoreCpp);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Firestore::FirestoreCpp*, "Firebase.Firestore", "FirestoreCpp");
// Type namespace: Firebase.Firestore
namespace Firebase::Firestore {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Firestore.FirestoreCpp
  // [TokenAttribute] Offset: FFFFFFFF
  class FirestoreCpp : public ::Il2CppObject {
    public:
    // static public System.Boolean QueryEquals(Firebase.Firestore.QueryProxy lhs, Firebase.Firestore.QueryProxy rhs)
    // Offset: 0xD5BA8C
    static bool QueryEquals(::Firebase::Firestore::QueryProxy* lhs, ::Firebase::Firestore::QueryProxy* rhs);
    // static public System.Boolean QuerySnapshotEquals(Firebase.Firestore.QuerySnapshotProxy lhs, Firebase.Firestore.QuerySnapshotProxy rhs)
    // Offset: 0xD5BC5C
    static bool QuerySnapshotEquals(::Firebase::Firestore::QuerySnapshotProxy* lhs, ::Firebase::Firestore::QuerySnapshotProxy* rhs);
    // static public System.Boolean DocumentSnapshotEquals(Firebase.Firestore.DocumentSnapshotProxy lhs, Firebase.Firestore.DocumentSnapshotProxy rhs)
    // Offset: 0xD53AB0
    static bool DocumentSnapshotEquals(::Firebase::Firestore::DocumentSnapshotProxy* lhs, ::Firebase::Firestore::DocumentSnapshotProxy* rhs);
    // static public System.Int32 QueryHashCode(Firebase.Firestore.QueryProxy query)
    // Offset: 0xD5BEC4
    static int QueryHashCode(::Firebase::Firestore::QueryProxy* query);
    // static public System.Int32 QuerySnapshotHashCode(Firebase.Firestore.QuerySnapshotProxy snapshot)
    // Offset: 0xD5BFEC
    static int QuerySnapshotHashCode(::Firebase::Firestore::QuerySnapshotProxy* snapshot);
    // static public System.Int32 DocumentSnapshotHashCode(Firebase.Firestore.DocumentSnapshotProxy snapshot)
    // Offset: 0xD53B84
    static int DocumentSnapshotHashCode(::Firebase::Firestore::DocumentSnapshotProxy* snapshot);
    // static public Firebase.Firestore.FieldToValueMap ConvertFieldValueToMap(Firebase.Firestore.FieldValueProxy fieldValue)
    // Offset: 0xD49EF8
    static ::Firebase::Firestore::FieldToValueMap* ConvertFieldValueToMap(::Firebase::Firestore::FieldValueProxy* fieldValue);
    // static public Firebase.Firestore.FieldValueProxy ConvertMapToFieldValue(Firebase.Firestore.FieldToValueMap wrapper)
    // Offset: 0xD4DA60
    static ::Firebase::Firestore::FieldValueProxy* ConvertMapToFieldValue(::Firebase::Firestore::FieldToValueMap* wrapper);
    // static public Firebase.Firestore.FieldValueProxy ConvertSnapshotToFieldValue(Firebase.Firestore.DocumentSnapshotProxy snapshot, Firebase.Firestore.DocumentSnapshotProxy/Firebase.Firestore.ServerTimestampBehavior stb)
    // Offset: 0xD5C294
    static ::Firebase::Firestore::FieldValueProxy* ConvertSnapshotToFieldValue(::Firebase::Firestore::DocumentSnapshotProxy* snapshot, ::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior stb);
    // static public System.Void WriteBatchUpdate(Firebase.Firestore.WriteBatchProxy batch, Firebase.Firestore.DocumentReferenceProxy doc, Firebase.Firestore.FieldValueProxy fieldValue)
    // Offset: 0xD5C40C
    static void WriteBatchUpdate(::Firebase::Firestore::WriteBatchProxy* batch, ::Firebase::Firestore::DocumentReferenceProxy* doc, ::Firebase::Firestore::FieldValueProxy* fieldValue);
    // static public System.Threading.Tasks.Task DocumentReferenceSetAsync(Firebase.Firestore.DocumentReferenceProxy doc, Firebase.Firestore.FieldValueProxy fieldValue, Firebase.Firestore.SetOptionsProxy options)
    // Offset: 0xD52314
    static ::System::Threading::Tasks::Task* DocumentReferenceSetAsync(::Firebase::Firestore::DocumentReferenceProxy* doc, ::Firebase::Firestore::FieldValueProxy* fieldValue, ::Firebase::Firestore::SetOptionsProxy* options);
    // static public System.Threading.Tasks.Task DocumentReferenceUpdateAsync(Firebase.Firestore.DocumentReferenceProxy doc, Firebase.Firestore.FieldValueProxy fieldValue)
    // Offset: 0xD520E0
    static ::System::Threading::Tasks::Task* DocumentReferenceUpdateAsync(::Firebase::Firestore::DocumentReferenceProxy* doc, ::Firebase::Firestore::FieldValueProxy* fieldValue);
    // static public System.Void WriteBatchSet(Firebase.Firestore.WriteBatchProxy writeBatch, Firebase.Firestore.DocumentReferenceProxy document, Firebase.Firestore.FieldValueProxy data, Firebase.Firestore.SetOptionsProxy options)
    // Offset: 0xD5C78C
    static void WriteBatchSet(::Firebase::Firestore::WriteBatchProxy* writeBatch, ::Firebase::Firestore::DocumentReferenceProxy* document, ::Firebase::Firestore::FieldValueProxy* data, ::Firebase::Firestore::SetOptionsProxy* options);
    // static public Firebase.Firestore.FieldValueVector ConvertFieldValueToVector(Firebase.Firestore.FieldValueProxy value)
    // Offset: 0xD4784C
    static ::Firebase::Firestore::FieldValueVector* ConvertFieldValueToVector(::Firebase::Firestore::FieldValueProxy* value);
    // static public Firebase.Firestore.FieldValueProxy ConvertVectorToFieldValue(Firebase.Firestore.FieldValueVector wrapper)
    // Offset: 0xD4DE08
    static ::Firebase::Firestore::FieldValueProxy* ConvertVectorToFieldValue(::Firebase::Firestore::FieldValueVector* wrapper);
    // static public Firebase.Firestore.DocumentSnapshotVector QuerySnapshotDocuments(Firebase.Firestore.QuerySnapshotProxy snapshot)
    // Offset: 0xD5CA48
    static ::Firebase::Firestore::DocumentSnapshotVector* QuerySnapshotDocuments(::Firebase::Firestore::QuerySnapshotProxy* snapshot);
  }; // Firebase.Firestore.FirestoreCpp
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Firestore::FirestoreCpp::QueryEquals
// Il2CppName: QueryEquals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Firebase::Firestore::QueryProxy*, ::Firebase::Firestore::QueryProxy*)>(&Firebase::Firestore::FirestoreCpp::QueryEquals)> {
  static const MethodInfo* get() {
    static auto* lhs = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "QueryProxy")->byval_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "QueryProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FirestoreCpp*), "QueryEquals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhs, rhs});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FirestoreCpp::QuerySnapshotEquals
// Il2CppName: QuerySnapshotEquals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Firebase::Firestore::QuerySnapshotProxy*, ::Firebase::Firestore::QuerySnapshotProxy*)>(&Firebase::Firestore::FirestoreCpp::QuerySnapshotEquals)> {
  static const MethodInfo* get() {
    static auto* lhs = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "QuerySnapshotProxy")->byval_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "QuerySnapshotProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FirestoreCpp*), "QuerySnapshotEquals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhs, rhs});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FirestoreCpp::DocumentSnapshotEquals
// Il2CppName: DocumentSnapshotEquals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Firebase::Firestore::DocumentSnapshotProxy*, ::Firebase::Firestore::DocumentSnapshotProxy*)>(&Firebase::Firestore::FirestoreCpp::DocumentSnapshotEquals)> {
  static const MethodInfo* get() {
    static auto* lhs = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DocumentSnapshotProxy")->byval_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DocumentSnapshotProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FirestoreCpp*), "DocumentSnapshotEquals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhs, rhs});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FirestoreCpp::QueryHashCode
// Il2CppName: QueryHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Firebase::Firestore::QueryProxy*)>(&Firebase::Firestore::FirestoreCpp::QueryHashCode)> {
  static const MethodInfo* get() {
    static auto* query = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "QueryProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FirestoreCpp*), "QueryHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{query});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FirestoreCpp::QuerySnapshotHashCode
// Il2CppName: QuerySnapshotHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Firebase::Firestore::QuerySnapshotProxy*)>(&Firebase::Firestore::FirestoreCpp::QuerySnapshotHashCode)> {
  static const MethodInfo* get() {
    static auto* snapshot = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "QuerySnapshotProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FirestoreCpp*), "QuerySnapshotHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{snapshot});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FirestoreCpp::DocumentSnapshotHashCode
// Il2CppName: DocumentSnapshotHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Firebase::Firestore::DocumentSnapshotProxy*)>(&Firebase::Firestore::FirestoreCpp::DocumentSnapshotHashCode)> {
  static const MethodInfo* get() {
    static auto* snapshot = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DocumentSnapshotProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FirestoreCpp*), "DocumentSnapshotHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{snapshot});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FirestoreCpp::ConvertFieldValueToMap
// Il2CppName: ConvertFieldValueToMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldToValueMap* (*)(::Firebase::Firestore::FieldValueProxy*)>(&Firebase::Firestore::FirestoreCpp::ConvertFieldValueToMap)> {
  static const MethodInfo* get() {
    static auto* fieldValue = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldValueProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FirestoreCpp*), "ConvertFieldValueToMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fieldValue});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FirestoreCpp::ConvertMapToFieldValue
// Il2CppName: ConvertMapToFieldValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)(::Firebase::Firestore::FieldToValueMap*)>(&Firebase::Firestore::FirestoreCpp::ConvertMapToFieldValue)> {
  static const MethodInfo* get() {
    static auto* wrapper = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldToValueMap")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FirestoreCpp*), "ConvertMapToFieldValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{wrapper});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FirestoreCpp::ConvertSnapshotToFieldValue
// Il2CppName: ConvertSnapshotToFieldValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)(::Firebase::Firestore::DocumentSnapshotProxy*, ::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior)>(&Firebase::Firestore::FirestoreCpp::ConvertSnapshotToFieldValue)> {
  static const MethodInfo* get() {
    static auto* snapshot = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DocumentSnapshotProxy")->byval_arg;
    static auto* stb = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DocumentSnapshotProxy/ServerTimestampBehavior")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FirestoreCpp*), "ConvertSnapshotToFieldValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{snapshot, stb});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FirestoreCpp::WriteBatchUpdate
// Il2CppName: WriteBatchUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Firebase::Firestore::WriteBatchProxy*, ::Firebase::Firestore::DocumentReferenceProxy*, ::Firebase::Firestore::FieldValueProxy*)>(&Firebase::Firestore::FirestoreCpp::WriteBatchUpdate)> {
  static const MethodInfo* get() {
    static auto* batch = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "WriteBatchProxy")->byval_arg;
    static auto* doc = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DocumentReferenceProxy")->byval_arg;
    static auto* fieldValue = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldValueProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FirestoreCpp*), "WriteBatchUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{batch, doc, fieldValue});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FirestoreCpp::DocumentReferenceSetAsync
// Il2CppName: DocumentReferenceSetAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (*)(::Firebase::Firestore::DocumentReferenceProxy*, ::Firebase::Firestore::FieldValueProxy*, ::Firebase::Firestore::SetOptionsProxy*)>(&Firebase::Firestore::FirestoreCpp::DocumentReferenceSetAsync)> {
  static const MethodInfo* get() {
    static auto* doc = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DocumentReferenceProxy")->byval_arg;
    static auto* fieldValue = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldValueProxy")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "SetOptionsProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FirestoreCpp*), "DocumentReferenceSetAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{doc, fieldValue, options});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FirestoreCpp::DocumentReferenceUpdateAsync
// Il2CppName: DocumentReferenceUpdateAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (*)(::Firebase::Firestore::DocumentReferenceProxy*, ::Firebase::Firestore::FieldValueProxy*)>(&Firebase::Firestore::FirestoreCpp::DocumentReferenceUpdateAsync)> {
  static const MethodInfo* get() {
    static auto* doc = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DocumentReferenceProxy")->byval_arg;
    static auto* fieldValue = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldValueProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FirestoreCpp*), "DocumentReferenceUpdateAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{doc, fieldValue});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FirestoreCpp::WriteBatchSet
// Il2CppName: WriteBatchSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Firebase::Firestore::WriteBatchProxy*, ::Firebase::Firestore::DocumentReferenceProxy*, ::Firebase::Firestore::FieldValueProxy*, ::Firebase::Firestore::SetOptionsProxy*)>(&Firebase::Firestore::FirestoreCpp::WriteBatchSet)> {
  static const MethodInfo* get() {
    static auto* writeBatch = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "WriteBatchProxy")->byval_arg;
    static auto* document = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DocumentReferenceProxy")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldValueProxy")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "SetOptionsProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FirestoreCpp*), "WriteBatchSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writeBatch, document, data, options});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FirestoreCpp::ConvertFieldValueToVector
// Il2CppName: ConvertFieldValueToVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueVector* (*)(::Firebase::Firestore::FieldValueProxy*)>(&Firebase::Firestore::FirestoreCpp::ConvertFieldValueToVector)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldValueProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FirestoreCpp*), "ConvertFieldValueToVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FirestoreCpp::ConvertVectorToFieldValue
// Il2CppName: ConvertVectorToFieldValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)(::Firebase::Firestore::FieldValueVector*)>(&Firebase::Firestore::FirestoreCpp::ConvertVectorToFieldValue)> {
  static const MethodInfo* get() {
    static auto* wrapper = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldValueVector")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FirestoreCpp*), "ConvertVectorToFieldValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{wrapper});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::FirestoreCpp::QuerySnapshotDocuments
// Il2CppName: QuerySnapshotDocuments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::DocumentSnapshotVector* (*)(::Firebase::Firestore::QuerySnapshotProxy*)>(&Firebase::Firestore::FirestoreCpp::QuerySnapshotDocuments)> {
  static const MethodInfo* get() {
    static auto* snapshot = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "QuerySnapshotProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::FirestoreCpp*), "QuerySnapshotDocuments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{snapshot});
  }
};
