// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Firebase.Firestore.Converters.ConverterBase
#include "Firebase/Firestore/Converters/ConverterBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: Firebase::Firestore
namespace Firebase::Firestore {
  // Forward declaring type: DeserializationContext
  class DeserializationContext;
}
// Completed forward declares
// Type namespace: Firebase.Firestore.Converters
namespace Firebase::Firestore::Converters {
  // Forward declaring type: IntegerConverterBase
  class IntegerConverterBase;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Firestore::Converters::IntegerConverterBase);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Firestore::Converters::IntegerConverterBase*, "Firebase.Firestore.Converters", "IntegerConverterBase");
// Type namespace: Firebase.Firestore.Converters
namespace Firebase::Firestore::Converters {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Firestore.Converters.IntegerConverterBase
  // [TokenAttribute] Offset: FFFFFFFF
  class IntegerConverterBase : public ::Firebase::Firestore::Converters::ConverterBase {
    public:
    // System.Void .ctor(System.Type type)
    // Offset: 0xD4B3FC
    // Implemented from: Firebase.Firestore.Converters.ConverterBase
    // Base method: System.Void ConverterBase::.ctor(System.Type type)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static IntegerConverterBase* New_ctor(::System::Type* type) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::IntegerConverterBase::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<IntegerConverterBase*, creationType>(type)));
    }
    // protected override System.Object DeserializeDouble(Firebase.Firestore.DeserializationContext context, System.Double value)
    // Offset: 0xD62454
    // Implemented from: Firebase.Firestore.Converters.ConverterBase
    // Base method: System.Object ConverterBase::DeserializeDouble(Firebase.Firestore.DeserializationContext context, System.Double value)
    ::Il2CppObject* DeserializeDouble(::Firebase::Firestore::DeserializationContext* context, double value);
  }; // Firebase.Firestore.Converters.IntegerConverterBase
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Firestore::Converters::IntegerConverterBase::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Firebase::Firestore::Converters::IntegerConverterBase::DeserializeDouble
// Il2CppName: DeserializeDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Firebase::Firestore::Converters::IntegerConverterBase::*)(::Firebase::Firestore::DeserializationContext*, double)>(&Firebase::Firestore::Converters::IntegerConverterBase::DeserializeDouble)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DeserializationContext")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::IntegerConverterBase*), "DeserializeDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, value});
  }
};
