// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: PropertyInfo
  class PropertyInfo;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: Firebase::Firestore
namespace Firebase::Firestore {
  // Forward declaring type: DocumentReference
  class DocumentReference;
}
// Completed forward declares
// Type namespace: Firebase.Firestore.Converters
namespace Firebase::Firestore::Converters {
  // Forward declaring type: AttributedIdAssigner
  class AttributedIdAssigner;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Firestore::Converters::AttributedIdAssigner);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Firestore::Converters::AttributedIdAssigner*, "Firebase.Firestore.Converters", "AttributedIdAssigner");
// Type namespace: Firebase.Firestore.Converters
namespace Firebase::Firestore::Converters {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Firestore.Converters.AttributedIdAssigner
  // [TokenAttribute] Offset: FFFFFFFF
  class AttributedIdAssigner : public ::Il2CppObject {
    public:
    public:
    // private readonly System.Collections.Generic.List`1<System.Reflection.PropertyInfo> _idProperties
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<::System::Reflection::PropertyInfo*>* idProperties;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::System::Reflection::PropertyInfo*>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<System.Reflection.PropertyInfo> _referenceProperties
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::System::Reflection::PropertyInfo*>* referenceProperties;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::System::Reflection::PropertyInfo*>*) == 0x8);
    public:
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Firebase.Firestore.Converters.AttributedIdAssigner> s_assigners
    static ::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::AttributedIdAssigner*>* _get_s_assigners();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Firebase.Firestore.Converters.AttributedIdAssigner> s_assigners
    static void _set_s_assigners(::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::AttributedIdAssigner*>* value);
    // Get instance field reference: private readonly System.Collections.Generic.List`1<System.Reflection.PropertyInfo> _idProperties
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Reflection::PropertyInfo*>*& dyn__idProperties();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<System.Reflection.PropertyInfo> _referenceProperties
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Reflection::PropertyInfo*>*& dyn__referenceProperties();
    // private System.Void .ctor(System.Collections.Generic.List`1<System.Reflection.PropertyInfo> idProperties, System.Collections.Generic.List`1<System.Reflection.PropertyInfo> referenceProperties)
    // Offset: 0xD47DCC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AttributedIdAssigner* New_ctor(::System::Collections::Generic::List_1<::System::Reflection::PropertyInfo*>* idProperties, ::System::Collections::Generic::List_1<::System::Reflection::PropertyInfo*>* referenceProperties) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedIdAssigner::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AttributedIdAssigner*, creationType>(idProperties, referenceProperties)));
    }
    // static private System.Void .cctor()
    // Offset: 0xD488E4
    static void _cctor();
    // private System.Void AssignId(System.Object value, Firebase.Firestore.DocumentReference reference)
    // Offset: 0xD47E04
    void AssignId(::Il2CppObject* value, ::Firebase::Firestore::DocumentReference* reference);
    // static System.Void MaybeAssignId(System.Object value, Firebase.Firestore.DocumentReference reference)
    // Offset: 0xD48094
    static void MaybeAssignId(::Il2CppObject* value, ::Firebase::Firestore::DocumentReference* reference);
    // static private Firebase.Firestore.Converters.AttributedIdAssigner MaybeCreateAssigner(System.Type type)
    // Offset: 0xD48274
    static ::Firebase::Firestore::Converters::AttributedIdAssigner* MaybeCreateAssigner(::System::Type* type);
  }; // Firebase.Firestore.Converters.AttributedIdAssigner
  #pragma pack(pop)
  static check_size<sizeof(AttributedIdAssigner), 24 + sizeof(::System::Collections::Generic::List_1<::System::Reflection::PropertyInfo*>*)> __Firebase_Firestore_Converters_AttributedIdAssignerSizeCheck;
  static_assert(sizeof(AttributedIdAssigner) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Firestore::Converters::AttributedIdAssigner::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Firebase::Firestore::Converters::AttributedIdAssigner::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Firebase::Firestore::Converters::AttributedIdAssigner::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::AttributedIdAssigner*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::AttributedIdAssigner::AssignId
// Il2CppName: AssignId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Firestore::Converters::AttributedIdAssigner::*)(::Il2CppObject*, ::Firebase::Firestore::DocumentReference*)>(&Firebase::Firestore::Converters::AttributedIdAssigner::AssignId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* reference = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DocumentReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::AttributedIdAssigner*), "AssignId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, reference});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::AttributedIdAssigner::MaybeAssignId
// Il2CppName: MaybeAssignId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::Firebase::Firestore::DocumentReference*)>(&Firebase::Firestore::Converters::AttributedIdAssigner::MaybeAssignId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* reference = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DocumentReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::AttributedIdAssigner*), "MaybeAssignId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, reference});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::AttributedIdAssigner::MaybeCreateAssigner
// Il2CppName: MaybeCreateAssigner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::Converters::AttributedIdAssigner* (*)(::System::Type*)>(&Firebase::Firestore::Converters::AttributedIdAssigner::MaybeCreateAssigner)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::AttributedIdAssigner*), "MaybeCreateAssigner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
