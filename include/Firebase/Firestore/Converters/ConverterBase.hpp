// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Firebase.Firestore.Converters.IFirestoreInternalConverter
#include "Firebase/Firestore/Converters/IFirestoreInternalConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: Firebase::Firestore
namespace Firebase::Firestore {
  // Forward declaring type: DeserializationContext
  class DeserializationContext;
  // Forward declaring type: FieldValueProxy
  class FieldValueProxy;
  // Forward declaring type: SerializationContext
  class SerializationContext;
  // Forward declaring type: GeoPoint
  struct GeoPoint;
  // Forward declaring type: DocumentReference
  class DocumentReference;
  // Forward declaring type: Timestamp
  struct Timestamp;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Completed forward declares
// Type namespace: Firebase.Firestore.Converters
namespace Firebase::Firestore::Converters {
  // Forward declaring type: ConverterBase
  class ConverterBase;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Firestore::Converters::ConverterBase);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Firestore::Converters::ConverterBase*, "Firebase.Firestore.Converters", "ConverterBase");
// Type namespace: Firebase.Firestore.Converters
namespace Firebase::Firestore::Converters {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Firestore.Converters.ConverterBase
  // [TokenAttribute] Offset: FFFFFFFF
  class ConverterBase : public ::Il2CppObject/*, public ::Firebase::Firestore::Converters::IFirestoreInternalConverter*/ {
    public:
    public:
    // protected readonly System.Type TargetType
    // Size: 0x8
    // Offset: 0x10
    ::System::Type* TargetType;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Firebase::Firestore::Converters::IFirestoreInternalConverter
    operator ::Firebase::Firestore::Converters::IFirestoreInternalConverter() noexcept {
      return *reinterpret_cast<::Firebase::Firestore::Converters::IFirestoreInternalConverter*>(this);
    }
    // Creating conversion operator: operator ::System::Type*
    constexpr operator ::System::Type*() const noexcept {
      return TargetType;
    }
    // Get instance field reference: protected readonly System.Type TargetType
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn_TargetType();
    // protected System.Void .ctor(System.Type targetType)
    // Offset: 0xD4AD1C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConverterBase* New_ctor(::System::Type* targetType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConverterBase*, creationType>(targetType)));
    }
    // public System.Object DeserializeMap(Firebase.Firestore.DeserializationContext context, Firebase.Firestore.FieldValueProxy mapValue)
    // Offset: 0xD4C860
    ::Il2CppObject* DeserializeMap(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* mapValue);
    // public System.Object DeserializeValue(Firebase.Firestore.DeserializationContext context, Firebase.Firestore.FieldValueProxy value)
    // Offset: 0xD4C8C4
    ::Il2CppObject* DeserializeValue(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* value);
    // public Firebase.Firestore.FieldValueProxy Serialize(Firebase.Firestore.SerializationContext context, System.Object value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Firebase::Firestore::FieldValueProxy* Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value);
    // public System.Void SerializeMap(Firebase.Firestore.SerializationContext context, System.Object value, System.Collections.Generic.IDictionary`2<System.String,Firebase.Firestore.FieldValueProxy> map)
    // Offset: 0xD4D20C
    void SerializeMap(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value, ::System::Collections::Generic::IDictionary_2<::StringW, ::Firebase::Firestore::FieldValueProxy*>* map);
    // protected System.Object DeserializeArray(Firebase.Firestore.DeserializationContext context, Firebase.Firestore.FieldValueProxy arrayValue)
    // Offset: 0xD4D270
    ::Il2CppObject* DeserializeArray(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* arrayValue);
    // protected System.Object DeserializeBoolean(Firebase.Firestore.DeserializationContext context, System.Boolean value)
    // Offset: 0xD4D2D4
    ::Il2CppObject* DeserializeBoolean(::Firebase::Firestore::DeserializationContext* context, bool value);
    // protected System.Object DeserializeBytes(Firebase.Firestore.DeserializationContext context, System.Byte[] value)
    // Offset: 0xD4D338
    ::Il2CppObject* DeserializeBytes(::Firebase::Firestore::DeserializationContext* context, ::ArrayW<uint8_t> value);
    // protected System.Object DeserializeDouble(Firebase.Firestore.DeserializationContext context, System.Double value)
    // Offset: 0xD4D39C
    ::Il2CppObject* DeserializeDouble(::Firebase::Firestore::DeserializationContext* context, double value);
    // protected System.Object DeserializeGeoPoint(Firebase.Firestore.DeserializationContext context, Firebase.Firestore.GeoPoint value)
    // Offset: 0xD4D400
    ::Il2CppObject* DeserializeGeoPoint(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::GeoPoint value);
    // protected System.Object DeserializeInteger(Firebase.Firestore.DeserializationContext context, System.Int64 value)
    // Offset: 0xD4D464
    ::Il2CppObject* DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value);
    // protected System.Object DeserializeReference(Firebase.Firestore.DeserializationContext context, Firebase.Firestore.DocumentReference value)
    // Offset: 0xD4D4C8
    ::Il2CppObject* DeserializeReference(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::DocumentReference* value);
    // protected System.Object DeserializeString(Firebase.Firestore.DeserializationContext context, System.String value)
    // Offset: 0xD4D52C
    ::Il2CppObject* DeserializeString(::Firebase::Firestore::DeserializationContext* context, ::StringW value);
    // protected System.Object DeserializeTimestamp(Firebase.Firestore.DeserializationContext context, Firebase.Firestore.Timestamp value)
    // Offset: 0xD4D590
    ::Il2CppObject* DeserializeTimestamp(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::Timestamp value);
    // static Firebase.Firestore.FieldValueProxy ConvertToProxyMap(System.Collections.Generic.IDictionary`2<System.String,Firebase.Firestore.FieldValueProxy> map)
    // Offset: 0xD4D5F4
    static ::Firebase::Firestore::FieldValueProxy* ConvertToProxyMap(::System::Collections::Generic::IDictionary_2<::StringW, ::Firebase::Firestore::FieldValueProxy*>* map);
    // static Firebase.Firestore.FieldValueProxy ConvertToProxyArray(System.Collections.Generic.IList`1<Firebase.Firestore.FieldValueProxy> list)
    // Offset: 0xD4DB38
    static ::Firebase::Firestore::FieldValueProxy* ConvertToProxyArray(::System::Collections::Generic::IList_1<::Firebase::Firestore::FieldValueProxy*>* list);
    // static System.Byte[] ConvertFromProxyBlob(Firebase.Firestore.FieldValueProxy internalValue)
    // Offset: 0xD4CC24
    static ::ArrayW<uint8_t> ConvertFromProxyBlob(::Firebase::Firestore::FieldValueProxy* internalValue);
    // static Firebase.Firestore.FieldValueProxy ConvertToProxyBlob(System.Byte[] value)
    // Offset: 0xD4ADD8
    static ::Firebase::Firestore::FieldValueProxy* ConvertToProxyBlob(::ArrayW<uint8_t> value);
  }; // Firebase.Firestore.Converters.ConverterBase
  #pragma pack(pop)
  static check_size<sizeof(ConverterBase), 16 + sizeof(::System::Type*)> __Firebase_Firestore_Converters_ConverterBaseSizeCheck;
  static_assert(sizeof(ConverterBase) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::DeserializeMap
// Il2CppName: DeserializeMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Firebase::Firestore::Converters::ConverterBase::*)(::Firebase::Firestore::DeserializationContext*, ::Firebase::Firestore::FieldValueProxy*)>(&Firebase::Firestore::Converters::ConverterBase::DeserializeMap)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DeserializationContext")->byval_arg;
    static auto* mapValue = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldValueProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ConverterBase*), "DeserializeMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, mapValue});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::DeserializeValue
// Il2CppName: DeserializeValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Firebase::Firestore::Converters::ConverterBase::*)(::Firebase::Firestore::DeserializationContext*, ::Firebase::Firestore::FieldValueProxy*)>(&Firebase::Firestore::Converters::ConverterBase::DeserializeValue)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DeserializationContext")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldValueProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ConverterBase*), "DeserializeValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (Firebase::Firestore::Converters::ConverterBase::*)(::Firebase::Firestore::SerializationContext*, ::Il2CppObject*)>(&Firebase::Firestore::Converters::ConverterBase::Serialize)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "SerializationContext")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ConverterBase*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::SerializeMap
// Il2CppName: SerializeMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Firestore::Converters::ConverterBase::*)(::Firebase::Firestore::SerializationContext*, ::Il2CppObject*, ::System::Collections::Generic::IDictionary_2<::StringW, ::Firebase::Firestore::FieldValueProxy*>*)>(&Firebase::Firestore::Converters::ConverterBase::SerializeMap)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "SerializationContext")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* map = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldValueProxy")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ConverterBase*), "SerializeMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, value, map});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::DeserializeArray
// Il2CppName: DeserializeArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Firebase::Firestore::Converters::ConverterBase::*)(::Firebase::Firestore::DeserializationContext*, ::Firebase::Firestore::FieldValueProxy*)>(&Firebase::Firestore::Converters::ConverterBase::DeserializeArray)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DeserializationContext")->byval_arg;
    static auto* arrayValue = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldValueProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ConverterBase*), "DeserializeArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, arrayValue});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::DeserializeBoolean
// Il2CppName: DeserializeBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Firebase::Firestore::Converters::ConverterBase::*)(::Firebase::Firestore::DeserializationContext*, bool)>(&Firebase::Firestore::Converters::ConverterBase::DeserializeBoolean)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DeserializationContext")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ConverterBase*), "DeserializeBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::DeserializeBytes
// Il2CppName: DeserializeBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Firebase::Firestore::Converters::ConverterBase::*)(::Firebase::Firestore::DeserializationContext*, ::ArrayW<uint8_t>)>(&Firebase::Firestore::Converters::ConverterBase::DeserializeBytes)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DeserializationContext")->byval_arg;
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ConverterBase*), "DeserializeBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::DeserializeDouble
// Il2CppName: DeserializeDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Firebase::Firestore::Converters::ConverterBase::*)(::Firebase::Firestore::DeserializationContext*, double)>(&Firebase::Firestore::Converters::ConverterBase::DeserializeDouble)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DeserializationContext")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ConverterBase*), "DeserializeDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::DeserializeGeoPoint
// Il2CppName: DeserializeGeoPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Firebase::Firestore::Converters::ConverterBase::*)(::Firebase::Firestore::DeserializationContext*, ::Firebase::Firestore::GeoPoint)>(&Firebase::Firestore::Converters::ConverterBase::DeserializeGeoPoint)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DeserializationContext")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "GeoPoint")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ConverterBase*), "DeserializeGeoPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::DeserializeInteger
// Il2CppName: DeserializeInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Firebase::Firestore::Converters::ConverterBase::*)(::Firebase::Firestore::DeserializationContext*, int64_t)>(&Firebase::Firestore::Converters::ConverterBase::DeserializeInteger)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DeserializationContext")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ConverterBase*), "DeserializeInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::DeserializeReference
// Il2CppName: DeserializeReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Firebase::Firestore::Converters::ConverterBase::*)(::Firebase::Firestore::DeserializationContext*, ::Firebase::Firestore::DocumentReference*)>(&Firebase::Firestore::Converters::ConverterBase::DeserializeReference)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DeserializationContext")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DocumentReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ConverterBase*), "DeserializeReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::DeserializeString
// Il2CppName: DeserializeString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Firebase::Firestore::Converters::ConverterBase::*)(::Firebase::Firestore::DeserializationContext*, ::StringW)>(&Firebase::Firestore::Converters::ConverterBase::DeserializeString)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DeserializationContext")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ConverterBase*), "DeserializeString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::DeserializeTimestamp
// Il2CppName: DeserializeTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Firebase::Firestore::Converters::ConverterBase::*)(::Firebase::Firestore::DeserializationContext*, ::Firebase::Firestore::Timestamp)>(&Firebase::Firestore::Converters::ConverterBase::DeserializeTimestamp)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DeserializationContext")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "Timestamp")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ConverterBase*), "DeserializeTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, value});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::ConvertToProxyMap
// Il2CppName: ConvertToProxyMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)(::System::Collections::Generic::IDictionary_2<::StringW, ::Firebase::Firestore::FieldValueProxy*>*)>(&Firebase::Firestore::Converters::ConverterBase::ConvertToProxyMap)> {
  static const MethodInfo* get() {
    static auto* map = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldValueProxy")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ConverterBase*), "ConvertToProxyMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{map});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::ConvertToProxyArray
// Il2CppName: ConvertToProxyArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)(::System::Collections::Generic::IList_1<::Firebase::Firestore::FieldValueProxy*>*)>(&Firebase::Firestore::Converters::ConverterBase::ConvertToProxyArray)> {
  static const MethodInfo* get() {
    static auto* list = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldValueProxy")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ConverterBase*), "ConvertToProxyArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{list});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::ConvertFromProxyBlob
// Il2CppName: ConvertFromProxyBlob
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::Firebase::Firestore::FieldValueProxy*)>(&Firebase::Firestore::Converters::ConverterBase::ConvertFromProxyBlob)> {
  static const MethodInfo* get() {
    static auto* internalValue = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldValueProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ConverterBase*), "ConvertFromProxyBlob", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{internalValue});
  }
};
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ConverterBase::ConvertToProxyBlob
// Il2CppName: ConvertToProxyBlob
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Firestore::FieldValueProxy* (*)(::ArrayW<uint8_t>)>(&Firebase::Firestore::Converters::ConverterBase::ConvertToProxyBlob)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ConverterBase*), "ConvertToProxyBlob", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
