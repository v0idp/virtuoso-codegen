// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Firebase.Firestore.Converters.EnumerableConverterBase
#include "Firebase/Firestore/Converters/EnumerableConverterBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: Firebase::Firestore
namespace Firebase::Firestore {
  // Forward declaring type: DeserializationContext
  class DeserializationContext;
  // Forward declaring type: FieldValueProxy
  class FieldValueProxy;
}
// Completed forward declares
// Type namespace: Firebase.Firestore.Converters
namespace Firebase::Firestore::Converters {
  // Forward declaring type: ArrayConverter
  class ArrayConverter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Firestore::Converters::ArrayConverter);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Firestore::Converters::ArrayConverter*, "Firebase.Firestore.Converters", "ArrayConverter");
// Type namespace: Firebase.Firestore.Converters
namespace Firebase::Firestore::Converters {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Firestore.Converters.ArrayConverter
  // [TokenAttribute] Offset: FFFFFFFF
  class ArrayConverter : public ::Firebase::Firestore::Converters::EnumerableConverterBase {
    public:
    public:
    // private readonly System.Type _elementType
    // Size: 0x8
    // Offset: 0x18
    ::System::Type* elementType;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::Type*
    constexpr operator ::System::Type*() const noexcept = delete;
    // Get instance field reference: private readonly System.Type _elementType
    [[deprecated]] ::System::Type*& dyn__elementType();
    // System.Void .ctor(System.Type elementType)
    // Offset: 0xD47434
    // Implemented from: Firebase.Firestore.Converters.EnumerableConverterBase
    // Base method: System.Void EnumerableConverterBase::.ctor(System.Type elementType)
    // Base method: System.Void ConverterBase::.ctor(System.Type elementType)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ArrayConverter* New_ctor(::System::Type* elementType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ArrayConverter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ArrayConverter*, creationType>(elementType)));
    }
    // protected override System.Object DeserializeArray(Firebase.Firestore.DeserializationContext context, Firebase.Firestore.FieldValueProxy arrayValue)
    // Offset: 0xD474B8
    // Implemented from: Firebase.Firestore.Converters.ConverterBase
    // Base method: System.Object ConverterBase::DeserializeArray(Firebase.Firestore.DeserializationContext context, Firebase.Firestore.FieldValueProxy arrayValue)
    ::Il2CppObject* DeserializeArray(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* arrayValue);
  }; // Firebase.Firestore.Converters.ArrayConverter
  #pragma pack(pop)
  static check_size<sizeof(ArrayConverter), 24 + sizeof(::System::Type*)> __Firebase_Firestore_Converters_ArrayConverterSizeCheck;
  static_assert(sizeof(ArrayConverter) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ArrayConverter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Firebase::Firestore::Converters::ArrayConverter::DeserializeArray
// Il2CppName: DeserializeArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Firebase::Firestore::Converters::ArrayConverter::*)(::Firebase::Firestore::DeserializationContext*, ::Firebase::Firestore::FieldValueProxy*)>(&Firebase::Firestore::Converters::ArrayConverter::DeserializeArray)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "DeserializationContext")->byval_arg;
    static auto* arrayValue = &::il2cpp_utils::GetClassFromName("Firebase.Firestore", "FieldValueProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Firestore::Converters::ArrayConverter*), "DeserializeArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, arrayValue});
  }
};
