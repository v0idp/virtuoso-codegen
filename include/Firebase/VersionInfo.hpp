// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Firebase
namespace Firebase {
  // Forward declaring type: VersionInfo
  class VersionInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::VersionInfo);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::VersionInfo*, "Firebase", "VersionInfo");
// Type namespace: Firebase
namespace Firebase {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.VersionInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class VersionInfo : public ::Il2CppObject {
    public:
    // static System.String get_SdkVersion()
    // Offset: 0x1887FDC
    static ::StringW get_SdkVersion();
  }; // Firebase.VersionInfo
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::VersionInfo::get_SdkVersion
// Il2CppName: get_SdkVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&Firebase::VersionInfo::get_SdkVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::VersionInfo*), "get_SdkVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
