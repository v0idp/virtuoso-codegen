// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Firebase.LogLevel
#include "Firebase/LogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: WeakReference
  class WeakReference;
}
// Completed forward declares
// Type namespace: Firebase.Storage.Internal
namespace Firebase::Storage::Internal {
  // Forward declaring type: ModuleLogger
  class ModuleLogger;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Storage::Internal::ModuleLogger);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Storage::Internal::ModuleLogger*, "Firebase.Storage.Internal", "ModuleLogger");
// Type namespace: Firebase.Storage.Internal
namespace Firebase::Storage::Internal {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Storage.Internal.ModuleLogger
  // [TokenAttribute] Offset: FFFFFFFF
  class ModuleLogger : public ::Il2CppObject {
    public:
    public:
    // private Firebase.Storage.Internal.ModuleLogger parent
    // Size: 0x8
    // Offset: 0x10
    ::Firebase::Storage::Internal::ModuleLogger* parent;
    // Field size check
    static_assert(sizeof(::Firebase::Storage::Internal::ModuleLogger*) == 0x8);
    // private System.Collections.Generic.List`1<Firebase.Storage.Internal.ModuleLogger> children
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::Firebase::Storage::Internal::ModuleLogger*>* children;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Firebase::Storage::Internal::ModuleLogger*>*) == 0x8);
    // private System.String tag
    // Size: 0x8
    // Offset: 0x20
    ::StringW tag;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private Firebase.LogLevel logLevel
    // Size: 0x4
    // Offset: 0x28
    ::Firebase::LogLevel logLevel;
    // Field size check
    static_assert(sizeof(::Firebase::LogLevel) == 0x4);
    public:
    // Get static field: static private System.Object lockObject
    static ::Il2CppObject* _get_lockObject();
    // Set static field: static private System.Object lockObject
    static void _set_lockObject(::Il2CppObject* value);
    // Get static field: static private System.Collections.Generic.List`1<System.WeakReference> roots
    static ::System::Collections::Generic::List_1<::System::WeakReference*>* _get_roots();
    // Set static field: static private System.Collections.Generic.List`1<System.WeakReference> roots
    static void _set_roots(::System::Collections::Generic::List_1<::System::WeakReference*>* value);
    // Get instance field reference: private Firebase.Storage.Internal.ModuleLogger parent
    [[deprecated]] ::Firebase::Storage::Internal::ModuleLogger*& dyn_parent();
    // Get instance field reference: private System.Collections.Generic.List`1<Firebase.Storage.Internal.ModuleLogger> children
    [[deprecated]] ::System::Collections::Generic::List_1<::Firebase::Storage::Internal::ModuleLogger*>*& dyn_children();
    // Get instance field reference: private System.String tag
    [[deprecated]] ::StringW& dyn_tag();
    // Get instance field reference: private Firebase.LogLevel logLevel
    [[deprecated]] ::Firebase::LogLevel& dyn_logLevel();
    // public Firebase.LogLevel get_Level()
    // Offset: 0x1835654
    ::Firebase::LogLevel get_Level();
    // public System.Void set_Level(Firebase.LogLevel value)
    // Offset: 0x183572C
    void set_Level(::Firebase::LogLevel value);
    // public System.String get_Tag()
    // Offset: 0x1830C50
    ::StringW get_Tag();
    // public System.Void set_Tag(System.String value)
    // Offset: 0x1835734
    void set_Tag(::StringW value);
    // public System.Void .ctor(Firebase.Storage.Internal.ModuleLogger parentLogger)
    // Offset: 0x1830A40
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ModuleLogger* New_ctor(::Firebase::Storage::Internal::ModuleLogger* parentLogger) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Storage::Internal::ModuleLogger::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ModuleLogger*, creationType>(parentLogger)));
    }
    // static private System.Void .cctor()
    // Offset: 0x183573C
    static void _cctor();
    // public System.Void LogMessage(Firebase.LogLevel level, System.String message)
    // Offset: 0x1830E2C
    void LogMessage(::Firebase::LogLevel level, ::StringW message);
    // protected override System.Void Finalize()
    // Offset: 0x1835264
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // Firebase.Storage.Internal.ModuleLogger
  #pragma pack(pop)
  static check_size<sizeof(ModuleLogger), 40 + sizeof(::Firebase::LogLevel)> __Firebase_Storage_Internal_ModuleLoggerSizeCheck;
  static_assert(sizeof(ModuleLogger) == 0x2C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Storage::Internal::ModuleLogger::get_Level
// Il2CppName: get_Level
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::LogLevel (Firebase::Storage::Internal::ModuleLogger::*)()>(&Firebase::Storage::Internal::ModuleLogger::get_Level)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::Internal::ModuleLogger*), "get_Level", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Storage::Internal::ModuleLogger::set_Level
// Il2CppName: set_Level
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Storage::Internal::ModuleLogger::*)(::Firebase::LogLevel)>(&Firebase::Storage::Internal::ModuleLogger::set_Level)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Firebase", "LogLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::Internal::ModuleLogger*), "set_Level", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Firebase::Storage::Internal::ModuleLogger::get_Tag
// Il2CppName: get_Tag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Firebase::Storage::Internal::ModuleLogger::*)()>(&Firebase::Storage::Internal::ModuleLogger::get_Tag)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::Internal::ModuleLogger*), "get_Tag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Storage::Internal::ModuleLogger::set_Tag
// Il2CppName: set_Tag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Storage::Internal::ModuleLogger::*)(::StringW)>(&Firebase::Storage::Internal::ModuleLogger::set_Tag)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::Internal::ModuleLogger*), "set_Tag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Firebase::Storage::Internal::ModuleLogger::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Firebase::Storage::Internal::ModuleLogger::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Firebase::Storage::Internal::ModuleLogger::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::Internal::ModuleLogger*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Storage::Internal::ModuleLogger::LogMessage
// Il2CppName: LogMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Storage::Internal::ModuleLogger::*)(::Firebase::LogLevel, ::StringW)>(&Firebase::Storage::Internal::ModuleLogger::LogMessage)> {
  static const MethodInfo* get() {
    static auto* level = &::il2cpp_utils::GetClassFromName("Firebase", "LogLevel")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::Internal::ModuleLogger*), "LogMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{level, message});
  }
};
// Writing MetadataGetter for method: Firebase::Storage::Internal::ModuleLogger::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Storage::Internal::ModuleLogger::*)()>(&Firebase::Storage::Internal::ModuleLogger::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::Internal::ModuleLogger*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
