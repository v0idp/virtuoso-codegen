// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Firebase::Storage
namespace Firebase::Storage {
  // Forward declaring type: FirebaseStorage
  class FirebaseStorage;
}
// Completed forward declares
// Type namespace: Firebase.Storage
namespace Firebase::Storage {
  // Forward declaring type: MetadataInternal
  class MetadataInternal;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Storage::MetadataInternal);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Storage::MetadataInternal*, "Firebase.Storage", "MetadataInternal");
// Type namespace: Firebase.Storage
namespace Firebase::Storage {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Storage.MetadataInternal
  // [TokenAttribute] Offset: FFFFFFFF
  class MetadataInternal : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    public:
    // private System.Runtime.InteropServices.HandleRef swigCPtr
    // Size: 0x10
    // Offset: 0x10
    ::System::Runtime::InteropServices::HandleRef swigCPtr;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::HandleRef) == 0x10);
    // protected System.Boolean swigCMemOwn
    // Size: 0x1
    // Offset: 0x20
    bool swigCMemOwn;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: swigCMemOwn and: storage
    char __padding1[0x7] = {};
    // Firebase.Storage.FirebaseStorage storage
    // Size: 0x8
    // Offset: 0x28
    ::Firebase::Storage::FirebaseStorage* storage;
    // Field size check
    static_assert(sizeof(::Firebase::Storage::FirebaseStorage*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private System.Runtime.InteropServices.HandleRef swigCPtr
    [[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& dyn_swigCPtr();
    // Get instance field reference: protected System.Boolean swigCMemOwn
    [[deprecated("Use field access instead!")]] bool& dyn_swigCMemOwn();
    // Get instance field reference: Firebase.Storage.FirebaseStorage storage
    [[deprecated("Use field access instead!")]] ::Firebase::Storage::FirebaseStorage*& dyn_storage();
    // public System.Void set_ContentType(System.String value)
    // Offset: 0x1834B68
    void set_ContentType(::StringW value);
    // System.Void .ctor(System.IntPtr cPtr, System.Boolean cMemoryOwn)
    // Offset: 0x183489C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MetadataInternal* New_ctor(::System::IntPtr cPtr, bool cMemoryOwn) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Storage::MetadataInternal::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MetadataInternal*, creationType>(cPtr, cMemoryOwn)));
    }
    // System.Void .ctor(Firebase.Storage.FirebaseStorage storage)
    // Offset: 0x1834C14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MetadataInternal* New_ctor(::Firebase::Storage::FirebaseStorage* storage) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Storage::MetadataInternal::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MetadataInternal*, creationType>(storage)));
    }
    // System.Void .ctor()
    // Offset: 0x1834C3C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MetadataInternal* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Storage::MetadataInternal::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MetadataInternal*, creationType>()));
    }
    // static System.Runtime.InteropServices.HandleRef getCPtr(Firebase.Storage.MetadataInternal obj)
    // Offset: 0x1834D50
    static ::System::Runtime::InteropServices::HandleRef getCPtr(::Firebase::Storage::MetadataInternal* obj);
    // public System.Void Dispose()
    // Offset: 0x1834E2C
    void Dispose();
    // Firebase.Storage.MetadataInternal Copy()
    // Offset: 0x183503C
    ::Firebase::Storage::MetadataInternal* Copy();
    // Firebase.Storage.MetadataInternal CopyCppObject()
    // Offset: 0x183506C
    ::Firebase::Storage::MetadataInternal* CopyCppObject();
    // protected override System.Void Finalize()
    // Offset: 0x1834DBC
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // Firebase.Storage.MetadataInternal
  #pragma pack(pop)
  static check_size<sizeof(MetadataInternal), 40 + sizeof(::Firebase::Storage::FirebaseStorage*)> __Firebase_Storage_MetadataInternalSizeCheck;
  static_assert(sizeof(MetadataInternal) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Storage::MetadataInternal::set_ContentType
// Il2CppName: set_ContentType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Storage::MetadataInternal::*)(::StringW)>(&Firebase::Storage::MetadataInternal::set_ContentType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::MetadataInternal*), "set_ContentType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Firebase::Storage::MetadataInternal::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Firebase::Storage::MetadataInternal::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Firebase::Storage::MetadataInternal::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Firebase::Storage::MetadataInternal::getCPtr
// Il2CppName: getCPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::InteropServices::HandleRef (*)(::Firebase::Storage::MetadataInternal*)>(&Firebase::Storage::MetadataInternal::getCPtr)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("Firebase.Storage", "MetadataInternal")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::MetadataInternal*), "getCPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Firebase::Storage::MetadataInternal::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Storage::MetadataInternal::*)()>(&Firebase::Storage::MetadataInternal::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::MetadataInternal*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Storage::MetadataInternal::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Storage::MetadataInternal* (Firebase::Storage::MetadataInternal::*)()>(&Firebase::Storage::MetadataInternal::Copy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::MetadataInternal*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Storage::MetadataInternal::CopyCppObject
// Il2CppName: CopyCppObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Storage::MetadataInternal* (Firebase::Storage::MetadataInternal::*)()>(&Firebase::Storage::MetadataInternal::CopyCppObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::MetadataInternal*), "CopyCppObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Storage::MetadataInternal::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Storage::MetadataInternal::*)()>(&Firebase::Storage::MetadataInternal::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::MetadataInternal*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
