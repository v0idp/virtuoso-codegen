// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Firebase.Storage.StorageReference/Firebase.Storage.<PutFileAsync>c__AnonStorey6
#include "Firebase/Storage/StorageReference_-PutFileAsync-c__AnonStorey6.hpp"
// Including type: Firebase.Storage.StorageReference
#include "Firebase/Storage/StorageReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Forward declaring namespace: Firebase::Storage
namespace Firebase::Storage {
  // Forward declaring type: MetadataInternal
  class MetadataInternal;
  // Forward declaring type: StorageMetadata
  class StorageMetadata;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Storage::StorageReference::$PutFileAsync$c__AnonStorey6::$PutFileAsync$c__AnonStorey5);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Storage::StorageReference::$PutFileAsync$c__AnonStorey6::$PutFileAsync$c__AnonStorey5*, "Firebase.Storage", "StorageReference/<PutFileAsync>c__AnonStorey6/<PutFileAsync>c__AnonStorey5");
// Type namespace: Firebase.Storage
namespace Firebase::Storage {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Storage.StorageReference/Firebase.Storage.<PutFileAsync>c__AnonStorey6/Firebase.Storage.<PutFileAsync>c__AnonStorey5
  // [TokenAttribute] Offset: FFFFFFFF
  class StorageReference::$PutFileAsync$c__AnonStorey6::$PutFileAsync$c__AnonStorey5 : public ::Il2CppObject {
    public:
    public:
    // System.Threading.Tasks.Task`1<Firebase.Storage.MetadataInternal> task
    // Size: 0x8
    // Offset: 0x10
    ::System::Threading::Tasks::Task_1<::Firebase::Storage::MetadataInternal*>* task;
    // Field size check
    static_assert(sizeof(::System::Threading::Tasks::Task_1<::Firebase::Storage::MetadataInternal*>*) == 0x8);
    // Firebase.Storage.StorageReference/Firebase.Storage.<PutFileAsync>c__AnonStorey4 <>f__ref$4
    // Size: 0x8
    // Offset: 0x18
    ::Firebase::Storage::StorageReference::$PutFileAsync$c__AnonStorey4* $$f__ref$4;
    // Field size check
    static_assert(sizeof(::Firebase::Storage::StorageReference::$PutFileAsync$c__AnonStorey4*) == 0x8);
    // Firebase.Storage.StorageReference/Firebase.Storage.<PutFileAsync>c__AnonStorey6 <>f__ref$6
    // Size: 0x8
    // Offset: 0x20
    ::Firebase::Storage::StorageReference::$PutFileAsync$c__AnonStorey6* $$f__ref$6;
    // Field size check
    static_assert(sizeof(::Firebase::Storage::StorageReference::$PutFileAsync$c__AnonStorey6*) == 0x8);
    public:
    // Get instance field reference: System.Threading.Tasks.Task`1<Firebase.Storage.MetadataInternal> task
    [[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<::Firebase::Storage::MetadataInternal*>*& dyn_task();
    // Get instance field reference: Firebase.Storage.StorageReference/Firebase.Storage.<PutFileAsync>c__AnonStorey4 <>f__ref$4
    [[deprecated("Use field access instead!")]] ::Firebase::Storage::StorageReference::$PutFileAsync$c__AnonStorey4*& dyn_$$f__ref$4();
    // Get instance field reference: Firebase.Storage.StorageReference/Firebase.Storage.<PutFileAsync>c__AnonStorey6 <>f__ref$6
    [[deprecated("Use field access instead!")]] ::Firebase::Storage::StorageReference::$PutFileAsync$c__AnonStorey6*& dyn_$$f__ref$6();
    // public System.Void .ctor()
    // Offset: 0x183B988
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StorageReference::$PutFileAsync$c__AnonStorey6::$PutFileAsync$c__AnonStorey5* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Storage::StorageReference::$PutFileAsync$c__AnonStorey6::$PutFileAsync$c__AnonStorey5::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StorageReference::$PutFileAsync$c__AnonStorey6::$PutFileAsync$c__AnonStorey5*, creationType>()));
    }
    // Firebase.Storage.StorageMetadata <>m__0()
    // Offset: 0x183C534
    ::Firebase::Storage::StorageMetadata* $$m__0();
  }; // Firebase.Storage.StorageReference/Firebase.Storage.<PutFileAsync>c__AnonStorey6/Firebase.Storage.<PutFileAsync>c__AnonStorey5
  #pragma pack(pop)
  static check_size<sizeof(StorageReference::$PutFileAsync$c__AnonStorey6::$PutFileAsync$c__AnonStorey5), 32 + sizeof(::Firebase::Storage::StorageReference::$PutFileAsync$c__AnonStorey6*)> __Firebase_Storage_StorageReference_$PutFileAsync$c__AnonStorey6_$PutFileAsync$c__AnonStorey5SizeCheck;
  static_assert(sizeof(StorageReference::$PutFileAsync$c__AnonStorey6::$PutFileAsync$c__AnonStorey5) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Storage::StorageReference::$PutFileAsync$c__AnonStorey6::$PutFileAsync$c__AnonStorey5::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Firebase::Storage::StorageReference::$PutFileAsync$c__AnonStorey6::$PutFileAsync$c__AnonStorey5::$$m__0
// Il2CppName: <>m__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Storage::StorageMetadata* (Firebase::Storage::StorageReference::$PutFileAsync$c__AnonStorey6::$PutFileAsync$c__AnonStorey5::*)()>(&Firebase::Storage::StorageReference::$PutFileAsync$c__AnonStorey6::$PutFileAsync$c__AnonStorey5::$$m__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::StorageReference::$PutFileAsync$c__AnonStorey6::$PutFileAsync$c__AnonStorey5*), "<>m__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
