// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Firebase::Storage
namespace Firebase::Storage {
  // Forward declaring type: StorageReference
  class StorageReference;
  // Forward declaring type: MetadataInternal
  class MetadataInternal;
  // Forward declaring type: MetadataChange
  class MetadataChange;
}
// Completed forward declares
// Type namespace: Firebase.Storage
namespace Firebase::Storage {
  // Forward declaring type: StorageMetadata
  class StorageMetadata;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Storage::StorageMetadata);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Storage::StorageMetadata*, "Firebase.Storage", "StorageMetadata");
// Type namespace: Firebase.Storage
namespace Firebase::Storage {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Storage.StorageMetadata
  // [TokenAttribute] Offset: FFFFFFFF
  class StorageMetadata : public ::Il2CppObject {
    public:
    public:
    // private readonly Firebase.Storage.StorageReference storageReference
    // Size: 0x8
    // Offset: 0x10
    ::Firebase::Storage::StorageReference* storageReference;
    // Field size check
    static_assert(sizeof(::Firebase::Storage::StorageReference*) == 0x8);
    // [DebuggerBrowsableAttribute] Offset: 0x6E3570
    // private Firebase.Storage.MetadataInternal <Internal>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::Firebase::Storage::MetadataInternal* Internal;
    // Field size check
    static_assert(sizeof(::Firebase::Storage::MetadataInternal*) == 0x8);
    public:
    // Get static field: static private readonly System.DateTime UnixEpoch
    static ::System::DateTime _get_UnixEpoch();
    // Set static field: static private readonly System.DateTime UnixEpoch
    static void _set_UnixEpoch(::System::DateTime value);
    // Get instance field reference: private readonly Firebase.Storage.StorageReference storageReference
    [[deprecated("Use field access instead!")]] ::Firebase::Storage::StorageReference*& dyn_storageReference();
    // Get instance field reference: private Firebase.Storage.MetadataInternal <Internal>k__BackingField
    [[deprecated("Use field access instead!")]] ::Firebase::Storage::MetadataInternal*& dyn_$Internal$k__BackingField();
    // Firebase.Storage.MetadataInternal get_Internal()
    // Offset: 0x1837D40
    ::Firebase::Storage::MetadataInternal* get_Internal();
    // private System.Void set_Internal(Firebase.Storage.MetadataInternal value)
    // Offset: 0x1837D48
    void set_Internal(::Firebase::Storage::MetadataInternal* value);
    // public System.Void .ctor()
    // Offset: 0x18349E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StorageMetadata* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Storage::StorageMetadata::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StorageMetadata*, creationType>()));
    }
    // System.Void .ctor(Firebase.Storage.StorageReference reference, Firebase.Storage.MetadataInternal metadata)
    // Offset: 0x1837D08
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StorageMetadata* New_ctor(::Firebase::Storage::StorageReference* reference, ::Firebase::Storage::MetadataInternal* metadata) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Storage::StorageMetadata::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StorageMetadata*, creationType>(reference, metadata)));
    }
    // System.Void .ctor(Firebase.Storage.StorageMetadata metadataToCopy)
    // Offset: 0x1834AF0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StorageMetadata* New_ctor(::Firebase::Storage::StorageMetadata* metadataToCopy) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Storage::StorageMetadata::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StorageMetadata*, creationType>(metadataToCopy)));
    }
    // static private System.Void .cctor()
    // Offset: 0x1837DDC
    static void _cctor();
    // static Firebase.Storage.MetadataInternal GetMetadataInternal(Firebase.Storage.StorageMetadata metadata)
    // Offset: 0x1837D50
    static ::Firebase::Storage::MetadataInternal* GetMetadataInternal(::Firebase::Storage::StorageMetadata* metadata);
    // static Firebase.Storage.MetadataInternal BuildMetadataInternal(Firebase.Storage.MetadataChange metadataChange)
    // Offset: 0x1837D5C
    static ::Firebase::Storage::MetadataInternal* BuildMetadataInternal(::Firebase::Storage::MetadataChange* metadataChange);
  }; // Firebase.Storage.StorageMetadata
  #pragma pack(pop)
  static check_size<sizeof(StorageMetadata), 24 + sizeof(::Firebase::Storage::MetadataInternal*)> __Firebase_Storage_StorageMetadataSizeCheck;
  static_assert(sizeof(StorageMetadata) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Storage::StorageMetadata::get_Internal
// Il2CppName: get_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Storage::MetadataInternal* (Firebase::Storage::StorageMetadata::*)()>(&Firebase::Storage::StorageMetadata::get_Internal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::StorageMetadata*), "get_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Storage::StorageMetadata::set_Internal
// Il2CppName: set_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Firebase::Storage::StorageMetadata::*)(::Firebase::Storage::MetadataInternal*)>(&Firebase::Storage::StorageMetadata::set_Internal)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Firebase.Storage", "MetadataInternal")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::StorageMetadata*), "set_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Firebase::Storage::StorageMetadata::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Firebase::Storage::StorageMetadata::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Firebase::Storage::StorageMetadata::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Firebase::Storage::StorageMetadata::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Firebase::Storage::StorageMetadata::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::StorageMetadata*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Firebase::Storage::StorageMetadata::GetMetadataInternal
// Il2CppName: GetMetadataInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Storage::MetadataInternal* (*)(::Firebase::Storage::StorageMetadata*)>(&Firebase::Storage::StorageMetadata::GetMetadataInternal)> {
  static const MethodInfo* get() {
    static auto* metadata = &::il2cpp_utils::GetClassFromName("Firebase.Storage", "StorageMetadata")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::StorageMetadata*), "GetMetadataInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{metadata});
  }
};
// Writing MetadataGetter for method: Firebase::Storage::StorageMetadata::BuildMetadataInternal
// Il2CppName: BuildMetadataInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Firebase::Storage::MetadataInternal* (*)(::Firebase::Storage::MetadataChange*)>(&Firebase::Storage::StorageMetadata::BuildMetadataInternal)> {
  static const MethodInfo* get() {
    static auto* metadataChange = &::il2cpp_utils::GetClassFromName("Firebase.Storage", "MetadataChange")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Storage::StorageMetadata*), "BuildMetadataInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{metadataChange});
  }
};
