// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Firebase::Extensions
namespace Firebase::Extensions {
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: Firebase.Extensions
namespace Firebase::Extensions {
  // Forward declaring type: TaskExtension
  class TaskExtension;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Firebase::Extensions::TaskExtension);
DEFINE_IL2CPP_ARG_TYPE(::Firebase::Extensions::TaskExtension*, "Firebase.Extensions", "TaskExtension");
// Type namespace: Firebase.Extensions
namespace Firebase::Extensions {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Firebase.Extensions.TaskExtension
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class TaskExtension : public ::Il2CppObject {
    public:
    // Nested type: ::Firebase::Extensions::TaskExtension::$ContinueWithOnMainThread$c__AnonStorey0
    class $ContinueWithOnMainThread$c__AnonStorey0;
    // static public System.Threading.Tasks.Task ContinueWithOnMainThread(System.Threading.Tasks.Task task, System.Action`1<System.Threading.Tasks.Task> continuation)
    // Offset: 0x190C944
    static ::System::Threading::Tasks::Task* ContinueWithOnMainThread(::System::Threading::Tasks::Task* task, ::System::Action_1<::System::Threading::Tasks::Task*>* continuation);
  }; // Firebase.Extensions.TaskExtension
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Firebase::Extensions::TaskExtension::ContinueWithOnMainThread
// Il2CppName: ContinueWithOnMainThread
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (*)(::System::Threading::Tasks::Task*, ::System::Action_1<::System::Threading::Tasks::Task*>*)>(&Firebase::Extensions::TaskExtension::ContinueWithOnMainThread)> {
  static const MethodInfo* get() {
    static auto* task = &::il2cpp_utils::GetClassFromName("System.Threading.Tasks", "Task")->byval_arg;
    static auto* continuation = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System.Threading.Tasks", "Task")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Firebase::Extensions::TaskExtension*), "ContinueWithOnMainThread", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{task, continuation});
  }
};
