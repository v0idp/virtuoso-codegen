// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Proyecto26.Models
namespace Proyecto26::Models {
  // Forward declaring type: Post
  class Post;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Proyecto26::Models::Post);
DEFINE_IL2CPP_ARG_TYPE(::Proyecto26::Models::Post*, "Proyecto26.Models", "Post");
// Type namespace: Proyecto26.Models
namespace Proyecto26::Models {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Proyecto26.Models.Post
  // [TokenAttribute] Offset: FFFFFFFF
  class Post : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 id
    // Size: 0x4
    // Offset: 0x10
    int id;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 userId
    // Size: 0x4
    // Offset: 0x14
    int userId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.String title
    // Size: 0x8
    // Offset: 0x18
    ::StringW title;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String body
    // Size: 0x8
    // Offset: 0x20
    ::StringW body;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.Int32 id
    [[deprecated("Use field access instead!")]] int& dyn_id();
    // Get instance field reference: public System.Int32 userId
    [[deprecated("Use field access instead!")]] int& dyn_userId();
    // Get instance field reference: public System.String title
    [[deprecated("Use field access instead!")]] ::StringW& dyn_title();
    // Get instance field reference: public System.String body
    [[deprecated("Use field access instead!")]] ::StringW& dyn_body();
    // public System.Void .ctor()
    // Offset: 0xAE2B74
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Post* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Proyecto26::Models::Post::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Post*, creationType>()));
    }
    // public override System.String ToString()
    // Offset: 0xAE2B68
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // Proyecto26.Models.Post
  #pragma pack(pop)
  static check_size<sizeof(Post), 32 + sizeof(::StringW)> __Proyecto26_Models_PostSizeCheck;
  static_assert(sizeof(Post) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Proyecto26::Models::Post::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Proyecto26::Models::Post::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Proyecto26::Models::Post::*)()>(&Proyecto26::Models::Post::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Proyecto26::Models::Post*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
